{
	"id": "48986dc0f10eee40ad70d39b01b7b689",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Jimp.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract Prophecy_Jimpsons is ERC20, Ownable(msg.sender), ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 public constant MAX_SUPPLY = 10_000_000_000 * 10**18;\r\n    bool public initialized;\r\n    uint256 public maxTransferAmount;\r\n    \r\n    // New variables for enhanced security\r\n    uint256 public minHoldTime;              // Minimum time tokens must be held\r\n    uint256 public maxWalletAmount;          // Maximum tokens per wallet\r\n    bool public tradingEnabled;              // Trading status\r\n    mapping(address => uint256) public lastTransferTime;\r\n    mapping(address => uint256) public tokenReceiveTime;  // Track when tokens were received\r\n    mapping(address => bool) public isBlacklisted;        // Blacklist mapping\r\n    mapping(address => bool) public isWhitelisted;        // Whitelist mapping\r\n    uint256 public transferCooldown;\r\n\r\n    // Events\r\n    event TokensInitialized(address indexed initialHolder, uint256 amount);\r\n    event TradingEnabled(bool enabled);\r\n    event BlacklistUpdated(address indexed account, bool status);\r\n    event WhitelistUpdated(address indexed account, bool status);\r\n    event SecurityParamsUpdated(\r\n        uint256 newMaxTransfer,\r\n        uint256 newMaxWallet,\r\n        uint256 newHoldTime,\r\n        uint256 newCooldown\r\n    );\r\n\r\n    constructor() ERC20(\"Prophecy Jimpsons\", \"Jimp\") {\r\n        require(!initialized, \"Already initialized\");\r\n        \r\n        // Mint the total supply to the contract deployer (msg.sender)\r\n        _mint(msg.sender, MAX_SUPPLY);\r\n        \r\n        // Set initialization parameters\r\n        initialized = true;\r\n        maxTransferAmount = 1_000 * 10**18;\r\n        maxWalletAmount = 100_000 * 10**18;  // 1% of total supply\r\n        minHoldTime = 1 days;                     // 24 hours hold time\r\n        transferCooldown = 60;                    // 60 seconds cooldown\r\n        tradingEnabled = false;\r\n        \r\n        // Mark deployer as whitelisted\r\n        isWhitelisted[msg.sender] = true;\r\n        \r\n        // Emit initialization event\r\n        emit TokensInitialized(msg.sender, MAX_SUPPLY);\r\n    }\r\n\r\n    // Modified transfer restrictions\r\n    modifier transferCompliance(address from, address to, uint256 amount) {\r\n        require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\");\r\n        require(tradingEnabled || isWhitelisted[from] || isWhitelisted[to], \"Trading not enabled\");\r\n        \r\n        if (!isWhitelisted[from] && !isWhitelisted[to]) {\r\n            require(amount <= maxTransferAmount, \"Transfer exceeds max amount\");\r\n            require(block.timestamp >= lastTransferTime[from].add(transferCooldown), \"Cooldown active\");\r\n            \r\n            // Check hold time\r\n            if (tokenReceiveTime[from] != 0) {\r\n                require(block.timestamp >= tokenReceiveTime[from].add(minHoldTime), \"Hold time not met\");\r\n            }\r\n            \r\n            // Check max wallet amount for recipient\r\n            uint256 recipientBalance = balanceOf(to).add(amount);\r\n            require(recipientBalance <= maxWalletAmount, \"Exceeds max wallet amount\");\r\n        }\r\n        _;\r\n    }\r\n\r\n    // Enhanced transfer functions\r\n    function transfer(address to, uint256 amount) \r\n        public \r\n        override \r\n        transferCompliance(msg.sender, to, amount) \r\n        nonReentrant \r\n        returns (bool) \r\n    {\r\n        require(to != address(0), \"Invalid recipient\");\r\n        tokenReceiveTime[to] = block.timestamp;\r\n        lastTransferTime[msg.sender] = block.timestamp;\r\n        return super.transfer(to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount)\r\n        public\r\n        override\r\n        transferCompliance(from, to, amount)\r\n        nonReentrant\r\n        returns (bool)\r\n    {\r\n        require(to != address(0), \"Invalid recipient\");\r\n        tokenReceiveTime[to] = block.timestamp;\r\n        lastTransferTime[from] = block.timestamp;\r\n        return super.transferFrom(from, to, amount);\r\n    }\r\n\r\n    // Security management functions\r\n    function setTrading(bool _enabled) external onlyOwner {\r\n        tradingEnabled = _enabled;\r\n        emit TradingEnabled(_enabled);\r\n    }\r\n\r\n    function updateBlacklist(address account, bool status) external onlyOwner {\r\n        isBlacklisted[account] = status;\r\n        emit BlacklistUpdated(account, status);\r\n    }\r\n\r\n    function updateWhitelist(address account, bool status) external onlyOwner {\r\n        isWhitelisted[account] = status;\r\n        emit WhitelistUpdated(account, status);\r\n    }\r\n\r\n    function updateSecurityParams(\r\n        uint256 _maxTransfer,\r\n        uint256 _maxWallet,\r\n        uint256 _holdTime,\r\n        uint256 _cooldown\r\n    ) external onlyOwner {\r\n        maxTransferAmount = _maxTransfer;\r\n        maxWalletAmount = _maxWallet;\r\n        minHoldTime = _holdTime;\r\n        transferCooldown = _cooldown;\r\n        \r\n        emit SecurityParamsUpdated(\r\n            _maxTransfer,\r\n            _maxWallet,\r\n            _holdTime,\r\n            _cooldown\r\n        );\r\n    }\r\n\r\n    // Emergency functions\r\n    function emergencyWithdraw(address token) external onlyOwner {\r\n        require(token != address(this), \"Cannot withdraw token itself\");\r\n        uint256 amount = IERC20(token).balanceOf(address(this));\r\n        IERC20(token).transfer(owner(), amount);\r\n    }\r\n\r\n    // Batch blacklist/whitelist functions\r\n    function batchUpdateBlacklist(address[] calldata accounts, bool status) external onlyOwner {\r\n        for(uint256 i = 0; i < accounts.length; i++) {\r\n            isBlacklisted[accounts[i]] = status;\r\n            emit BlacklistUpdated(accounts[i], status);\r\n        }\r\n    }\r\n\r\n    function batchUpdateWhitelist(address[] calldata accounts, bool status) external onlyOwner {\r\n        for(uint256 i = 0; i < accounts.length; i++) {\r\n            isWhitelisted[accounts[i]] = status;\r\n            emit WhitelistUpdated(accounts[i], status);\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x2B ADD GAS 0xD5 BASEFEE 0xBF 0xAE PUSH31 0x6A686AA121D945836059001141460B538040A3E4C3AB5064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x2B ADD GAS 0xD5 BASEFEE 0xBF 0xAE PUSH31 0x6A686AA121D945836059001141460B538040A3E4C3AB5064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Jimp.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Jimp.sol": {
				"Prophecy_Jimpsons": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "BlacklistUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxTransfer",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxWallet",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newHoldTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newCooldown",
									"type": "uint256"
								}
							],
							"name": "SecurityParamsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "initialHolder",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensInitialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "TradingEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "WhitelistUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "batchUpdateBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "batchUpdateWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastTransferTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTransferAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxWalletAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minHoldTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								}
							],
							"name": "setTrading",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenReceiveTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferCooldown",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "updateBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxTransfer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxWallet",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_holdTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_cooldown",
									"type": "uint256"
								}
							],
							"name": "updateSecurityParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "updateWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Jimp.sol\":297:6267  contract Prophecy_Jimpsons is ERC20, Ownable(msg.sender), ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Jimp.sol\":1606:2413  constructor() ERC20(\"Prophecy Jimpsons\", \"Jimp\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/Jimp.sol\":342:352  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  0x50726f7068656379204a696d70736f6e73000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4a696d7000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Jimp.sol\":1675:1686  initialized */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/Jimp.sol\":1674:1686  !initialized */\n  iszero\n    /* \"contracts/Jimp.sol\":1666:1710  require(!initialized, \"Already initialized\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/Jimp.sol\":1803:1832  _mint(msg.sender, MAX_SUPPLY) */\n  tag_21\n    /* \"contracts/Jimp.sol\":1809:1819  msg.sender */\n  caller\n    /* \"contracts/Jimp.sol\":450:473  10_000_000_000 * 10**18 */\n  0x204fce5e3e25026110000000\n    /* \"contracts/Jimp.sol\":1803:1808  _mint */\n  shl(0x20, tag_22)\n    /* \"contracts/Jimp.sol\":1803:1832  _mint(msg.sender, MAX_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/Jimp.sol\":1909:1913  true */\n  0x01\n    /* \"contracts/Jimp.sol\":1895:1906  initialized */\n  0x07\n  0x00\n    /* \"contracts/Jimp.sol\":1895:1913  initialized = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Jimp.sol\":1944:1958  1_000 * 10**18 */\n  0x3635c9adc5dea00000\n    /* \"contracts/Jimp.sol\":1924:1941  maxTransferAmount */\n  0x08\n    /* \"contracts/Jimp.sol\":1924:1958  maxTransferAmount = 1_000 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Jimp.sol\":1987:2003  100_000 * 10**18 */\n  0x152d02c7e14af6800000\n    /* \"contracts/Jimp.sol\":1969:1984  maxWalletAmount */\n  0x0a\n    /* \"contracts/Jimp.sol\":1969:2003  maxWalletAmount = 100_000 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Jimp.sol\":2051:2057  1 days */\n  0x015180\n    /* \"contracts/Jimp.sol\":2037:2048  minHoldTime */\n  0x09\n    /* \"contracts/Jimp.sol\":2037:2057  minHoldTime = 1 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Jimp.sol\":2129:2131  60 */\n  0x3c\n    /* \"contracts/Jimp.sol\":2110:2126  transferCooldown */\n  0x10\n    /* \"contracts/Jimp.sol\":2110:2131  transferCooldown = 60 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Jimp.sol\":2201:2206  false */\n  0x00\n    /* \"contracts/Jimp.sol\":2184:2198  tradingEnabled */\n  0x0b\n  0x00\n    /* \"contracts/Jimp.sol\":2184:2206  tradingEnabled = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Jimp.sol\":2296:2300  true */\n  0x01\n    /* \"contracts/Jimp.sol\":2268:2281  isWhitelisted */\n  0x0f\n    /* \"contracts/Jimp.sol\":2268:2293  isWhitelisted[msg.sender] */\n  0x00\n    /* \"contracts/Jimp.sol\":2282:2292  msg.sender */\n  caller\n    /* \"contracts/Jimp.sol\":2268:2293  isWhitelisted[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/Jimp.sol\":2268:2300  isWhitelisted[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Jimp.sol\":2382:2392  msg.sender */\n  caller\n    /* \"contracts/Jimp.sol\":2364:2405  TokensInitialized(msg.sender, MAX_SUPPLY) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x9d5570c03a71af73640da09c132d73bb3efe7ca4f55516a1afc2597cbdfd620c\n    /* \"contracts/Jimp.sol\":450:473  10_000_000_000 * 10**18 */\n  0x204fce5e3e25026110000000\n    /* \"contracts/Jimp.sol\":2364:2405  TokensInitialized(msg.sender, MAX_SUPPLY) */\n  mload(0x40)\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/Jimp.sol\":297:6267  contract Prophecy_Jimpsons is ERC20, Ownable(msg.sender), ReentrancyGuard {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_36)\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_41)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_42\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_43:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_44:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_45:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_46:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_76:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_78\n  tag_45\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":714:798   */\ntag_77:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_47:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_48:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_49:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_50:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_83\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_49\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1429:1468   */\n  tag_84\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_49\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_51:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_52:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_53:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_88\n    /* \"#utility.yul\":1818:1852   */\n  tag_89\n    /* \"#utility.yul\":1827:1851   */\n  tag_90\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_51\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1818:1852   */\n  tag_52\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1800:1853   */\n  tag_51\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_54:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_55:\n    /* \"#utility.yul\":2056:2095   */\n  tag_93\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_53\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2117:2208   */\n  tag_94\n    /* \"#utility.yul\":2166:2207   */\n  tag_95\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_50\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_56:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_57:\n    /* \"#utility.yul\":2377:2409   */\n  tag_98\n  tag_56\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2418:2483   */\n  tag_99\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_55\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_58:\n    /* \"#utility.yul\":2555:2675   */\ntag_101:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_104\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_57\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_101)\ntag_103:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_59:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_107\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_47\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2906:2935   */\n  tag_108\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_48\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_109:\n    /* \"#utility.yul\":3133:3213   */\n  tag_110\n    /* \"#utility.yul\":3189:3211   */\n  tag_111\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_48\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_58\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_106:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_60:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_61:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_114\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_60\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_62:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_116\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_61\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_118\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_43\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_120\n  tag_44\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4038:4094   */\ntag_119:\n    /* \"#utility.yul\":4118:4156   */\n  tag_121\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_46\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4203:4270   */\n  tag_122\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_59\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_124\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_125:\n    /* \"#utility.yul\":5144:5211   */\n  tag_126\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_62\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_123)\n    /* \"#utility.yul\":4365:4983   */\ntag_124:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_127\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_47\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_128:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_128)\ntag_130:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_132\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_61\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_131:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_123:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_63:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_64:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_135\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_63\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_65:\n    /* \"#utility.yul\":5555:5579   */\n  tag_137\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_64\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_13:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_139\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_65\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:5989   */\ntag_66:\n    /* \"#utility.yul\":5904:5915   */\n  0x00\n    /* \"#utility.yul\":5938:5944   */\n  dup3\n    /* \"#utility.yul\":5933:5936   */\n  dup3\n    /* \"#utility.yul\":5926:5945   */\n  mstore\n    /* \"#utility.yul\":5978:5982   */\n  0x20\n    /* \"#utility.yul\":5973:5976   */\n  dup3\n    /* \"#utility.yul\":5969:5983   */\n  add\n    /* \"#utility.yul\":5954:5983   */\n  swap1\n  pop\n    /* \"#utility.yul\":5820:5989   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5995:6164   */\ntag_67:\n    /* \"#utility.yul\":6135:6156   */\n  0x416c726561647920696e697469616c697a656400000000000000000000000000\n    /* \"#utility.yul\":6131:6132   */\n  0x00\n    /* \"#utility.yul\":6123:6129   */\n  dup3\n    /* \"#utility.yul\":6119:6133   */\n  add\n    /* \"#utility.yul\":6112:6157   */\n  mstore\n    /* \"#utility.yul\":5995:6164   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6170:6536   */\ntag_68:\n    /* \"#utility.yul\":6312:6315   */\n  0x00\n    /* \"#utility.yul\":6333:6400   */\n  tag_143\n    /* \"#utility.yul\":6397:6399   */\n  0x13\n    /* \"#utility.yul\":6392:6395   */\n  dup4\n    /* \"#utility.yul\":6333:6400   */\n  tag_66\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6326:6400   */\n  swap2\n  pop\n    /* \"#utility.yul\":6409:6502   */\n  tag_144\n    /* \"#utility.yul\":6498:6501   */\n  dup3\n    /* \"#utility.yul\":6409:6502   */\n  tag_67\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6527:6529   */\n  0x20\n    /* \"#utility.yul\":6522:6525   */\n  dup3\n    /* \"#utility.yul\":6518:6530   */\n  add\n    /* \"#utility.yul\":6511:6530   */\n  swap1\n  pop\n    /* \"#utility.yul\":6170:6536   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6542:6961   */\ntag_20:\n    /* \"#utility.yul\":6708:6712   */\n  0x00\n    /* \"#utility.yul\":6746:6748   */\n  0x20\n    /* \"#utility.yul\":6735:6744   */\n  dup3\n    /* \"#utility.yul\":6731:6749   */\n  add\n    /* \"#utility.yul\":6723:6749   */\n  swap1\n  pop\n    /* \"#utility.yul\":6795:6804   */\n  dup2\n    /* \"#utility.yul\":6789:6793   */\n  dup2\n    /* \"#utility.yul\":6785:6805   */\n  sub\n    /* \"#utility.yul\":6781:6782   */\n  0x00\n    /* \"#utility.yul\":6770:6779   */\n  dup4\n    /* \"#utility.yul\":6766:6783   */\n  add\n    /* \"#utility.yul\":6759:6806   */\n  mstore\n    /* \"#utility.yul\":6823:6954   */\n  tag_146\n    /* \"#utility.yul\":6949:6953   */\n  dup2\n    /* \"#utility.yul\":6823:6954   */\n  tag_68\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6815:6954   */\n  swap1\n  pop\n    /* \"#utility.yul\":6542:6961   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6967:7085   */\ntag_69:\n    /* \"#utility.yul\":7054:7078   */\n  tag_148\n    /* \"#utility.yul\":7072:7077   */\n  dup2\n    /* \"#utility.yul\":7054:7078   */\n  tag_51\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7049:7052   */\n  dup3\n    /* \"#utility.yul\":7042:7079   */\n  mstore\n    /* \"#utility.yul\":6967:7085   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7091:7313   */\ntag_24:\n    /* \"#utility.yul\":7184:7188   */\n  0x00\n    /* \"#utility.yul\":7222:7224   */\n  0x20\n    /* \"#utility.yul\":7211:7220   */\n  dup3\n    /* \"#utility.yul\":7207:7225   */\n  add\n    /* \"#utility.yul\":7199:7225   */\n  swap1\n  pop\n    /* \"#utility.yul\":7235:7306   */\n  tag_150\n    /* \"#utility.yul\":7303:7304   */\n  0x00\n    /* \"#utility.yul\":7292:7301   */\n  dup4\n    /* \"#utility.yul\":7288:7305   */\n  add\n    /* \"#utility.yul\":7279:7285   */\n  dup5\n    /* \"#utility.yul\":7235:7306   */\n  tag_69\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7091:7313   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7319:7499   */\ntag_70:\n    /* \"#utility.yul\":7367:7444   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7364:7365   */\n  0x00\n    /* \"#utility.yul\":7357:7445   */\n  mstore\n    /* \"#utility.yul\":7464:7468   */\n  0x11\n    /* \"#utility.yul\":7461:7462   */\n  0x04\n    /* \"#utility.yul\":7454:7469   */\n  mstore\n    /* \"#utility.yul\":7488:7492   */\n  0x24\n    /* \"#utility.yul\":7485:7486   */\n  0x00\n    /* \"#utility.yul\":7478:7493   */\n  revert\n    /* \"#utility.yul\":7505:7696   */\ntag_35:\n    /* \"#utility.yul\":7545:7548   */\n  0x00\n    /* \"#utility.yul\":7564:7584   */\n  tag_153\n    /* \"#utility.yul\":7582:7583   */\n  dup3\n    /* \"#utility.yul\":7564:7584   */\n  tag_51\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7559:7584   */\n  swap2\n  pop\n    /* \"#utility.yul\":7598:7618   */\n  tag_154\n    /* \"#utility.yul\":7616:7617   */\n  dup4\n    /* \"#utility.yul\":7598:7618   */\n  tag_51\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7593:7618   */\n  swap3\n  pop\n    /* \"#utility.yul\":7641:7642   */\n  dup3\n    /* \"#utility.yul\":7638:7639   */\n  dup3\n    /* \"#utility.yul\":7634:7643   */\n  add\n    /* \"#utility.yul\":7627:7643   */\n  swap1\n  pop\n    /* \"#utility.yul\":7662:7665   */\n  dup1\n    /* \"#utility.yul\":7659:7660   */\n  dup3\n    /* \"#utility.yul\":7656:7666   */\n  gt\n    /* \"#utility.yul\":7653:7689   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":7669:7687   */\n  tag_156\n  tag_70\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7653:7689   */\ntag_155:\n    /* \"#utility.yul\":7505:7696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7702:8144   */\ntag_39:\n    /* \"#utility.yul\":7851:7855   */\n  0x00\n    /* \"#utility.yul\":7889:7891   */\n  0x60\n    /* \"#utility.yul\":7878:7887   */\n  dup3\n    /* \"#utility.yul\":7874:7892   */\n  add\n    /* \"#utility.yul\":7866:7892   */\n  swap1\n  pop\n    /* \"#utility.yul\":7902:7973   */\n  tag_158\n    /* \"#utility.yul\":7970:7971   */\n  0x00\n    /* \"#utility.yul\":7959:7968   */\n  dup4\n    /* \"#utility.yul\":7955:7972   */\n  add\n    /* \"#utility.yul\":7946:7952   */\n  dup7\n    /* \"#utility.yul\":7902:7973   */\n  tag_65\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7983:8055   */\n  tag_159\n    /* \"#utility.yul\":8051:8053   */\n  0x20\n    /* \"#utility.yul\":8040:8049   */\n  dup4\n    /* \"#utility.yul\":8036:8054   */\n  add\n    /* \"#utility.yul\":8027:8033   */\n  dup6\n    /* \"#utility.yul\":7983:8055   */\n  tag_69\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":8065:8137   */\n  tag_160\n    /* \"#utility.yul\":8133:8135   */\n  0x40\n    /* \"#utility.yul\":8122:8131   */\n  dup4\n    /* \"#utility.yul\":8118:8136   */\n  add\n    /* \"#utility.yul\":8109:8115   */\n  dup5\n    /* \"#utility.yul\":8065:8137   */\n  tag_69\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7702:8144   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Jimp.sol\":297:6267  contract Prophecy_Jimpsons is ERC20, Ownable(msg.sender), ReentrancyGuard {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Jimp.sol\":297:6267  contract Prophecy_Jimpsons is ERC20, Ownable(msg.sender), ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x611274c5\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x9155e083\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xaa4bde28\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xaa4bde28\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x9155e083\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9e75723\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x70a08231\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8f70ccf7\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x611274c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x68f16293\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x6ff1c9bc\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x23b872dd\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x330671ad\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x330671ad\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3af32abf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4ada218b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x6072e6a8\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x283af019\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x0d2d8a31\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x0d2d8a31\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0d392cd9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x158ef93e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x02cd093d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/Jimp.sol\":4870:5363  function updateSecurityParams(... */\n    tag_3:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":820:871  mapping(address => uint256) public lastTransferTime */\n    tag_6:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":4689:4862  function updateWhitelist(address account, bool status) external onlyOwner {... */\n    tag_7:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/Jimp.sol\":480:503  bool public initialized */\n    tag_8:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_9:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":3902:4316  function transferFrom(address from, address to, uint256 amount)... */\n    tag_10:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":878:929  mapping(address => uint256) public tokenReceiveTime */\n    tag_11:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_12:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":413:473  uint256 public constant MAX_SUPPLY = 10_000_000_000 * 10**18 */\n    tag_13:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":599:625  uint256 public minHoldTime */\n    tag_14:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":1052:1097  mapping(address => bool) public isWhitelisted */\n    tag_15:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":756:782  bool public tradingEnabled */\n    tag_16:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":5710:5983  function batchUpdateBlacklist(address[] calldata accounts, bool status) external onlyOwner {... */\n    tag_17:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/Jimp.sol\":5991:6264  function batchUpdateWhitelist(address[] calldata accounts, bool status) external onlyOwner {... */\n    tag_18:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/Jimp.sol\":1132:1163  uint256 public transferCooldown */\n    tag_19:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":5399:5658  function emergencyWithdraw(address token) external onlyOwner {... */\n    tag_20:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_23:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":4362:4500  function setTrading(bool _enabled) external onlyOwner {... */\n    tag_24:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      tag_122\n      jump\t// in\n    tag_119:\n      stop\n        /* \"contracts/Jimp.sol\":4508:4681  function updateBlacklist(address account, bool status) external onlyOwner {... */\n    tag_25:\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_26:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":3490:3894  function transfer(address to, uint256 amount) ... */\n    tag_27:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":510:542  uint256 public maxTransferAmount */\n    tag_28:\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":681:711  uint256 public maxWalletAmount */\n    tag_29:\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_30:\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      tag_142\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      stop\n        /* \"contracts/Jimp.sol\":972:1017  mapping(address => bool) public isBlacklisted */\n    tag_32:\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Jimp.sol\":4870:5363  function updateSecurityParams(... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/Jimp.sol\":5073:5085  _maxTransfer */\n      dup4\n        /* \"contracts/Jimp.sol\":5053:5070  maxTransferAmount */\n      0x08\n        /* \"contracts/Jimp.sol\":5053:5085  maxTransferAmount = _maxTransfer */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":5114:5124  _maxWallet */\n      dup3\n        /* \"contracts/Jimp.sol\":5096:5111  maxWalletAmount */\n      0x0a\n        /* \"contracts/Jimp.sol\":5096:5124  maxWalletAmount = _maxWallet */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":5149:5158  _holdTime */\n      dup2\n        /* \"contracts/Jimp.sol\":5135:5146  minHoldTime */\n      0x09\n        /* \"contracts/Jimp.sol\":5135:5158  minHoldTime = _holdTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":5188:5197  _cooldown */\n      dup1\n        /* \"contracts/Jimp.sol\":5169:5185  transferCooldown */\n      0x10\n        /* \"contracts/Jimp.sol\":5169:5197  transferCooldown = _cooldown */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":5223:5355  SecurityParamsUpdated(... */\n      0xbb5d5c94dff5adb0bc0e043a6c2cf9bb8153231069831102f0e8e53b89924f1f\n        /* \"contracts/Jimp.sol\":5259:5271  _maxTransfer */\n      dup5\n        /* \"contracts/Jimp.sol\":5286:5296  _maxWallet */\n      dup5\n        /* \"contracts/Jimp.sol\":5311:5320  _holdTime */\n      dup5\n        /* \"contracts/Jimp.sol\":5335:5344  _cooldown */\n      dup5\n        /* \"contracts/Jimp.sol\":5223:5355  SecurityParamsUpdated(... */\n      mload(0x40)\n      tag_155\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Jimp.sol\":4870:5363  function updateSecurityParams(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_159\n      jump\t// in\n    tag_160:\n      dup1\n      iszero\n      tag_161\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_162\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_161)\n    tag_162:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_163:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_163\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Jimp.sol\":820:871  mapping(address => uint256) public lastTransferTime */\n    tag_57:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Jimp.sol\":4689:4862  function updateWhitelist(address account, bool status) external onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/Jimp.sol\":4799:4805  status */\n      dup1\n        /* \"contracts/Jimp.sol\":4774:4787  isWhitelisted */\n      0x0f\n        /* \"contracts/Jimp.sol\":4774:4796  isWhitelisted[account] */\n      0x00\n        /* \"contracts/Jimp.sol\":4788:4795  account */\n      dup5\n        /* \"contracts/Jimp.sol\":4774:4796  isWhitelisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Jimp.sol\":4774:4805  isWhitelisted[account] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":4838:4845  account */\n      dup2\n        /* \"contracts/Jimp.sol\":4821:4854  WhitelistUpdated(account, status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d\n        /* \"contracts/Jimp.sol\":4847:4853  status */\n      dup3\n        /* \"contracts/Jimp.sol\":4821:4854  WhitelistUpdated(account, status) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Jimp.sol\":4689:4862  function updateWhitelist(address account, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Jimp.sol\":480:503  bool public initialized */\n    tag_65:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Jimp.sol\":3902:4316  function transferFrom(address from, address to, uint256 amount)... */\n    tag_73:\n        /* \"contracts/Jimp.sol\":4086:4090  bool */\n      0x00\n        /* \"contracts/Jimp.sol\":4028:4032  from */\n      dup4\n        /* \"contracts/Jimp.sol\":4034:4036  to */\n      dup4\n        /* \"contracts/Jimp.sol\":4038:4044  amount */\n      dup4\n        /* \"contracts/Jimp.sol\":2550:2563  isBlacklisted */\n      0x0e\n        /* \"contracts/Jimp.sol\":2550:2569  isBlacklisted[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":2564:2568  from */\n      dup5\n        /* \"contracts/Jimp.sol\":2550:2569  isBlacklisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2549:2569  !isBlacklisted[from] */\n      iszero\n        /* \"contracts/Jimp.sol\":2549:2591  !isBlacklisted[from] && !isBlacklisted[to] */\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n        /* \"contracts/Jimp.sol\":2574:2587  isBlacklisted */\n      0x0e\n        /* \"contracts/Jimp.sol\":2574:2591  isBlacklisted[to] */\n      0x00\n        /* \"contracts/Jimp.sol\":2588:2590  to */\n      dup4\n        /* \"contracts/Jimp.sol\":2574:2591  isBlacklisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2573:2591  !isBlacklisted[to] */\n      iszero\n        /* \"contracts/Jimp.sol\":2549:2591  !isBlacklisted[from] && !isBlacklisted[to] */\n    tag_175:\n        /* \"contracts/Jimp.sol\":2541:2618  require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/Jimp.sol\":2637:2651  tradingEnabled */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2637:2674  tradingEnabled || isWhitelisted[from] */\n      dup1\n      tag_179\n      jumpi\n      pop\n        /* \"contracts/Jimp.sol\":2655:2668  isWhitelisted */\n      0x0f\n        /* \"contracts/Jimp.sol\":2655:2674  isWhitelisted[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":2669:2673  from */\n      dup5\n        /* \"contracts/Jimp.sol\":2655:2674  isWhitelisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2637:2674  tradingEnabled || isWhitelisted[from] */\n    tag_179:\n        /* \"contracts/Jimp.sol\":2637:2695  tradingEnabled || isWhitelisted[from] || isWhitelisted[to] */\n      dup1\n      tag_180\n      jumpi\n      pop\n        /* \"contracts/Jimp.sol\":2678:2691  isWhitelisted */\n      0x0f\n        /* \"contracts/Jimp.sol\":2678:2695  isWhitelisted[to] */\n      0x00\n        /* \"contracts/Jimp.sol\":2692:2694  to */\n      dup4\n        /* \"contracts/Jimp.sol\":2678:2695  isWhitelisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2637:2695  tradingEnabled || isWhitelisted[from] || isWhitelisted[to] */\n    tag_180:\n        /* \"contracts/Jimp.sol\":2629:2719  require(tradingEnabled || isWhitelisted[from] || isWhitelisted[to], \"Trading not enabled\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/Jimp.sol\":2745:2758  isWhitelisted */\n      0x0f\n        /* \"contracts/Jimp.sol\":2745:2764  isWhitelisted[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":2759:2763  from */\n      dup5\n        /* \"contracts/Jimp.sol\":2745:2764  isWhitelisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2744:2764  !isWhitelisted[from] */\n      iszero\n        /* \"contracts/Jimp.sol\":2744:2786  !isWhitelisted[from] && !isWhitelisted[to] */\n      dup1\n      iszero\n      tag_184\n      jumpi\n      pop\n        /* \"contracts/Jimp.sol\":2769:2782  isWhitelisted */\n      0x0f\n        /* \"contracts/Jimp.sol\":2769:2786  isWhitelisted[to] */\n      0x00\n        /* \"contracts/Jimp.sol\":2783:2785  to */\n      dup4\n        /* \"contracts/Jimp.sol\":2769:2786  isWhitelisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2768:2786  !isWhitelisted[to] */\n      iszero\n        /* \"contracts/Jimp.sol\":2744:2786  !isWhitelisted[from] && !isWhitelisted[to] */\n    tag_184:\n        /* \"contracts/Jimp.sol\":2740:3427  if (!isWhitelisted[from] && !isWhitelisted[to]) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"contracts/Jimp.sol\":2821:2838  maxTransferAmount */\n      sload(0x08)\n        /* \"contracts/Jimp.sol\":2811:2817  amount */\n      dup2\n        /* \"contracts/Jimp.sol\":2811:2838  amount <= maxTransferAmount */\n      gt\n      iszero\n        /* \"contracts/Jimp.sol\":2803:2870  require(amount <= maxTransferAmount, \"Transfer exceeds max amount\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/Jimp.sol\":2912:2956  lastTransferTime[from].add(transferCooldown) */\n      tag_189\n        /* \"contracts/Jimp.sol\":2939:2955  transferCooldown */\n      sload(0x10)\n        /* \"contracts/Jimp.sol\":2912:2928  lastTransferTime */\n      0x0c\n        /* \"contracts/Jimp.sol\":2912:2934  lastTransferTime[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":2929:2933  from */\n      dup7\n        /* \"contracts/Jimp.sol\":2912:2934  lastTransferTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Jimp.sol\":2912:2938  lastTransferTime[from].add */\n      tag_190\n      swap1\n        /* \"contracts/Jimp.sol\":2912:2956  lastTransferTime[from].add(transferCooldown) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"contracts/Jimp.sol\":2893:2908  block.timestamp */\n      timestamp\n        /* \"contracts/Jimp.sol\":2893:2956  block.timestamp >= lastTransferTime[from].add(transferCooldown) */\n      lt\n      iszero\n        /* \"contracts/Jimp.sol\":2885:2976  require(block.timestamp >= lastTransferTime[from].add(transferCooldown), \"Cooldown active\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/Jimp.sol\":3067:3068  0 */\n      0x00\n        /* \"contracts/Jimp.sol\":3041:3057  tokenReceiveTime */\n      0x0d\n        /* \"contracts/Jimp.sol\":3041:3063  tokenReceiveTime[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":3058:3062  from */\n      dup6\n        /* \"contracts/Jimp.sol\":3041:3063  tokenReceiveTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Jimp.sol\":3041:3068  tokenReceiveTime[from] != 0 */\n      eq\n        /* \"contracts/Jimp.sol\":3037:3193  if (tokenReceiveTime[from] != 0) {... */\n      tag_194\n      jumpi\n        /* \"contracts/Jimp.sol\":3116:3155  tokenReceiveTime[from].add(minHoldTime) */\n      tag_195\n        /* \"contracts/Jimp.sol\":3143:3154  minHoldTime */\n      sload(0x09)\n        /* \"contracts/Jimp.sol\":3116:3132  tokenReceiveTime */\n      0x0d\n        /* \"contracts/Jimp.sol\":3116:3138  tokenReceiveTime[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":3133:3137  from */\n      dup7\n        /* \"contracts/Jimp.sol\":3116:3138  tokenReceiveTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Jimp.sol\":3116:3142  tokenReceiveTime[from].add */\n      tag_190\n      swap1\n        /* \"contracts/Jimp.sol\":3116:3155  tokenReceiveTime[from].add(minHoldTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_195:\n        /* \"contracts/Jimp.sol\":3097:3112  block.timestamp */\n      timestamp\n        /* \"contracts/Jimp.sol\":3097:3155  block.timestamp >= tokenReceiveTime[from].add(minHoldTime) */\n      lt\n      iszero\n        /* \"contracts/Jimp.sol\":3089:3177  require(block.timestamp >= tokenReceiveTime[from].add(minHoldTime), \"Hold time not met\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"contracts/Jimp.sol\":3037:3193  if (tokenReceiveTime[from] != 0) {... */\n    tag_194:\n        /* \"contracts/Jimp.sol\":3275:3299  uint256 recipientBalance */\n      0x00\n        /* \"contracts/Jimp.sol\":3302:3327  balanceOf(to).add(amount) */\n      tag_199\n        /* \"contracts/Jimp.sol\":3320:3326  amount */\n      dup3\n        /* \"contracts/Jimp.sol\":3302:3315  balanceOf(to) */\n      tag_200\n        /* \"contracts/Jimp.sol\":3312:3314  to */\n      dup6\n        /* \"contracts/Jimp.sol\":3302:3311  balanceOf */\n      tag_111\n        /* \"contracts/Jimp.sol\":3302:3315  balanceOf(to) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/Jimp.sol\":3302:3319  balanceOf(to).add */\n      tag_190\n      swap1\n        /* \"contracts/Jimp.sol\":3302:3327  balanceOf(to).add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"contracts/Jimp.sol\":3275:3327  uint256 recipientBalance = balanceOf(to).add(amount) */\n      swap1\n      pop\n        /* \"contracts/Jimp.sol\":3370:3385  maxWalletAmount */\n      sload(0x0a)\n        /* \"contracts/Jimp.sol\":3350:3366  recipientBalance */\n      dup2\n        /* \"contracts/Jimp.sol\":3350:3385  recipientBalance <= maxWalletAmount */\n      gt\n      iszero\n        /* \"contracts/Jimp.sol\":3342:3415  require(recipientBalance <= maxWalletAmount, \"Exceeds max wallet amount\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/Jimp.sol\":2788:3427  {... */\n      pop\n        /* \"contracts/Jimp.sol\":2740:3427  if (!isWhitelisted[from] && !isWhitelisted[to]) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_205\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_206\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/Jimp.sol\":4130:4131  0 */\n      0x00\n        /* \"contracts/Jimp.sol\":4116:4132  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Jimp.sol\":4116:4118  to */\n      dup7\n        /* \"contracts/Jimp.sol\":4116:4132  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Jimp.sol\":4108:4154  require(to != address(0), \"Invalid recipient\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/Jimp.sol\":4188:4203  block.timestamp */\n      timestamp\n        /* \"contracts/Jimp.sol\":4165:4181  tokenReceiveTime */\n      0x0d\n        /* \"contracts/Jimp.sol\":4165:4185  tokenReceiveTime[to] */\n      0x00\n        /* \"contracts/Jimp.sol\":4182:4184  to */\n      dup9\n        /* \"contracts/Jimp.sol\":4165:4185  tokenReceiveTime[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Jimp.sol\":4165:4203  tokenReceiveTime[to] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":4239:4254  block.timestamp */\n      timestamp\n        /* \"contracts/Jimp.sol\":4214:4230  lastTransferTime */\n      0x0c\n        /* \"contracts/Jimp.sol\":4214:4236  lastTransferTime[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":4231:4235  from */\n      dup10\n        /* \"contracts/Jimp.sol\":4214:4236  lastTransferTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Jimp.sol\":4214:4254  lastTransferTime[from] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":4272:4308  super.transferFrom(from, to, amount) */\n      tag_211\n        /* \"contracts/Jimp.sol\":4291:4295  from */\n      dup8\n        /* \"contracts/Jimp.sol\":4297:4299  to */\n      dup8\n        /* \"contracts/Jimp.sol\":4301:4307  amount */\n      dup8\n        /* \"contracts/Jimp.sol\":4272:4290  super.transferFrom */\n      tag_212\n        /* \"contracts/Jimp.sol\":4272:4308  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_211:\n        /* \"contracts/Jimp.sol\":4265:4308  return super.transferFrom(from, to, amount) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_213\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_214\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/Jimp.sol\":3902:4316  function transferFrom(address from, address to, uint256 amount)... */\n      pop\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Jimp.sol\":878:929  mapping(address => uint256) public tokenReceiveTime */\n    tag_77:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Jimp.sol\":413:473  uint256 public constant MAX_SUPPLY = 10_000_000_000 * 10**18 */\n    tag_84:\n        /* \"contracts/Jimp.sol\":450:473  10_000_000_000 * 10**18 */\n      0x204fce5e3e25026110000000\n        /* \"contracts/Jimp.sol\":413:473  uint256 public constant MAX_SUPPLY = 10_000_000_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"contracts/Jimp.sol\":599:625  uint256 public minHoldTime */\n    tag_87:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/Jimp.sol\":1052:1097  mapping(address => bool) public isWhitelisted */\n    tag_91:\n      mstore(0x20, 0x0f)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Jimp.sol\":756:782  bool public tradingEnabled */\n    tag_94:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Jimp.sol\":5710:5983  function batchUpdateBlacklist(address[] calldata accounts, bool status) external onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_217:\n        /* \"contracts/Jimp.sol\":5816:5825  uint256 i */\n      0x00\n        /* \"contracts/Jimp.sol\":5828:5829  0 */\n      0x00\n        /* \"contracts/Jimp.sol\":5816:5829  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/Jimp.sol\":5812:5976  for(uint256 i = 0; i < accounts.length; i++) {... */\n    tag_219:\n        /* \"contracts/Jimp.sol\":5835:5843  accounts */\n      dup4\n      dup4\n        /* \"contracts/Jimp.sol\":5835:5850  accounts.length */\n      swap1\n      pop\n        /* \"contracts/Jimp.sol\":5831:5832  i */\n      dup2\n        /* \"contracts/Jimp.sol\":5831:5850  i < accounts.length */\n      lt\n        /* \"contracts/Jimp.sol\":5812:5976  for(uint256 i = 0; i < accounts.length; i++) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"contracts/Jimp.sol\":5901:5907  status */\n      dup2\n        /* \"contracts/Jimp.sol\":5872:5885  isBlacklisted */\n      0x0e\n        /* \"contracts/Jimp.sol\":5872:5898  isBlacklisted[accounts[i]] */\n      0x00\n        /* \"contracts/Jimp.sol\":5886:5894  accounts */\n      dup7\n      dup7\n        /* \"contracts/Jimp.sol\":5895:5896  i */\n      dup6\n        /* \"contracts/Jimp.sol\":5886:5897  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_223\n      tag_224\n      jump\t// in\n    tag_223:\n    tag_222:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_225\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_225:\n        /* \"contracts/Jimp.sol\":5872:5898  isBlacklisted[accounts[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Jimp.sol\":5872:5907  isBlacklisted[accounts[i]] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":5944:5952  accounts */\n      dup4\n      dup4\n        /* \"contracts/Jimp.sol\":5953:5954  i */\n      dup3\n        /* \"contracts/Jimp.sol\":5944:5955  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_226\n      jumpi\n      tag_227\n      tag_224\n      jump\t// in\n    tag_227:\n    tag_226:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_228:\n        /* \"contracts/Jimp.sol\":5927:5964  BlacklistUpdated(accounts[i], status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac\n        /* \"contracts/Jimp.sol\":5957:5963  status */\n      dup4\n        /* \"contracts/Jimp.sol\":5927:5964  BlacklistUpdated(accounts[i], status) */\n      mload(0x40)\n      tag_229\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Jimp.sol\":5852:5855  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Jimp.sol\":5812:5976  for(uint256 i = 0; i < accounts.length; i++) {... */\n      jump(tag_219)\n    tag_220:\n      pop\n        /* \"contracts/Jimp.sol\":5710:5983  function batchUpdateBlacklist(address[] calldata accounts, bool status) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Jimp.sol\":5991:6264  function batchUpdateWhitelist(address[] calldata accounts, bool status) external onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/Jimp.sol\":6097:6106  uint256 i */\n      0x00\n        /* \"contracts/Jimp.sol\":6109:6110  0 */\n      0x00\n        /* \"contracts/Jimp.sol\":6097:6110  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/Jimp.sol\":6093:6257  for(uint256 i = 0; i < accounts.length; i++) {... */\n    tag_233:\n        /* \"contracts/Jimp.sol\":6116:6124  accounts */\n      dup4\n      dup4\n        /* \"contracts/Jimp.sol\":6116:6131  accounts.length */\n      swap1\n      pop\n        /* \"contracts/Jimp.sol\":6112:6113  i */\n      dup2\n        /* \"contracts/Jimp.sol\":6112:6131  i < accounts.length */\n      lt\n        /* \"contracts/Jimp.sol\":6093:6257  for(uint256 i = 0; i < accounts.length; i++) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"contracts/Jimp.sol\":6182:6188  status */\n      dup2\n        /* \"contracts/Jimp.sol\":6153:6166  isWhitelisted */\n      0x0f\n        /* \"contracts/Jimp.sol\":6153:6179  isWhitelisted[accounts[i]] */\n      0x00\n        /* \"contracts/Jimp.sol\":6167:6175  accounts */\n      dup7\n      dup7\n        /* \"contracts/Jimp.sol\":6176:6177  i */\n      dup6\n        /* \"contracts/Jimp.sol\":6167:6178  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_236\n      jumpi\n      tag_237\n      tag_224\n      jump\t// in\n    tag_237:\n    tag_236:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_238:\n        /* \"contracts/Jimp.sol\":6153:6179  isWhitelisted[accounts[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Jimp.sol\":6153:6188  isWhitelisted[accounts[i]] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":6225:6233  accounts */\n      dup4\n      dup4\n        /* \"contracts/Jimp.sol\":6234:6235  i */\n      dup3\n        /* \"contracts/Jimp.sol\":6225:6236  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_239\n      jumpi\n      tag_240\n      tag_224\n      jump\t// in\n    tag_240:\n    tag_239:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_241:\n        /* \"contracts/Jimp.sol\":6208:6245  WhitelistUpdated(accounts[i], status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d\n        /* \"contracts/Jimp.sol\":6238:6244  status */\n      dup4\n        /* \"contracts/Jimp.sol\":6208:6245  WhitelistUpdated(accounts[i], status) */\n      mload(0x40)\n      tag_242\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Jimp.sol\":6133:6136  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Jimp.sol\":6093:6257  for(uint256 i = 0; i < accounts.length; i++) {... */\n      jump(tag_233)\n    tag_234:\n      pop\n        /* \"contracts/Jimp.sol\":5991:6264  function batchUpdateWhitelist(address[] calldata accounts, bool status) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Jimp.sol\":1132:1163  uint256 public transferCooldown */\n    tag_104:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"contracts/Jimp.sol\":5399:5658  function emergencyWithdraw(address token) external onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_244\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_244:\n        /* \"contracts/Jimp.sol\":5496:5500  this */\n      address\n        /* \"contracts/Jimp.sol\":5479:5501  token != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Jimp.sol\":5479:5484  token */\n      dup2\n        /* \"contracts/Jimp.sol\":5479:5501  token != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Jimp.sol\":5471:5534  require(token != address(this), \"Cannot withdraw token itself\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"contracts/Jimp.sol\":5545:5559  uint256 amount */\n      0x00\n        /* \"contracts/Jimp.sol\":5569:5574  token */\n      dup2\n        /* \"contracts/Jimp.sol\":5562:5585  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Jimp.sol\":5594:5598  this */\n      address\n        /* \"contracts/Jimp.sol\":5562:5600  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_249:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"contracts/Jimp.sol\":5545:5600  uint256 amount = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Jimp.sol\":5618:5623  token */\n      dup2\n        /* \"contracts/Jimp.sol\":5611:5633  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Jimp.sol\":5634:5641  owner() */\n      tag_254\n        /* \"contracts/Jimp.sol\":5634:5639  owner */\n      tag_116\n        /* \"contracts/Jimp.sol\":5634:5641  owner() */\n      jump\t// in\n    tag_254:\n        /* \"contracts/Jimp.sol\":5643:5649  amount */\n      dup4\n        /* \"contracts/Jimp.sol\":5611:5650  IERC20(token).transfer(owner(), amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap3\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_259\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      pop\n        /* \"contracts/Jimp.sol\":5460:5658  {... */\n      pop\n        /* \"contracts/Jimp.sol\":5399:5658  function emergencyWithdraw(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Jimp.sol\":4362:4500  function setTrading(bool _enabled) external onlyOwner {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_269\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_269:\n        /* \"contracts/Jimp.sol\":4444:4452  _enabled */\n      dup1\n        /* \"contracts/Jimp.sol\":4427:4441  tradingEnabled */\n      0x0b\n      0x00\n        /* \"contracts/Jimp.sol\":4427:4452  tradingEnabled = _enabled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":4468:4492  TradingEnabled(_enabled) */\n      0xbeda7dca7bc1b3e80b871f4818129ec73b771581f803d553aeb3484098e5f65a\n        /* \"contracts/Jimp.sol\":4483:4491  _enabled */\n      dup2\n        /* \"contracts/Jimp.sol\":4468:4492  TradingEnabled(_enabled) */\n      mload(0x40)\n      tag_271\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Jimp.sol\":4362:4500  function setTrading(bool _enabled) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Jimp.sol\":4508:4681  function updateBlacklist(address account, bool status) external onlyOwner {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_273\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_273:\n        /* \"contracts/Jimp.sol\":4618:4624  status */\n      dup1\n        /* \"contracts/Jimp.sol\":4593:4606  isBlacklisted */\n      0x0e\n        /* \"contracts/Jimp.sol\":4593:4615  isBlacklisted[account] */\n      0x00\n        /* \"contracts/Jimp.sol\":4607:4614  account */\n      dup5\n        /* \"contracts/Jimp.sol\":4593:4615  isBlacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Jimp.sol\":4593:4624  isBlacklisted[account] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":4657:4664  account */\n      dup2\n        /* \"contracts/Jimp.sol\":4640:4673  BlacklistUpdated(account, status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac\n        /* \"contracts/Jimp.sol\":4666:4672  status */\n      dup3\n        /* \"contracts/Jimp.sol\":4640:4673  BlacklistUpdated(account, status) */\n      mload(0x40)\n      tag_275\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Jimp.sol\":4508:4681  function updateBlacklist(address account, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_277\n      swap1\n      tag_159\n      jump\t// in\n    tag_277:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_278\n      swap1\n      tag_159\n      jump\t// in\n    tag_278:\n      dup1\n      iszero\n      tag_279\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_280\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_279)\n    tag_280:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_281:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_281\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_279:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Jimp.sol\":3490:3894  function transfer(address to, uint256 amount) ... */\n    tag_131:\n        /* \"contracts/Jimp.sol\":3667:3671  bool */\n      0x00\n        /* \"contracts/Jimp.sol\":3601:3611  msg.sender */\n      caller\n        /* \"contracts/Jimp.sol\":3613:3615  to */\n      dup4\n        /* \"contracts/Jimp.sol\":3617:3623  amount */\n      dup4\n        /* \"contracts/Jimp.sol\":2550:2563  isBlacklisted */\n      0x0e\n        /* \"contracts/Jimp.sol\":2550:2569  isBlacklisted[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":2564:2568  from */\n      dup5\n        /* \"contracts/Jimp.sol\":2550:2569  isBlacklisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2549:2569  !isBlacklisted[from] */\n      iszero\n        /* \"contracts/Jimp.sol\":2549:2591  !isBlacklisted[from] && !isBlacklisted[to] */\n      dup1\n      iszero\n      tag_283\n      jumpi\n      pop\n        /* \"contracts/Jimp.sol\":2574:2587  isBlacklisted */\n      0x0e\n        /* \"contracts/Jimp.sol\":2574:2591  isBlacklisted[to] */\n      0x00\n        /* \"contracts/Jimp.sol\":2588:2590  to */\n      dup4\n        /* \"contracts/Jimp.sol\":2574:2591  isBlacklisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2573:2591  !isBlacklisted[to] */\n      iszero\n        /* \"contracts/Jimp.sol\":2549:2591  !isBlacklisted[from] && !isBlacklisted[to] */\n    tag_283:\n        /* \"contracts/Jimp.sol\":2541:2618  require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_178\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"contracts/Jimp.sol\":2637:2651  tradingEnabled */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2637:2674  tradingEnabled || isWhitelisted[from] */\n      dup1\n      tag_286\n      jumpi\n      pop\n        /* \"contracts/Jimp.sol\":2655:2668  isWhitelisted */\n      0x0f\n        /* \"contracts/Jimp.sol\":2655:2674  isWhitelisted[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":2669:2673  from */\n      dup5\n        /* \"contracts/Jimp.sol\":2655:2674  isWhitelisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2637:2674  tradingEnabled || isWhitelisted[from] */\n    tag_286:\n        /* \"contracts/Jimp.sol\":2637:2695  tradingEnabled || isWhitelisted[from] || isWhitelisted[to] */\n      dup1\n      tag_287\n      jumpi\n      pop\n        /* \"contracts/Jimp.sol\":2678:2691  isWhitelisted */\n      0x0f\n        /* \"contracts/Jimp.sol\":2678:2695  isWhitelisted[to] */\n      0x00\n        /* \"contracts/Jimp.sol\":2692:2694  to */\n      dup4\n        /* \"contracts/Jimp.sol\":2678:2695  isWhitelisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2637:2695  tradingEnabled || isWhitelisted[from] || isWhitelisted[to] */\n    tag_287:\n        /* \"contracts/Jimp.sol\":2629:2719  require(tradingEnabled || isWhitelisted[from] || isWhitelisted[to], \"Trading not enabled\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_183\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"contracts/Jimp.sol\":2745:2758  isWhitelisted */\n      0x0f\n        /* \"contracts/Jimp.sol\":2745:2764  isWhitelisted[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":2759:2763  from */\n      dup5\n        /* \"contracts/Jimp.sol\":2745:2764  isWhitelisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2744:2764  !isWhitelisted[from] */\n      iszero\n        /* \"contracts/Jimp.sol\":2744:2786  !isWhitelisted[from] && !isWhitelisted[to] */\n      dup1\n      iszero\n      tag_290\n      jumpi\n      pop\n        /* \"contracts/Jimp.sol\":2769:2782  isWhitelisted */\n      0x0f\n        /* \"contracts/Jimp.sol\":2769:2786  isWhitelisted[to] */\n      0x00\n        /* \"contracts/Jimp.sol\":2783:2785  to */\n      dup4\n        /* \"contracts/Jimp.sol\":2769:2786  isWhitelisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Jimp.sol\":2768:2786  !isWhitelisted[to] */\n      iszero\n        /* \"contracts/Jimp.sol\":2744:2786  !isWhitelisted[from] && !isWhitelisted[to] */\n    tag_290:\n        /* \"contracts/Jimp.sol\":2740:3427  if (!isWhitelisted[from] && !isWhitelisted[to]) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"contracts/Jimp.sol\":2821:2838  maxTransferAmount */\n      sload(0x08)\n        /* \"contracts/Jimp.sol\":2811:2817  amount */\n      dup2\n        /* \"contracts/Jimp.sol\":2811:2838  amount <= maxTransferAmount */\n      gt\n      iszero\n        /* \"contracts/Jimp.sol\":2803:2870  require(amount <= maxTransferAmount, \"Transfer exceeds max amount\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap1\n      tag_188\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n        /* \"contracts/Jimp.sol\":2912:2956  lastTransferTime[from].add(transferCooldown) */\n      tag_294\n        /* \"contracts/Jimp.sol\":2939:2955  transferCooldown */\n      sload(0x10)\n        /* \"contracts/Jimp.sol\":2912:2928  lastTransferTime */\n      0x0c\n        /* \"contracts/Jimp.sol\":2912:2934  lastTransferTime[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":2929:2933  from */\n      dup7\n        /* \"contracts/Jimp.sol\":2912:2934  lastTransferTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Jimp.sol\":2912:2938  lastTransferTime[from].add */\n      tag_190\n      swap1\n        /* \"contracts/Jimp.sol\":2912:2956  lastTransferTime[from].add(transferCooldown) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"contracts/Jimp.sol\":2893:2908  block.timestamp */\n      timestamp\n        /* \"contracts/Jimp.sol\":2893:2956  block.timestamp >= lastTransferTime[from].add(transferCooldown) */\n      lt\n      iszero\n        /* \"contracts/Jimp.sol\":2885:2976  require(block.timestamp >= lastTransferTime[from].add(transferCooldown), \"Cooldown active\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap1\n      tag_193\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"contracts/Jimp.sol\":3067:3068  0 */\n      0x00\n        /* \"contracts/Jimp.sol\":3041:3057  tokenReceiveTime */\n      0x0d\n        /* \"contracts/Jimp.sol\":3041:3063  tokenReceiveTime[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":3058:3062  from */\n      dup6\n        /* \"contracts/Jimp.sol\":3041:3063  tokenReceiveTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Jimp.sol\":3041:3068  tokenReceiveTime[from] != 0 */\n      eq\n        /* \"contracts/Jimp.sol\":3037:3193  if (tokenReceiveTime[from] != 0) {... */\n      tag_297\n      jumpi\n        /* \"contracts/Jimp.sol\":3116:3155  tokenReceiveTime[from].add(minHoldTime) */\n      tag_298\n        /* \"contracts/Jimp.sol\":3143:3154  minHoldTime */\n      sload(0x09)\n        /* \"contracts/Jimp.sol\":3116:3132  tokenReceiveTime */\n      0x0d\n        /* \"contracts/Jimp.sol\":3116:3138  tokenReceiveTime[from] */\n      0x00\n        /* \"contracts/Jimp.sol\":3133:3137  from */\n      dup7\n        /* \"contracts/Jimp.sol\":3116:3138  tokenReceiveTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Jimp.sol\":3116:3142  tokenReceiveTime[from].add */\n      tag_190\n      swap1\n        /* \"contracts/Jimp.sol\":3116:3155  tokenReceiveTime[from].add(minHoldTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_298:\n        /* \"contracts/Jimp.sol\":3097:3112  block.timestamp */\n      timestamp\n        /* \"contracts/Jimp.sol\":3097:3155  block.timestamp >= tokenReceiveTime[from].add(minHoldTime) */\n      lt\n      iszero\n        /* \"contracts/Jimp.sol\":3089:3177  require(block.timestamp >= tokenReceiveTime[from].add(minHoldTime), \"Hold time not met\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap1\n      tag_198\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n        /* \"contracts/Jimp.sol\":3037:3193  if (tokenReceiveTime[from] != 0) {... */\n    tag_297:\n        /* \"contracts/Jimp.sol\":3275:3299  uint256 recipientBalance */\n      0x00\n        /* \"contracts/Jimp.sol\":3302:3327  balanceOf(to).add(amount) */\n      tag_301\n        /* \"contracts/Jimp.sol\":3320:3326  amount */\n      dup3\n        /* \"contracts/Jimp.sol\":3302:3315  balanceOf(to) */\n      tag_302\n        /* \"contracts/Jimp.sol\":3312:3314  to */\n      dup6\n        /* \"contracts/Jimp.sol\":3302:3311  balanceOf */\n      tag_111\n        /* \"contracts/Jimp.sol\":3302:3315  balanceOf(to) */\n      jump\t// in\n    tag_302:\n        /* \"contracts/Jimp.sol\":3302:3319  balanceOf(to).add */\n      tag_190\n      swap1\n        /* \"contracts/Jimp.sol\":3302:3327  balanceOf(to).add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_301:\n        /* \"contracts/Jimp.sol\":3275:3327  uint256 recipientBalance = balanceOf(to).add(amount) */\n      swap1\n      pop\n        /* \"contracts/Jimp.sol\":3370:3385  maxWalletAmount */\n      sload(0x0a)\n        /* \"contracts/Jimp.sol\":3350:3366  recipientBalance */\n      dup2\n        /* \"contracts/Jimp.sol\":3350:3385  recipientBalance <= maxWalletAmount */\n      gt\n      iszero\n        /* \"contracts/Jimp.sol\":3342:3415  require(recipientBalance <= maxWalletAmount, \"Exceeds max wallet amount\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap1\n      tag_203\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_303:\n        /* \"contracts/Jimp.sol\":2788:3427  {... */\n      pop\n        /* \"contracts/Jimp.sol\":2740:3427  if (!isWhitelisted[from] && !isWhitelisted[to]) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_306\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_206\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_306:\n        /* \"contracts/Jimp.sol\":3712:3713  0 */\n      0x00\n        /* \"contracts/Jimp.sol\":3698:3714  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Jimp.sol\":3698:3700  to */\n      dup7\n        /* \"contracts/Jimp.sol\":3698:3714  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Jimp.sol\":3690:3736  require(to != address(0), \"Invalid recipient\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap1\n      tag_210\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_308:\n        /* \"contracts/Jimp.sol\":3770:3785  block.timestamp */\n      timestamp\n        /* \"contracts/Jimp.sol\":3747:3763  tokenReceiveTime */\n      0x0d\n        /* \"contracts/Jimp.sol\":3747:3767  tokenReceiveTime[to] */\n      0x00\n        /* \"contracts/Jimp.sol\":3764:3766  to */\n      dup9\n        /* \"contracts/Jimp.sol\":3747:3767  tokenReceiveTime[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Jimp.sol\":3747:3785  tokenReceiveTime[to] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":3827:3842  block.timestamp */\n      timestamp\n        /* \"contracts/Jimp.sol\":3796:3812  lastTransferTime */\n      0x0c\n        /* \"contracts/Jimp.sol\":3796:3824  lastTransferTime[msg.sender] */\n      0x00\n        /* \"contracts/Jimp.sol\":3813:3823  msg.sender */\n      caller\n        /* \"contracts/Jimp.sol\":3796:3824  lastTransferTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Jimp.sol\":3796:3842  lastTransferTime[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Jimp.sol\":3860:3886  super.transfer(to, amount) */\n      tag_310\n        /* \"contracts/Jimp.sol\":3875:3877  to */\n      dup7\n        /* \"contracts/Jimp.sol\":3879:3885  amount */\n      dup7\n        /* \"contracts/Jimp.sol\":3860:3874  super.transfer */\n      tag_311\n        /* \"contracts/Jimp.sol\":3860:3886  super.transfer(to, amount) */\n      jump\t// in\n    tag_310:\n        /* \"contracts/Jimp.sol\":3853:3886  return super.transfer(to, amount) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_312\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_214\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_312:\n        /* \"contracts/Jimp.sol\":3490:3894  function transfer(address to, uint256 amount) ... */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Jimp.sol\":510:542  uint256 public maxTransferAmount */\n    tag_134:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/Jimp.sol\":681:711  uint256 public maxWalletAmount */\n    tag_137:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_315\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_319\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Jimp.sol\":972:1017  mapping(address => bool) public isBlacklisted */\n    tag_149:\n      mstore(0x20, 0x0e)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_321\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_322\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_324\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_331\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap1\n      tag_336\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_334:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_338\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_339\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_346\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_347\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_353\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_354\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_356\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_358\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_359\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_360\n      jump\t// in\n    tag_359:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_361\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_366\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_366:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_367\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_368\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_371\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_371:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_372)\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_373\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_374\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_360\n      jump\t// in\n    tag_374:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_375\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_376)\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_377\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_377:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_379:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_380:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_381:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_382:\n        /* \"#utility.yul\":490:514   */\n      tag_433\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_381\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_434\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_434:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_383:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_436\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_382\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1455   */\n    tag_42:\n        /* \"#utility.yul\":776:782   */\n      0x00\n        /* \"#utility.yul\":784:790   */\n      0x00\n        /* \"#utility.yul\":792:798   */\n      0x00\n        /* \"#utility.yul\":800:806   */\n      0x00\n        /* \"#utility.yul\":849:852   */\n      0x80\n        /* \"#utility.yul\":837:846   */\n      dup6\n        /* \"#utility.yul\":828:835   */\n      dup8\n        /* \"#utility.yul\":824:847   */\n      sub\n        /* \"#utility.yul\":820:853   */\n      slt\n        /* \"#utility.yul\":817:937   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":856:935   */\n      tag_439\n      tag_379\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":817:937   */\n    tag_438:\n        /* \"#utility.yul\":976:977   */\n      0x00\n        /* \"#utility.yul\":1001:1054   */\n      tag_440\n        /* \"#utility.yul\":1046:1053   */\n      dup8\n        /* \"#utility.yul\":1037:1043   */\n      dup3\n        /* \"#utility.yul\":1026:1035   */\n      dup9\n        /* \"#utility.yul\":1022:1044   */\n      add\n        /* \"#utility.yul\":1001:1054   */\n      tag_383\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":991:1054   */\n      swap5\n      pop\n        /* \"#utility.yul\":947:1064   */\n      pop\n        /* \"#utility.yul\":1103:1105   */\n      0x20\n        /* \"#utility.yul\":1129:1182   */\n      tag_441\n        /* \"#utility.yul\":1174:1181   */\n      dup8\n        /* \"#utility.yul\":1165:1171   */\n      dup3\n        /* \"#utility.yul\":1154:1163   */\n      dup9\n        /* \"#utility.yul\":1150:1172   */\n      add\n        /* \"#utility.yul\":1129:1182   */\n      tag_383\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":1119:1182   */\n      swap4\n      pop\n        /* \"#utility.yul\":1074:1192   */\n      pop\n        /* \"#utility.yul\":1231:1233   */\n      0x40\n        /* \"#utility.yul\":1257:1310   */\n      tag_442\n        /* \"#utility.yul\":1302:1309   */\n      dup8\n        /* \"#utility.yul\":1293:1299   */\n      dup3\n        /* \"#utility.yul\":1282:1291   */\n      dup9\n        /* \"#utility.yul\":1278:1300   */\n      add\n        /* \"#utility.yul\":1257:1310   */\n      tag_383\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":1247:1310   */\n      swap3\n      pop\n        /* \"#utility.yul\":1202:1320   */\n      pop\n        /* \"#utility.yul\":1359:1361   */\n      0x60\n        /* \"#utility.yul\":1385:1438   */\n      tag_443\n        /* \"#utility.yul\":1430:1437   */\n      dup8\n        /* \"#utility.yul\":1421:1427   */\n      dup3\n        /* \"#utility.yul\":1410:1419   */\n      dup9\n        /* \"#utility.yul\":1406:1428   */\n      add\n        /* \"#utility.yul\":1385:1438   */\n      tag_383\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":1375:1438   */\n      swap2\n      pop\n        /* \"#utility.yul\":1330:1448   */\n      pop\n        /* \"#utility.yul\":690:1455   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1461:1560   */\n    tag_384:\n        /* \"#utility.yul\":1513:1519   */\n      0x00\n        /* \"#utility.yul\":1547:1552   */\n      dup2\n        /* \"#utility.yul\":1541:1553   */\n      mload\n        /* \"#utility.yul\":1531:1553   */\n      swap1\n      pop\n        /* \"#utility.yul\":1461:1560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1566:1735   */\n    tag_385:\n        /* \"#utility.yul\":1650:1661   */\n      0x00\n        /* \"#utility.yul\":1684:1690   */\n      dup3\n        /* \"#utility.yul\":1679:1682   */\n      dup3\n        /* \"#utility.yul\":1672:1691   */\n      mstore\n        /* \"#utility.yul\":1724:1728   */\n      0x20\n        /* \"#utility.yul\":1719:1722   */\n      dup3\n        /* \"#utility.yul\":1715:1729   */\n      add\n        /* \"#utility.yul\":1700:1729   */\n      swap1\n      pop\n        /* \"#utility.yul\":1566:1735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1880   */\n    tag_386:\n        /* \"#utility.yul\":1830:1836   */\n      dup3\n        /* \"#utility.yul\":1825:1828   */\n      dup2\n        /* \"#utility.yul\":1820:1823   */\n      dup4\n        /* \"#utility.yul\":1814:1837   */\n      mcopy\n        /* \"#utility.yul\":1871:1872   */\n      0x00\n        /* \"#utility.yul\":1862:1868   */\n      dup4\n        /* \"#utility.yul\":1857:1860   */\n      dup4\n        /* \"#utility.yul\":1853:1869   */\n      add\n        /* \"#utility.yul\":1846:1873   */\n      mstore\n        /* \"#utility.yul\":1741:1880   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1886:1988   */\n    tag_387:\n        /* \"#utility.yul\":1927:1933   */\n      0x00\n        /* \"#utility.yul\":1978:1980   */\n      0x1f\n        /* \"#utility.yul\":1974:1981   */\n      not\n        /* \"#utility.yul\":1969:1971   */\n      0x1f\n        /* \"#utility.yul\":1962:1967   */\n      dup4\n        /* \"#utility.yul\":1958:1972   */\n      add\n        /* \"#utility.yul\":1954:1982   */\n      and\n        /* \"#utility.yul\":1944:1982   */\n      swap1\n      pop\n        /* \"#utility.yul\":1886:1988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2371   */\n    tag_388:\n        /* \"#utility.yul\":2082:2085   */\n      0x00\n        /* \"#utility.yul\":2110:2149   */\n      tag_449\n        /* \"#utility.yul\":2143:2148   */\n      dup3\n        /* \"#utility.yul\":2110:2149   */\n      tag_384\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":2165:2236   */\n      tag_450\n        /* \"#utility.yul\":2229:2235   */\n      dup2\n        /* \"#utility.yul\":2224:2227   */\n      dup6\n        /* \"#utility.yul\":2165:2236   */\n      tag_385\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":2158:2236   */\n      swap4\n      pop\n        /* \"#utility.yul\":2245:2310   */\n      tag_451\n        /* \"#utility.yul\":2303:2309   */\n      dup2\n        /* \"#utility.yul\":2298:2301   */\n      dup6\n        /* \"#utility.yul\":2291:2295   */\n      0x20\n        /* \"#utility.yul\":2284:2289   */\n      dup7\n        /* \"#utility.yul\":2280:2296   */\n      add\n        /* \"#utility.yul\":2245:2310   */\n      tag_386\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":2335:2364   */\n      tag_452\n        /* \"#utility.yul\":2357:2363   */\n      dup2\n        /* \"#utility.yul\":2335:2364   */\n      tag_387\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2330:2333   */\n      dup5\n        /* \"#utility.yul\":2326:2365   */\n      add\n        /* \"#utility.yul\":2319:2365   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2371   */\n      pop\n        /* \"#utility.yul\":1994:2371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2377:2690   */\n    tag_47:\n        /* \"#utility.yul\":2490:2494   */\n      0x00\n        /* \"#utility.yul\":2528:2530   */\n      0x20\n        /* \"#utility.yul\":2517:2526   */\n      dup3\n        /* \"#utility.yul\":2513:2531   */\n      add\n        /* \"#utility.yul\":2505:2531   */\n      swap1\n      pop\n        /* \"#utility.yul\":2577:2586   */\n      dup2\n        /* \"#utility.yul\":2571:2575   */\n      dup2\n        /* \"#utility.yul\":2567:2587   */\n      sub\n        /* \"#utility.yul\":2563:2564   */\n      0x00\n        /* \"#utility.yul\":2552:2561   */\n      dup4\n        /* \"#utility.yul\":2548:2565   */\n      add\n        /* \"#utility.yul\":2541:2588   */\n      mstore\n        /* \"#utility.yul\":2605:2683   */\n      tag_454\n        /* \"#utility.yul\":2678:2682   */\n      dup2\n        /* \"#utility.yul\":2669:2675   */\n      dup5\n        /* \"#utility.yul\":2605:2683   */\n      tag_388\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":2597:2683   */\n      swap1\n      pop\n        /* \"#utility.yul\":2377:2690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2696:2822   */\n    tag_389:\n        /* \"#utility.yul\":2733:2740   */\n      0x00\n        /* \"#utility.yul\":2773:2815   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2766:2771   */\n      dup3\n        /* \"#utility.yul\":2762:2816   */\n      and\n        /* \"#utility.yul\":2751:2816   */\n      swap1\n      pop\n        /* \"#utility.yul\":2696:2822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2828:2924   */\n    tag_390:\n        /* \"#utility.yul\":2865:2872   */\n      0x00\n        /* \"#utility.yul\":2894:2918   */\n      tag_457\n        /* \"#utility.yul\":2912:2917   */\n      dup3\n        /* \"#utility.yul\":2894:2918   */\n      tag_389\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":2883:2918   */\n      swap1\n      pop\n        /* \"#utility.yul\":2828:2924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2930:3052   */\n    tag_391:\n        /* \"#utility.yul\":3003:3027   */\n      tag_459\n        /* \"#utility.yul\":3021:3026   */\n      dup2\n        /* \"#utility.yul\":3003:3027   */\n      tag_390\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":2996:3001   */\n      dup2\n        /* \"#utility.yul\":2993:3028   */\n      eq\n        /* \"#utility.yul\":2983:3046   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":3042:3043   */\n      0x00\n        /* \"#utility.yul\":3039:3040   */\n      0x00\n        /* \"#utility.yul\":3032:3044   */\n      revert\n        /* \"#utility.yul\":2983:3046   */\n    tag_460:\n        /* \"#utility.yul\":2930:3052   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3058:3197   */\n    tag_392:\n        /* \"#utility.yul\":3104:3109   */\n      0x00\n        /* \"#utility.yul\":3142:3148   */\n      dup2\n        /* \"#utility.yul\":3129:3149   */\n      calldataload\n        /* \"#utility.yul\":3120:3149   */\n      swap1\n      pop\n        /* \"#utility.yul\":3158:3191   */\n      tag_462\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3158:3191   */\n      tag_391\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3058:3197   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3203:3677   */\n    tag_50:\n        /* \"#utility.yul\":3271:3277   */\n      0x00\n        /* \"#utility.yul\":3279:3285   */\n      0x00\n        /* \"#utility.yul\":3328:3330   */\n      0x40\n        /* \"#utility.yul\":3316:3325   */\n      dup4\n        /* \"#utility.yul\":3307:3314   */\n      dup6\n        /* \"#utility.yul\":3303:3326   */\n      sub\n        /* \"#utility.yul\":3299:3331   */\n      slt\n        /* \"#utility.yul\":3296:3415   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":3334:3413   */\n      tag_465\n      tag_379\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":3296:3415   */\n    tag_464:\n        /* \"#utility.yul\":3454:3455   */\n      0x00\n        /* \"#utility.yul\":3479:3532   */\n      tag_466\n        /* \"#utility.yul\":3524:3531   */\n      dup6\n        /* \"#utility.yul\":3515:3521   */\n      dup3\n        /* \"#utility.yul\":3504:3513   */\n      dup7\n        /* \"#utility.yul\":3500:3522   */\n      add\n        /* \"#utility.yul\":3479:3532   */\n      tag_392\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":3469:3532   */\n      swap3\n      pop\n        /* \"#utility.yul\":3425:3542   */\n      pop\n        /* \"#utility.yul\":3581:3583   */\n      0x20\n        /* \"#utility.yul\":3607:3660   */\n      tag_467\n        /* \"#utility.yul\":3652:3659   */\n      dup6\n        /* \"#utility.yul\":3643:3649   */\n      dup3\n        /* \"#utility.yul\":3632:3641   */\n      dup7\n        /* \"#utility.yul\":3628:3650   */\n      add\n        /* \"#utility.yul\":3607:3660   */\n      tag_383\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":3597:3660   */\n      swap2\n      pop\n        /* \"#utility.yul\":3552:3670   */\n      pop\n        /* \"#utility.yul\":3203:3677   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3773   */\n    tag_393:\n        /* \"#utility.yul\":3717:3724   */\n      0x00\n        /* \"#utility.yul\":3760:3765   */\n      dup2\n        /* \"#utility.yul\":3753:3766   */\n      iszero\n        /* \"#utility.yul\":3746:3767   */\n      iszero\n        /* \"#utility.yul\":3735:3767   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3779:3888   */\n    tag_394:\n        /* \"#utility.yul\":3860:3881   */\n      tag_470\n        /* \"#utility.yul\":3875:3880   */\n      dup2\n        /* \"#utility.yul\":3860:3881   */\n      tag_393\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":3855:3858   */\n      dup3\n        /* \"#utility.yul\":3848:3882   */\n      mstore\n        /* \"#utility.yul\":3779:3888   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3894:4104   */\n    tag_53:\n        /* \"#utility.yul\":3981:3985   */\n      0x00\n        /* \"#utility.yul\":4019:4021   */\n      0x20\n        /* \"#utility.yul\":4008:4017   */\n      dup3\n        /* \"#utility.yul\":4004:4022   */\n      add\n        /* \"#utility.yul\":3996:4022   */\n      swap1\n      pop\n        /* \"#utility.yul\":4032:4097   */\n      tag_472\n        /* \"#utility.yul\":4094:4095   */\n      0x00\n        /* \"#utility.yul\":4083:4092   */\n      dup4\n        /* \"#utility.yul\":4079:4096   */\n      add\n        /* \"#utility.yul\":4070:4076   */\n      dup5\n        /* \"#utility.yul\":4032:4097   */\n      tag_394\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":3894:4104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4110:4439   */\n    tag_56:\n        /* \"#utility.yul\":4169:4175   */\n      0x00\n        /* \"#utility.yul\":4218:4220   */\n      0x20\n        /* \"#utility.yul\":4206:4215   */\n      dup3\n        /* \"#utility.yul\":4197:4204   */\n      dup5\n        /* \"#utility.yul\":4193:4216   */\n      sub\n        /* \"#utility.yul\":4189:4221   */\n      slt\n        /* \"#utility.yul\":4186:4305   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":4224:4303   */\n      tag_475\n      tag_379\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":4186:4305   */\n    tag_474:\n        /* \"#utility.yul\":4344:4345   */\n      0x00\n        /* \"#utility.yul\":4369:4422   */\n      tag_476\n        /* \"#utility.yul\":4414:4421   */\n      dup5\n        /* \"#utility.yul\":4405:4411   */\n      dup3\n        /* \"#utility.yul\":4394:4403   */\n      dup6\n        /* \"#utility.yul\":4390:4412   */\n      add\n        /* \"#utility.yul\":4369:4422   */\n      tag_392\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":4359:4422   */\n      swap2\n      pop\n        /* \"#utility.yul\":4315:4432   */\n      pop\n        /* \"#utility.yul\":4110:4439   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4445:4563   */\n    tag_395:\n        /* \"#utility.yul\":4532:4556   */\n      tag_478\n        /* \"#utility.yul\":4550:4555   */\n      dup2\n        /* \"#utility.yul\":4532:4556   */\n      tag_381\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":4527:4530   */\n      dup3\n        /* \"#utility.yul\":4520:4557   */\n      mstore\n        /* \"#utility.yul\":4445:4563   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4569:4791   */\n    tag_59:\n        /* \"#utility.yul\":4662:4666   */\n      0x00\n        /* \"#utility.yul\":4700:4702   */\n      0x20\n        /* \"#utility.yul\":4689:4698   */\n      dup3\n        /* \"#utility.yul\":4685:4703   */\n      add\n        /* \"#utility.yul\":4677:4703   */\n      swap1\n      pop\n        /* \"#utility.yul\":4713:4784   */\n      tag_480\n        /* \"#utility.yul\":4781:4782   */\n      0x00\n        /* \"#utility.yul\":4770:4779   */\n      dup4\n        /* \"#utility.yul\":4766:4783   */\n      add\n        /* \"#utility.yul\":4757:4763   */\n      dup5\n        /* \"#utility.yul\":4713:4784   */\n      tag_395\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":4569:4791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4797:4913   */\n    tag_396:\n        /* \"#utility.yul\":4867:4888   */\n      tag_482\n        /* \"#utility.yul\":4882:4887   */\n      dup2\n        /* \"#utility.yul\":4867:4888   */\n      tag_393\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":4860:4865   */\n      dup2\n        /* \"#utility.yul\":4857:4889   */\n      eq\n        /* \"#utility.yul\":4847:4907   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":4903:4904   */\n      0x00\n        /* \"#utility.yul\":4900:4901   */\n      0x00\n        /* \"#utility.yul\":4893:4905   */\n      revert\n        /* \"#utility.yul\":4847:4907   */\n    tag_483:\n        /* \"#utility.yul\":4797:4913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4919:5052   */\n    tag_397:\n        /* \"#utility.yul\":4962:4967   */\n      0x00\n        /* \"#utility.yul\":5000:5006   */\n      dup2\n        /* \"#utility.yul\":4987:5007   */\n      calldataload\n        /* \"#utility.yul\":4978:5007   */\n      swap1\n      pop\n        /* \"#utility.yul\":5016:5046   */\n      tag_485\n        /* \"#utility.yul\":5040:5045   */\n      dup2\n        /* \"#utility.yul\":5016:5046   */\n      tag_396\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":4919:5052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5058:5526   */\n    tag_62:\n        /* \"#utility.yul\":5123:5129   */\n      0x00\n        /* \"#utility.yul\":5131:5137   */\n      0x00\n        /* \"#utility.yul\":5180:5182   */\n      0x40\n        /* \"#utility.yul\":5168:5177   */\n      dup4\n        /* \"#utility.yul\":5159:5166   */\n      dup6\n        /* \"#utility.yul\":5155:5178   */\n      sub\n        /* \"#utility.yul\":5151:5183   */\n      slt\n        /* \"#utility.yul\":5148:5267   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":5186:5265   */\n      tag_488\n      tag_379\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":5148:5267   */\n    tag_487:\n        /* \"#utility.yul\":5306:5307   */\n      0x00\n        /* \"#utility.yul\":5331:5384   */\n      tag_489\n        /* \"#utility.yul\":5376:5383   */\n      dup6\n        /* \"#utility.yul\":5367:5373   */\n      dup3\n        /* \"#utility.yul\":5356:5365   */\n      dup7\n        /* \"#utility.yul\":5352:5374   */\n      add\n        /* \"#utility.yul\":5331:5384   */\n      tag_392\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":5321:5384   */\n      swap3\n      pop\n        /* \"#utility.yul\":5277:5394   */\n      pop\n        /* \"#utility.yul\":5433:5435   */\n      0x20\n        /* \"#utility.yul\":5459:5509   */\n      tag_490\n        /* \"#utility.yul\":5501:5508   */\n      dup6\n        /* \"#utility.yul\":5492:5498   */\n      dup3\n        /* \"#utility.yul\":5481:5490   */\n      dup7\n        /* \"#utility.yul\":5477:5499   */\n      add\n        /* \"#utility.yul\":5459:5509   */\n      tag_397\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":5449:5509   */\n      swap2\n      pop\n        /* \"#utility.yul\":5404:5519   */\n      pop\n        /* \"#utility.yul\":5058:5526   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5532:6151   */\n    tag_72:\n        /* \"#utility.yul\":5609:5615   */\n      0x00\n        /* \"#utility.yul\":5617:5623   */\n      0x00\n        /* \"#utility.yul\":5625:5631   */\n      0x00\n        /* \"#utility.yul\":5674:5676   */\n      0x60\n        /* \"#utility.yul\":5662:5671   */\n      dup5\n        /* \"#utility.yul\":5653:5660   */\n      dup7\n        /* \"#utility.yul\":5649:5672   */\n      sub\n        /* \"#utility.yul\":5645:5677   */\n      slt\n        /* \"#utility.yul\":5642:5761   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":5680:5759   */\n      tag_493\n      tag_379\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":5642:5761   */\n    tag_492:\n        /* \"#utility.yul\":5800:5801   */\n      0x00\n        /* \"#utility.yul\":5825:5878   */\n      tag_494\n        /* \"#utility.yul\":5870:5877   */\n      dup7\n        /* \"#utility.yul\":5861:5867   */\n      dup3\n        /* \"#utility.yul\":5850:5859   */\n      dup8\n        /* \"#utility.yul\":5846:5868   */\n      add\n        /* \"#utility.yul\":5825:5878   */\n      tag_392\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":5815:5878   */\n      swap4\n      pop\n        /* \"#utility.yul\":5771:5888   */\n      pop\n        /* \"#utility.yul\":5927:5929   */\n      0x20\n        /* \"#utility.yul\":5953:6006   */\n      tag_495\n        /* \"#utility.yul\":5998:6005   */\n      dup7\n        /* \"#utility.yul\":5989:5995   */\n      dup3\n        /* \"#utility.yul\":5978:5987   */\n      dup8\n        /* \"#utility.yul\":5974:5996   */\n      add\n        /* \"#utility.yul\":5953:6006   */\n      tag_392\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":5943:6006   */\n      swap3\n      pop\n        /* \"#utility.yul\":5898:6016   */\n      pop\n        /* \"#utility.yul\":6055:6057   */\n      0x40\n        /* \"#utility.yul\":6081:6134   */\n      tag_496\n        /* \"#utility.yul\":6126:6133   */\n      dup7\n        /* \"#utility.yul\":6117:6123   */\n      dup3\n        /* \"#utility.yul\":6106:6115   */\n      dup8\n        /* \"#utility.yul\":6102:6124   */\n      add\n        /* \"#utility.yul\":6081:6134   */\n      tag_383\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":6071:6134   */\n      swap2\n      pop\n        /* \"#utility.yul\":6026:6144   */\n      pop\n        /* \"#utility.yul\":5532:6151   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6157:6243   */\n    tag_398:\n        /* \"#utility.yul\":6192:6199   */\n      0x00\n        /* \"#utility.yul\":6232:6236   */\n      0xff\n        /* \"#utility.yul\":6225:6230   */\n      dup3\n        /* \"#utility.yul\":6221:6237   */\n      and\n        /* \"#utility.yul\":6210:6237   */\n      swap1\n      pop\n        /* \"#utility.yul\":6157:6243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6249:6361   */\n    tag_399:\n        /* \"#utility.yul\":6332:6354   */\n      tag_499\n        /* \"#utility.yul\":6348:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6354   */\n      tag_398\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":6327:6330   */\n      dup3\n        /* \"#utility.yul\":6320:6355   */\n      mstore\n        /* \"#utility.yul\":6249:6361   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6367:6581   */\n    tag_82:\n        /* \"#utility.yul\":6456:6460   */\n      0x00\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6483:6492   */\n      dup3\n        /* \"#utility.yul\":6479:6497   */\n      add\n        /* \"#utility.yul\":6471:6497   */\n      swap1\n      pop\n        /* \"#utility.yul\":6507:6574   */\n      tag_501\n        /* \"#utility.yul\":6571:6572   */\n      0x00\n        /* \"#utility.yul\":6560:6569   */\n      dup4\n        /* \"#utility.yul\":6556:6573   */\n      add\n        /* \"#utility.yul\":6547:6553   */\n      dup5\n        /* \"#utility.yul\":6507:6574   */\n      tag_399\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":6367:6581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6587:6704   */\n    tag_400:\n        /* \"#utility.yul\":6696:6697   */\n      0x00\n        /* \"#utility.yul\":6693:6694   */\n      0x00\n        /* \"#utility.yul\":6686:6698   */\n      revert\n        /* \"#utility.yul\":6710:6827   */\n    tag_401:\n        /* \"#utility.yul\":6819:6820   */\n      0x00\n        /* \"#utility.yul\":6816:6817   */\n      0x00\n        /* \"#utility.yul\":6809:6821   */\n      revert\n        /* \"#utility.yul\":6833:6950   */\n    tag_402:\n        /* \"#utility.yul\":6942:6943   */\n      0x00\n        /* \"#utility.yul\":6939:6940   */\n      0x00\n        /* \"#utility.yul\":6932:6944   */\n      revert\n        /* \"#utility.yul\":6973:7541   */\n    tag_403:\n        /* \"#utility.yul\":7046:7054   */\n      0x00\n        /* \"#utility.yul\":7056:7062   */\n      0x00\n        /* \"#utility.yul\":7106:7109   */\n      dup4\n        /* \"#utility.yul\":7099:7103   */\n      0x1f\n        /* \"#utility.yul\":7091:7097   */\n      dup5\n        /* \"#utility.yul\":7087:7104   */\n      add\n        /* \"#utility.yul\":7083:7110   */\n      slt\n        /* \"#utility.yul\":7073:7195   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":7114:7193   */\n      tag_507\n      tag_400\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":7073:7195   */\n    tag_506:\n        /* \"#utility.yul\":7227:7233   */\n      dup3\n        /* \"#utility.yul\":7214:7234   */\n      calldataload\n        /* \"#utility.yul\":7204:7234   */\n      swap1\n      pop\n        /* \"#utility.yul\":7257:7275   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7249:7255   */\n      dup2\n        /* \"#utility.yul\":7246:7276   */\n      gt\n        /* \"#utility.yul\":7243:7360   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":7279:7358   */\n      tag_509\n      tag_401\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":7243:7360   */\n    tag_508:\n        /* \"#utility.yul\":7393:7397   */\n      0x20\n        /* \"#utility.yul\":7385:7391   */\n      dup4\n        /* \"#utility.yul\":7381:7398   */\n      add\n        /* \"#utility.yul\":7369:7398   */\n      swap2\n      pop\n        /* \"#utility.yul\":7447:7450   */\n      dup4\n        /* \"#utility.yul\":7439:7443   */\n      0x20\n        /* \"#utility.yul\":7431:7437   */\n      dup3\n        /* \"#utility.yul\":7427:7444   */\n      mul\n        /* \"#utility.yul\":7417:7425   */\n      dup4\n        /* \"#utility.yul\":7413:7445   */\n      add\n        /* \"#utility.yul\":7410:7451   */\n      gt\n        /* \"#utility.yul\":7407:7535   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":7454:7533   */\n      tag_511\n      tag_402\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":7407:7535   */\n    tag_510:\n        /* \"#utility.yul\":6973:7541   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7547:8245   */\n    tag_98:\n        /* \"#utility.yul\":7639:7645   */\n      0x00\n        /* \"#utility.yul\":7647:7653   */\n      0x00\n        /* \"#utility.yul\":7655:7661   */\n      0x00\n        /* \"#utility.yul\":7704:7706   */\n      0x40\n        /* \"#utility.yul\":7692:7701   */\n      dup5\n        /* \"#utility.yul\":7683:7690   */\n      dup7\n        /* \"#utility.yul\":7679:7702   */\n      sub\n        /* \"#utility.yul\":7675:7707   */\n      slt\n        /* \"#utility.yul\":7672:7791   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":7710:7789   */\n      tag_514\n      tag_379\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":7672:7791   */\n    tag_513:\n        /* \"#utility.yul\":7858:7859   */\n      0x00\n        /* \"#utility.yul\":7847:7856   */\n      dup5\n        /* \"#utility.yul\":7843:7860   */\n      add\n        /* \"#utility.yul\":7830:7861   */\n      calldataload\n        /* \"#utility.yul\":7888:7906   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7880:7886   */\n      dup2\n        /* \"#utility.yul\":7877:7907   */\n      gt\n        /* \"#utility.yul\":7874:7991   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":7910:7989   */\n      tag_516\n      tag_380\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":7874:7991   */\n    tag_515:\n        /* \"#utility.yul\":8023:8103   */\n      tag_517\n        /* \"#utility.yul\":8095:8102   */\n      dup7\n        /* \"#utility.yul\":8086:8092   */\n      dup3\n        /* \"#utility.yul\":8075:8084   */\n      dup8\n        /* \"#utility.yul\":8071:8093   */\n      add\n        /* \"#utility.yul\":8023:8103   */\n      tag_403\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":8005:8103   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":7801:8113   */\n      pop\n        /* \"#utility.yul\":8152:8154   */\n      0x20\n        /* \"#utility.yul\":8178:8228   */\n      tag_518\n        /* \"#utility.yul\":8220:8227   */\n      dup7\n        /* \"#utility.yul\":8211:8217   */\n      dup3\n        /* \"#utility.yul\":8200:8209   */\n      dup8\n        /* \"#utility.yul\":8196:8218   */\n      add\n        /* \"#utility.yul\":8178:8228   */\n      tag_397\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":8168:8228   */\n      swap2\n      pop\n        /* \"#utility.yul\":8123:8238   */\n      pop\n        /* \"#utility.yul\":7547:8245   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8251:8369   */\n    tag_404:\n        /* \"#utility.yul\":8338:8362   */\n      tag_520\n        /* \"#utility.yul\":8356:8361   */\n      dup2\n        /* \"#utility.yul\":8338:8362   */\n      tag_390\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":8333:8336   */\n      dup3\n        /* \"#utility.yul\":8326:8363   */\n      mstore\n        /* \"#utility.yul\":8251:8369   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8375:8597   */\n    tag_118:\n        /* \"#utility.yul\":8468:8472   */\n      0x00\n        /* \"#utility.yul\":8506:8508   */\n      0x20\n        /* \"#utility.yul\":8495:8504   */\n      dup3\n        /* \"#utility.yul\":8491:8509   */\n      add\n        /* \"#utility.yul\":8483:8509   */\n      swap1\n      pop\n        /* \"#utility.yul\":8519:8590   */\n      tag_522\n        /* \"#utility.yul\":8587:8588   */\n      0x00\n        /* \"#utility.yul\":8576:8585   */\n      dup4\n        /* \"#utility.yul\":8572:8589   */\n      add\n        /* \"#utility.yul\":8563:8569   */\n      dup5\n        /* \"#utility.yul\":8519:8590   */\n      tag_404\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":8375:8597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8603:8926   */\n    tag_121:\n        /* \"#utility.yul\":8659:8665   */\n      0x00\n        /* \"#utility.yul\":8708:8710   */\n      0x20\n        /* \"#utility.yul\":8696:8705   */\n      dup3\n        /* \"#utility.yul\":8687:8694   */\n      dup5\n        /* \"#utility.yul\":8683:8706   */\n      sub\n        /* \"#utility.yul\":8679:8711   */\n      slt\n        /* \"#utility.yul\":8676:8795   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":8714:8793   */\n      tag_525\n      tag_379\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":8676:8795   */\n    tag_524:\n        /* \"#utility.yul\":8834:8835   */\n      0x00\n        /* \"#utility.yul\":8859:8909   */\n      tag_526\n        /* \"#utility.yul\":8901:8908   */\n      dup5\n        /* \"#utility.yul\":8892:8898   */\n      dup3\n        /* \"#utility.yul\":8881:8890   */\n      dup6\n        /* \"#utility.yul\":8877:8899   */\n      add\n        /* \"#utility.yul\":8859:8909   */\n      tag_397\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":8849:8909   */\n      swap2\n      pop\n        /* \"#utility.yul\":8805:8919   */\n      pop\n        /* \"#utility.yul\":8603:8926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8932:9406   */\n    tag_141:\n        /* \"#utility.yul\":9000:9006   */\n      0x00\n        /* \"#utility.yul\":9008:9014   */\n      0x00\n        /* \"#utility.yul\":9057:9059   */\n      0x40\n        /* \"#utility.yul\":9045:9054   */\n      dup4\n        /* \"#utility.yul\":9036:9043   */\n      dup6\n        /* \"#utility.yul\":9032:9055   */\n      sub\n        /* \"#utility.yul\":9028:9060   */\n      slt\n        /* \"#utility.yul\":9025:9144   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":9063:9142   */\n      tag_529\n      tag_379\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":9025:9144   */\n    tag_528:\n        /* \"#utility.yul\":9183:9184   */\n      0x00\n        /* \"#utility.yul\":9208:9261   */\n      tag_530\n        /* \"#utility.yul\":9253:9260   */\n      dup6\n        /* \"#utility.yul\":9244:9250   */\n      dup3\n        /* \"#utility.yul\":9233:9242   */\n      dup7\n        /* \"#utility.yul\":9229:9251   */\n      add\n        /* \"#utility.yul\":9208:9261   */\n      tag_392\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":9198:9261   */\n      swap3\n      pop\n        /* \"#utility.yul\":9154:9271   */\n      pop\n        /* \"#utility.yul\":9310:9312   */\n      0x20\n        /* \"#utility.yul\":9336:9389   */\n      tag_531\n        /* \"#utility.yul\":9381:9388   */\n      dup6\n        /* \"#utility.yul\":9372:9378   */\n      dup3\n        /* \"#utility.yul\":9361:9370   */\n      dup7\n        /* \"#utility.yul\":9357:9379   */\n      add\n        /* \"#utility.yul\":9336:9389   */\n      tag_392\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":9326:9389   */\n      swap2\n      pop\n        /* \"#utility.yul\":9281:9399   */\n      pop\n        /* \"#utility.yul\":8932:9406   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9412:9965   */\n    tag_156:\n        /* \"#utility.yul\":9589:9593   */\n      0x00\n        /* \"#utility.yul\":9627:9630   */\n      0x80\n        /* \"#utility.yul\":9616:9625   */\n      dup3\n        /* \"#utility.yul\":9612:9631   */\n      add\n        /* \"#utility.yul\":9604:9631   */\n      swap1\n      pop\n        /* \"#utility.yul\":9641:9712   */\n      tag_533\n        /* \"#utility.yul\":9709:9710   */\n      0x00\n        /* \"#utility.yul\":9698:9707   */\n      dup4\n        /* \"#utility.yul\":9694:9711   */\n      add\n        /* \"#utility.yul\":9685:9691   */\n      dup8\n        /* \"#utility.yul\":9641:9712   */\n      tag_395\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":9722:9794   */\n      tag_534\n        /* \"#utility.yul\":9790:9792   */\n      0x20\n        /* \"#utility.yul\":9779:9788   */\n      dup4\n        /* \"#utility.yul\":9775:9793   */\n      add\n        /* \"#utility.yul\":9766:9772   */\n      dup7\n        /* \"#utility.yul\":9722:9794   */\n      tag_395\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":9804:9876   */\n      tag_535\n        /* \"#utility.yul\":9872:9874   */\n      0x40\n        /* \"#utility.yul\":9861:9870   */\n      dup4\n        /* \"#utility.yul\":9857:9875   */\n      add\n        /* \"#utility.yul\":9848:9854   */\n      dup6\n        /* \"#utility.yul\":9804:9876   */\n      tag_395\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":9886:9958   */\n      tag_536\n        /* \"#utility.yul\":9954:9956   */\n      0x60\n        /* \"#utility.yul\":9943:9952   */\n      dup4\n        /* \"#utility.yul\":9939:9957   */\n      add\n        /* \"#utility.yul\":9930:9936   */\n      dup5\n        /* \"#utility.yul\":9886:9958   */\n      tag_395\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":9412:9965   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9971:10151   */\n    tag_405:\n        /* \"#utility.yul\":10019:10096   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10016:10017   */\n      0x00\n        /* \"#utility.yul\":10009:10097   */\n      mstore\n        /* \"#utility.yul\":10116:10120   */\n      0x22\n        /* \"#utility.yul\":10113:10114   */\n      0x04\n        /* \"#utility.yul\":10106:10121   */\n      mstore\n        /* \"#utility.yul\":10140:10144   */\n      0x24\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10130:10145   */\n      revert\n        /* \"#utility.yul\":10157:10477   */\n    tag_159:\n        /* \"#utility.yul\":10201:10207   */\n      0x00\n        /* \"#utility.yul\":10238:10239   */\n      0x02\n        /* \"#utility.yul\":10232:10236   */\n      dup3\n        /* \"#utility.yul\":10228:10240   */\n      div\n        /* \"#utility.yul\":10218:10240   */\n      swap1\n      pop\n        /* \"#utility.yul\":10285:10286   */\n      0x01\n        /* \"#utility.yul\":10279:10283   */\n      dup3\n        /* \"#utility.yul\":10275:10287   */\n      and\n        /* \"#utility.yul\":10306:10324   */\n      dup1\n        /* \"#utility.yul\":10296:10377   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":10362:10366   */\n      0x7f\n        /* \"#utility.yul\":10354:10360   */\n      dup3\n        /* \"#utility.yul\":10350:10367   */\n      and\n        /* \"#utility.yul\":10340:10367   */\n      swap2\n      pop\n        /* \"#utility.yul\":10296:10377   */\n    tag_539:\n        /* \"#utility.yul\":10424:10426   */\n      0x20\n        /* \"#utility.yul\":10416:10422   */\n      dup3\n        /* \"#utility.yul\":10413:10427   */\n      lt\n        /* \"#utility.yul\":10393:10411   */\n      dup2\n        /* \"#utility.yul\":10390:10428   */\n      sub\n        /* \"#utility.yul\":10387:10471   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":10443:10461   */\n      tag_541\n      tag_405\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":10387:10471   */\n    tag_540:\n        /* \"#utility.yul\":10208:10477   */\n      pop\n        /* \"#utility.yul\":10157:10477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10483:10655   */\n    tag_406:\n        /* \"#utility.yul\":10623:10647   */\n      0x4164647265737320697320626c61636b6c697374656400000000000000000000\n        /* \"#utility.yul\":10619:10620   */\n      0x00\n        /* \"#utility.yul\":10611:10617   */\n      dup3\n        /* \"#utility.yul\":10607:10621   */\n      add\n        /* \"#utility.yul\":10600:10648   */\n      mstore\n        /* \"#utility.yul\":10483:10655   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10661:11027   */\n    tag_407:\n        /* \"#utility.yul\":10803:10806   */\n      0x00\n        /* \"#utility.yul\":10824:10891   */\n      tag_544\n        /* \"#utility.yul\":10888:10890   */\n      0x16\n        /* \"#utility.yul\":10883:10886   */\n      dup4\n        /* \"#utility.yul\":10824:10891   */\n      tag_385\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":10817:10891   */\n      swap2\n      pop\n        /* \"#utility.yul\":10900:10993   */\n      tag_545\n        /* \"#utility.yul\":10989:10992   */\n      dup3\n        /* \"#utility.yul\":10900:10993   */\n      tag_406\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":11018:11020   */\n      0x20\n        /* \"#utility.yul\":11013:11016   */\n      dup3\n        /* \"#utility.yul\":11009:11021   */\n      add\n        /* \"#utility.yul\":11002:11021   */\n      swap1\n      pop\n        /* \"#utility.yul\":10661:11027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11033:11452   */\n    tag_178:\n        /* \"#utility.yul\":11199:11203   */\n      0x00\n        /* \"#utility.yul\":11237:11239   */\n      0x20\n        /* \"#utility.yul\":11226:11235   */\n      dup3\n        /* \"#utility.yul\":11222:11240   */\n      add\n        /* \"#utility.yul\":11214:11240   */\n      swap1\n      pop\n        /* \"#utility.yul\":11286:11295   */\n      dup2\n        /* \"#utility.yul\":11280:11284   */\n      dup2\n        /* \"#utility.yul\":11276:11296   */\n      sub\n        /* \"#utility.yul\":11272:11273   */\n      0x00\n        /* \"#utility.yul\":11261:11270   */\n      dup4\n        /* \"#utility.yul\":11257:11274   */\n      add\n        /* \"#utility.yul\":11250:11297   */\n      mstore\n        /* \"#utility.yul\":11314:11445   */\n      tag_547\n        /* \"#utility.yul\":11440:11444   */\n      dup2\n        /* \"#utility.yul\":11314:11445   */\n      tag_407\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":11306:11445   */\n      swap1\n      pop\n        /* \"#utility.yul\":11033:11452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11458:11627   */\n    tag_408:\n        /* \"#utility.yul\":11598:11619   */\n      0x54726164696e67206e6f7420656e61626c656400000000000000000000000000\n        /* \"#utility.yul\":11594:11595   */\n      0x00\n        /* \"#utility.yul\":11586:11592   */\n      dup3\n        /* \"#utility.yul\":11582:11596   */\n      add\n        /* \"#utility.yul\":11575:11620   */\n      mstore\n        /* \"#utility.yul\":11458:11627   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11633:11999   */\n    tag_409:\n        /* \"#utility.yul\":11775:11778   */\n      0x00\n        /* \"#utility.yul\":11796:11863   */\n      tag_550\n        /* \"#utility.yul\":11860:11862   */\n      0x13\n        /* \"#utility.yul\":11855:11858   */\n      dup4\n        /* \"#utility.yul\":11796:11863   */\n      tag_385\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":11789:11863   */\n      swap2\n      pop\n        /* \"#utility.yul\":11872:11965   */\n      tag_551\n        /* \"#utility.yul\":11961:11964   */\n      dup3\n        /* \"#utility.yul\":11872:11965   */\n      tag_408\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":11990:11992   */\n      0x20\n        /* \"#utility.yul\":11985:11988   */\n      dup3\n        /* \"#utility.yul\":11981:11993   */\n      add\n        /* \"#utility.yul\":11974:11993   */\n      swap1\n      pop\n        /* \"#utility.yul\":11633:11999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12005:12424   */\n    tag_183:\n        /* \"#utility.yul\":12171:12175   */\n      0x00\n        /* \"#utility.yul\":12209:12211   */\n      0x20\n        /* \"#utility.yul\":12198:12207   */\n      dup3\n        /* \"#utility.yul\":12194:12212   */\n      add\n        /* \"#utility.yul\":12186:12212   */\n      swap1\n      pop\n        /* \"#utility.yul\":12258:12267   */\n      dup2\n        /* \"#utility.yul\":12252:12256   */\n      dup2\n        /* \"#utility.yul\":12248:12268   */\n      sub\n        /* \"#utility.yul\":12244:12245   */\n      0x00\n        /* \"#utility.yul\":12233:12242   */\n      dup4\n        /* \"#utility.yul\":12229:12246   */\n      add\n        /* \"#utility.yul\":12222:12269   */\n      mstore\n        /* \"#utility.yul\":12286:12417   */\n      tag_553\n        /* \"#utility.yul\":12412:12416   */\n      dup2\n        /* \"#utility.yul\":12286:12417   */\n      tag_409\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":12278:12417   */\n      swap1\n      pop\n        /* \"#utility.yul\":12005:12424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12430:12607   */\n    tag_410:\n        /* \"#utility.yul\":12570:12599   */\n      0x5472616e736665722065786365656473206d617820616d6f756e740000000000\n        /* \"#utility.yul\":12566:12567   */\n      0x00\n        /* \"#utility.yul\":12558:12564   */\n      dup3\n        /* \"#utility.yul\":12554:12568   */\n      add\n        /* \"#utility.yul\":12547:12600   */\n      mstore\n        /* \"#utility.yul\":12430:12607   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12613:12979   */\n    tag_411:\n        /* \"#utility.yul\":12755:12758   */\n      0x00\n        /* \"#utility.yul\":12776:12843   */\n      tag_556\n        /* \"#utility.yul\":12840:12842   */\n      0x1b\n        /* \"#utility.yul\":12835:12838   */\n      dup4\n        /* \"#utility.yul\":12776:12843   */\n      tag_385\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":12769:12843   */\n      swap2\n      pop\n        /* \"#utility.yul\":12852:12945   */\n      tag_557\n        /* \"#utility.yul\":12941:12944   */\n      dup3\n        /* \"#utility.yul\":12852:12945   */\n      tag_410\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":12970:12972   */\n      0x20\n        /* \"#utility.yul\":12965:12968   */\n      dup3\n        /* \"#utility.yul\":12961:12973   */\n      add\n        /* \"#utility.yul\":12954:12973   */\n      swap1\n      pop\n        /* \"#utility.yul\":12613:12979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12985:13404   */\n    tag_188:\n        /* \"#utility.yul\":13151:13155   */\n      0x00\n        /* \"#utility.yul\":13189:13191   */\n      0x20\n        /* \"#utility.yul\":13178:13187   */\n      dup3\n        /* \"#utility.yul\":13174:13192   */\n      add\n        /* \"#utility.yul\":13166:13192   */\n      swap1\n      pop\n        /* \"#utility.yul\":13238:13247   */\n      dup2\n        /* \"#utility.yul\":13232:13236   */\n      dup2\n        /* \"#utility.yul\":13228:13248   */\n      sub\n        /* \"#utility.yul\":13224:13225   */\n      0x00\n        /* \"#utility.yul\":13213:13222   */\n      dup4\n        /* \"#utility.yul\":13209:13226   */\n      add\n        /* \"#utility.yul\":13202:13249   */\n      mstore\n        /* \"#utility.yul\":13266:13397   */\n      tag_559\n        /* \"#utility.yul\":13392:13396   */\n      dup2\n        /* \"#utility.yul\":13266:13397   */\n      tag_411\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":13258:13397   */\n      swap1\n      pop\n        /* \"#utility.yul\":12985:13404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13410:13575   */\n    tag_412:\n        /* \"#utility.yul\":13550:13567   */\n      0x436f6f6c646f776e206163746976650000000000000000000000000000000000\n        /* \"#utility.yul\":13546:13547   */\n      0x00\n        /* \"#utility.yul\":13538:13544   */\n      dup3\n        /* \"#utility.yul\":13534:13548   */\n      add\n        /* \"#utility.yul\":13527:13568   */\n      mstore\n        /* \"#utility.yul\":13410:13575   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13581:13947   */\n    tag_413:\n        /* \"#utility.yul\":13723:13726   */\n      0x00\n        /* \"#utility.yul\":13744:13811   */\n      tag_562\n        /* \"#utility.yul\":13808:13810   */\n      0x0f\n        /* \"#utility.yul\":13803:13806   */\n      dup4\n        /* \"#utility.yul\":13744:13811   */\n      tag_385\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":13737:13811   */\n      swap2\n      pop\n        /* \"#utility.yul\":13820:13913   */\n      tag_563\n        /* \"#utility.yul\":13909:13912   */\n      dup3\n        /* \"#utility.yul\":13820:13913   */\n      tag_412\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":13938:13940   */\n      0x20\n        /* \"#utility.yul\":13933:13936   */\n      dup3\n        /* \"#utility.yul\":13929:13941   */\n      add\n        /* \"#utility.yul\":13922:13941   */\n      swap1\n      pop\n        /* \"#utility.yul\":13581:13947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13953:14372   */\n    tag_193:\n        /* \"#utility.yul\":14119:14123   */\n      0x00\n        /* \"#utility.yul\":14157:14159   */\n      0x20\n        /* \"#utility.yul\":14146:14155   */\n      dup3\n        /* \"#utility.yul\":14142:14160   */\n      add\n        /* \"#utility.yul\":14134:14160   */\n      swap1\n      pop\n        /* \"#utility.yul\":14206:14215   */\n      dup2\n        /* \"#utility.yul\":14200:14204   */\n      dup2\n        /* \"#utility.yul\":14196:14216   */\n      sub\n        /* \"#utility.yul\":14192:14193   */\n      0x00\n        /* \"#utility.yul\":14181:14190   */\n      dup4\n        /* \"#utility.yul\":14177:14194   */\n      add\n        /* \"#utility.yul\":14170:14217   */\n      mstore\n        /* \"#utility.yul\":14234:14365   */\n      tag_565\n        /* \"#utility.yul\":14360:14364   */\n      dup2\n        /* \"#utility.yul\":14234:14365   */\n      tag_413\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":14226:14365   */\n      swap1\n      pop\n        /* \"#utility.yul\":13953:14372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14378:14545   */\n    tag_414:\n        /* \"#utility.yul\":14518:14537   */\n      0x486f6c642074696d65206e6f74206d6574000000000000000000000000000000\n        /* \"#utility.yul\":14514:14515   */\n      0x00\n        /* \"#utility.yul\":14506:14512   */\n      dup3\n        /* \"#utility.yul\":14502:14516   */\n      add\n        /* \"#utility.yul\":14495:14538   */\n      mstore\n        /* \"#utility.yul\":14378:14545   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14551:14917   */\n    tag_415:\n        /* \"#utility.yul\":14693:14696   */\n      0x00\n        /* \"#utility.yul\":14714:14781   */\n      tag_568\n        /* \"#utility.yul\":14778:14780   */\n      0x11\n        /* \"#utility.yul\":14773:14776   */\n      dup4\n        /* \"#utility.yul\":14714:14781   */\n      tag_385\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":14707:14781   */\n      swap2\n      pop\n        /* \"#utility.yul\":14790:14883   */\n      tag_569\n        /* \"#utility.yul\":14879:14882   */\n      dup3\n        /* \"#utility.yul\":14790:14883   */\n      tag_414\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":14908:14910   */\n      0x20\n        /* \"#utility.yul\":14903:14906   */\n      dup3\n        /* \"#utility.yul\":14899:14911   */\n      add\n        /* \"#utility.yul\":14892:14911   */\n      swap1\n      pop\n        /* \"#utility.yul\":14551:14917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14923:15342   */\n    tag_198:\n        /* \"#utility.yul\":15089:15093   */\n      0x00\n        /* \"#utility.yul\":15127:15129   */\n      0x20\n        /* \"#utility.yul\":15116:15125   */\n      dup3\n        /* \"#utility.yul\":15112:15130   */\n      add\n        /* \"#utility.yul\":15104:15130   */\n      swap1\n      pop\n        /* \"#utility.yul\":15176:15185   */\n      dup2\n        /* \"#utility.yul\":15170:15174   */\n      dup2\n        /* \"#utility.yul\":15166:15186   */\n      sub\n        /* \"#utility.yul\":15162:15163   */\n      0x00\n        /* \"#utility.yul\":15151:15160   */\n      dup4\n        /* \"#utility.yul\":15147:15164   */\n      add\n        /* \"#utility.yul\":15140:15187   */\n      mstore\n        /* \"#utility.yul\":15204:15335   */\n      tag_571\n        /* \"#utility.yul\":15330:15334   */\n      dup2\n        /* \"#utility.yul\":15204:15335   */\n      tag_415\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":15196:15335   */\n      swap1\n      pop\n        /* \"#utility.yul\":14923:15342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15348:15523   */\n    tag_416:\n        /* \"#utility.yul\":15488:15515   */\n      0x45786365656473206d61782077616c6c657420616d6f756e7400000000000000\n        /* \"#utility.yul\":15484:15485   */\n      0x00\n        /* \"#utility.yul\":15476:15482   */\n      dup3\n        /* \"#utility.yul\":15472:15486   */\n      add\n        /* \"#utility.yul\":15465:15516   */\n      mstore\n        /* \"#utility.yul\":15348:15523   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15529:15895   */\n    tag_417:\n        /* \"#utility.yul\":15671:15674   */\n      0x00\n        /* \"#utility.yul\":15692:15759   */\n      tag_574\n        /* \"#utility.yul\":15756:15758   */\n      0x19\n        /* \"#utility.yul\":15751:15754   */\n      dup4\n        /* \"#utility.yul\":15692:15759   */\n      tag_385\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":15685:15759   */\n      swap2\n      pop\n        /* \"#utility.yul\":15768:15861   */\n      tag_575\n        /* \"#utility.yul\":15857:15860   */\n      dup3\n        /* \"#utility.yul\":15768:15861   */\n      tag_416\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":15886:15888   */\n      0x20\n        /* \"#utility.yul\":15881:15884   */\n      dup3\n        /* \"#utility.yul\":15877:15889   */\n      add\n        /* \"#utility.yul\":15870:15889   */\n      swap1\n      pop\n        /* \"#utility.yul\":15529:15895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15901:16320   */\n    tag_203:\n        /* \"#utility.yul\":16067:16071   */\n      0x00\n        /* \"#utility.yul\":16105:16107   */\n      0x20\n        /* \"#utility.yul\":16094:16103   */\n      dup3\n        /* \"#utility.yul\":16090:16108   */\n      add\n        /* \"#utility.yul\":16082:16108   */\n      swap1\n      pop\n        /* \"#utility.yul\":16154:16163   */\n      dup2\n        /* \"#utility.yul\":16148:16152   */\n      dup2\n        /* \"#utility.yul\":16144:16164   */\n      sub\n        /* \"#utility.yul\":16140:16141   */\n      0x00\n        /* \"#utility.yul\":16129:16138   */\n      dup4\n        /* \"#utility.yul\":16125:16142   */\n      add\n        /* \"#utility.yul\":16118:16165   */\n      mstore\n        /* \"#utility.yul\":16182:16313   */\n      tag_577\n        /* \"#utility.yul\":16308:16312   */\n      dup2\n        /* \"#utility.yul\":16182:16313   */\n      tag_417\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":16174:16313   */\n      swap1\n      pop\n        /* \"#utility.yul\":15901:16320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16326:16493   */\n    tag_418:\n        /* \"#utility.yul\":16466:16485   */\n      0x496e76616c696420726563697069656e74000000000000000000000000000000\n        /* \"#utility.yul\":16462:16463   */\n      0x00\n        /* \"#utility.yul\":16454:16460   */\n      dup3\n        /* \"#utility.yul\":16450:16464   */\n      add\n        /* \"#utility.yul\":16443:16486   */\n      mstore\n        /* \"#utility.yul\":16326:16493   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16499:16865   */\n    tag_419:\n        /* \"#utility.yul\":16641:16644   */\n      0x00\n        /* \"#utility.yul\":16662:16729   */\n      tag_580\n        /* \"#utility.yul\":16726:16728   */\n      0x11\n        /* \"#utility.yul\":16721:16724   */\n      dup4\n        /* \"#utility.yul\":16662:16729   */\n      tag_385\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":16655:16729   */\n      swap2\n      pop\n        /* \"#utility.yul\":16738:16831   */\n      tag_581\n        /* \"#utility.yul\":16827:16830   */\n      dup3\n        /* \"#utility.yul\":16738:16831   */\n      tag_418\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":16856:16858   */\n      0x20\n        /* \"#utility.yul\":16851:16854   */\n      dup3\n        /* \"#utility.yul\":16847:16859   */\n      add\n        /* \"#utility.yul\":16840:16859   */\n      swap1\n      pop\n        /* \"#utility.yul\":16499:16865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16871:17290   */\n    tag_210:\n        /* \"#utility.yul\":17037:17041   */\n      0x00\n        /* \"#utility.yul\":17075:17077   */\n      0x20\n        /* \"#utility.yul\":17064:17073   */\n      dup3\n        /* \"#utility.yul\":17060:17078   */\n      add\n        /* \"#utility.yul\":17052:17078   */\n      swap1\n      pop\n        /* \"#utility.yul\":17124:17133   */\n      dup2\n        /* \"#utility.yul\":17118:17122   */\n      dup2\n        /* \"#utility.yul\":17114:17134   */\n      sub\n        /* \"#utility.yul\":17110:17111   */\n      0x00\n        /* \"#utility.yul\":17099:17108   */\n      dup4\n        /* \"#utility.yul\":17095:17112   */\n      add\n        /* \"#utility.yul\":17088:17135   */\n      mstore\n        /* \"#utility.yul\":17152:17283   */\n      tag_583\n        /* \"#utility.yul\":17278:17282   */\n      dup2\n        /* \"#utility.yul\":17152:17283   */\n      tag_419\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":17144:17283   */\n      swap1\n      pop\n        /* \"#utility.yul\":16871:17290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17296:17476   */\n    tag_224:\n        /* \"#utility.yul\":17344:17421   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17341:17342   */\n      0x00\n        /* \"#utility.yul\":17334:17422   */\n      mstore\n        /* \"#utility.yul\":17441:17445   */\n      0x32\n        /* \"#utility.yul\":17438:17439   */\n      0x04\n        /* \"#utility.yul\":17431:17446   */\n      mstore\n        /* \"#utility.yul\":17465:17469   */\n      0x24\n        /* \"#utility.yul\":17462:17463   */\n      0x00\n        /* \"#utility.yul\":17455:17470   */\n      revert\n        /* \"#utility.yul\":17482:17660   */\n    tag_420:\n        /* \"#utility.yul\":17622:17652   */\n      0x43616e6e6f7420776974686472617720746f6b656e20697473656c6600000000\n        /* \"#utility.yul\":17618:17619   */\n      0x00\n        /* \"#utility.yul\":17610:17616   */\n      dup3\n        /* \"#utility.yul\":17606:17620   */\n      add\n        /* \"#utility.yul\":17599:17653   */\n      mstore\n        /* \"#utility.yul\":17482:17660   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17666:18032   */\n    tag_421:\n        /* \"#utility.yul\":17808:17811   */\n      0x00\n        /* \"#utility.yul\":17829:17896   */\n      tag_587\n        /* \"#utility.yul\":17893:17895   */\n      0x1c\n        /* \"#utility.yul\":17888:17891   */\n      dup4\n        /* \"#utility.yul\":17829:17896   */\n      tag_385\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":17822:17896   */\n      swap2\n      pop\n        /* \"#utility.yul\":17905:17998   */\n      tag_588\n        /* \"#utility.yul\":17994:17997   */\n      dup3\n        /* \"#utility.yul\":17905:17998   */\n      tag_420\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":18023:18025   */\n      0x20\n        /* \"#utility.yul\":18018:18021   */\n      dup3\n        /* \"#utility.yul\":18014:18026   */\n      add\n        /* \"#utility.yul\":18007:18026   */\n      swap1\n      pop\n        /* \"#utility.yul\":17666:18032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18038:18457   */\n    tag_248:\n        /* \"#utility.yul\":18204:18208   */\n      0x00\n        /* \"#utility.yul\":18242:18244   */\n      0x20\n        /* \"#utility.yul\":18231:18240   */\n      dup3\n        /* \"#utility.yul\":18227:18245   */\n      add\n        /* \"#utility.yul\":18219:18245   */\n      swap1\n      pop\n        /* \"#utility.yul\":18291:18300   */\n      dup2\n        /* \"#utility.yul\":18285:18289   */\n      dup2\n        /* \"#utility.yul\":18281:18301   */\n      sub\n        /* \"#utility.yul\":18277:18278   */\n      0x00\n        /* \"#utility.yul\":18266:18275   */\n      dup4\n        /* \"#utility.yul\":18262:18279   */\n      add\n        /* \"#utility.yul\":18255:18302   */\n      mstore\n        /* \"#utility.yul\":18319:18450   */\n      tag_590\n        /* \"#utility.yul\":18445:18449   */\n      dup2\n        /* \"#utility.yul\":18319:18450   */\n      tag_421\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":18311:18450   */\n      swap1\n      pop\n        /* \"#utility.yul\":18038:18457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18463:18606   */\n    tag_422:\n        /* \"#utility.yul\":18520:18525   */\n      0x00\n        /* \"#utility.yul\":18551:18557   */\n      dup2\n        /* \"#utility.yul\":18545:18558   */\n      mload\n        /* \"#utility.yul\":18536:18558   */\n      swap1\n      pop\n        /* \"#utility.yul\":18567:18600   */\n      tag_592\n        /* \"#utility.yul\":18594:18599   */\n      dup2\n        /* \"#utility.yul\":18567:18600   */\n      tag_382\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":18463:18606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18612:18963   */\n    tag_253:\n        /* \"#utility.yul\":18682:18688   */\n      0x00\n        /* \"#utility.yul\":18731:18733   */\n      0x20\n        /* \"#utility.yul\":18719:18728   */\n      dup3\n        /* \"#utility.yul\":18710:18717   */\n      dup5\n        /* \"#utility.yul\":18706:18729   */\n      sub\n        /* \"#utility.yul\":18702:18734   */\n      slt\n        /* \"#utility.yul\":18699:18818   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":18737:18816   */\n      tag_595\n      tag_379\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":18699:18818   */\n    tag_594:\n        /* \"#utility.yul\":18857:18858   */\n      0x00\n        /* \"#utility.yul\":18882:18946   */\n      tag_596\n        /* \"#utility.yul\":18938:18945   */\n      dup5\n        /* \"#utility.yul\":18929:18935   */\n      dup3\n        /* \"#utility.yul\":18918:18927   */\n      dup6\n        /* \"#utility.yul\":18914:18936   */\n      add\n        /* \"#utility.yul\":18882:18946   */\n      tag_422\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":18872:18946   */\n      swap2\n      pop\n        /* \"#utility.yul\":18828:18956   */\n      pop\n        /* \"#utility.yul\":18612:18963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18969:19301   */\n    tag_256:\n        /* \"#utility.yul\":19090:19094   */\n      0x00\n        /* \"#utility.yul\":19128:19130   */\n      0x40\n        /* \"#utility.yul\":19117:19126   */\n      dup3\n        /* \"#utility.yul\":19113:19131   */\n      add\n        /* \"#utility.yul\":19105:19131   */\n      swap1\n      pop\n        /* \"#utility.yul\":19141:19212   */\n      tag_598\n        /* \"#utility.yul\":19209:19210   */\n      0x00\n        /* \"#utility.yul\":19198:19207   */\n      dup4\n        /* \"#utility.yul\":19194:19211   */\n      add\n        /* \"#utility.yul\":19185:19191   */\n      dup6\n        /* \"#utility.yul\":19141:19212   */\n      tag_404\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":19222:19294   */\n      tag_599\n        /* \"#utility.yul\":19290:19292   */\n      0x20\n        /* \"#utility.yul\":19279:19288   */\n      dup4\n        /* \"#utility.yul\":19275:19293   */\n      add\n        /* \"#utility.yul\":19266:19272   */\n      dup5\n        /* \"#utility.yul\":19222:19294   */\n      tag_395\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":18969:19301   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19307:19444   */\n    tag_423:\n        /* \"#utility.yul\":19361:19366   */\n      0x00\n        /* \"#utility.yul\":19392:19398   */\n      dup2\n        /* \"#utility.yul\":19386:19399   */\n      mload\n        /* \"#utility.yul\":19377:19399   */\n      swap1\n      pop\n        /* \"#utility.yul\":19408:19438   */\n      tag_601\n        /* \"#utility.yul\":19432:19437   */\n      dup2\n        /* \"#utility.yul\":19408:19438   */\n      tag_396\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":19307:19444   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19450:19795   */\n    tag_260:\n        /* \"#utility.yul\":19517:19523   */\n      0x00\n        /* \"#utility.yul\":19566:19568   */\n      0x20\n        /* \"#utility.yul\":19554:19563   */\n      dup3\n        /* \"#utility.yul\":19545:19552   */\n      dup5\n        /* \"#utility.yul\":19541:19564   */\n      sub\n        /* \"#utility.yul\":19537:19569   */\n      slt\n        /* \"#utility.yul\":19534:19653   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":19572:19651   */\n      tag_604\n      tag_379\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":19534:19653   */\n    tag_603:\n        /* \"#utility.yul\":19692:19693   */\n      0x00\n        /* \"#utility.yul\":19717:19778   */\n      tag_605\n        /* \"#utility.yul\":19770:19777   */\n      dup5\n        /* \"#utility.yul\":19761:19767   */\n      dup3\n        /* \"#utility.yul\":19750:19759   */\n      dup6\n        /* \"#utility.yul\":19746:19768   */\n      add\n        /* \"#utility.yul\":19717:19778   */\n      tag_423\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":19707:19778   */\n      swap2\n      pop\n        /* \"#utility.yul\":19663:19788   */\n      pop\n        /* \"#utility.yul\":19450:19795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19801:19981   */\n    tag_424:\n        /* \"#utility.yul\":19849:19926   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19846:19847   */\n      0x00\n        /* \"#utility.yul\":19839:19927   */\n      mstore\n        /* \"#utility.yul\":19946:19950   */\n      0x11\n        /* \"#utility.yul\":19943:19944   */\n      0x04\n        /* \"#utility.yul\":19936:19951   */\n      mstore\n        /* \"#utility.yul\":19970:19974   */\n      0x24\n        /* \"#utility.yul\":19967:19968   */\n      0x00\n        /* \"#utility.yul\":19960:19975   */\n      revert\n        /* \"#utility.yul\":19987:20178   */\n    tag_332:\n        /* \"#utility.yul\":20027:20030   */\n      0x00\n        /* \"#utility.yul\":20046:20066   */\n      tag_608\n        /* \"#utility.yul\":20064:20065   */\n      dup3\n        /* \"#utility.yul\":20046:20066   */\n      tag_381\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":20041:20066   */\n      swap2\n      pop\n        /* \"#utility.yul\":20080:20100   */\n      tag_609\n        /* \"#utility.yul\":20098:20099   */\n      dup4\n        /* \"#utility.yul\":20080:20100   */\n      tag_381\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":20075:20100   */\n      swap3\n      pop\n        /* \"#utility.yul\":20123:20124   */\n      dup3\n        /* \"#utility.yul\":20120:20121   */\n      dup3\n        /* \"#utility.yul\":20116:20125   */\n      add\n        /* \"#utility.yul\":20109:20125   */\n      swap1\n      pop\n        /* \"#utility.yul\":20144:20147   */\n      dup1\n        /* \"#utility.yul\":20141:20142   */\n      dup3\n        /* \"#utility.yul\":20138:20148   */\n      gt\n        /* \"#utility.yul\":20135:20171   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":20151:20169   */\n      tag_611\n      tag_424\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":20135:20171   */\n    tag_610:\n        /* \"#utility.yul\":19987:20178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20184:20365   */\n    tag_425:\n        /* \"#utility.yul\":20324:20357   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":20320:20321   */\n      0x00\n        /* \"#utility.yul\":20312:20318   */\n      dup3\n        /* \"#utility.yul\":20308:20322   */\n      add\n        /* \"#utility.yul\":20301:20358   */\n      mstore\n        /* \"#utility.yul\":20184:20365   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20371:20737   */\n    tag_426:\n        /* \"#utility.yul\":20513:20516   */\n      0x00\n        /* \"#utility.yul\":20534:20601   */\n      tag_614\n        /* \"#utility.yul\":20598:20600   */\n      0x1f\n        /* \"#utility.yul\":20593:20596   */\n      dup4\n        /* \"#utility.yul\":20534:20601   */\n      tag_385\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":20527:20601   */\n      swap2\n      pop\n        /* \"#utility.yul\":20610:20703   */\n      tag_615\n        /* \"#utility.yul\":20699:20702   */\n      dup3\n        /* \"#utility.yul\":20610:20703   */\n      tag_425\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":20728:20730   */\n      0x20\n        /* \"#utility.yul\":20723:20726   */\n      dup3\n        /* \"#utility.yul\":20719:20731   */\n      add\n        /* \"#utility.yul\":20712:20731   */\n      swap1\n      pop\n        /* \"#utility.yul\":20371:20737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20743:21162   */\n    tag_336:\n        /* \"#utility.yul\":20909:20913   */\n      0x00\n        /* \"#utility.yul\":20947:20949   */\n      0x20\n        /* \"#utility.yul\":20936:20945   */\n      dup3\n        /* \"#utility.yul\":20932:20950   */\n      add\n        /* \"#utility.yul\":20924:20950   */\n      swap1\n      pop\n        /* \"#utility.yul\":20996:21005   */\n      dup2\n        /* \"#utility.yul\":20990:20994   */\n      dup2\n        /* \"#utility.yul\":20986:21006   */\n      sub\n        /* \"#utility.yul\":20982:20983   */\n      0x00\n        /* \"#utility.yul\":20971:20980   */\n      dup4\n        /* \"#utility.yul\":20967:20984   */\n      add\n        /* \"#utility.yul\":20960:21007   */\n      mstore\n        /* \"#utility.yul\":21024:21155   */\n      tag_617\n        /* \"#utility.yul\":21150:21154   */\n      dup2\n        /* \"#utility.yul\":21024:21155   */\n      tag_426\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":21016:21155   */\n      swap1\n      pop\n        /* \"#utility.yul\":20743:21162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21168:21610   */\n    tag_360:\n        /* \"#utility.yul\":21317:21321   */\n      0x00\n        /* \"#utility.yul\":21355:21357   */\n      0x60\n        /* \"#utility.yul\":21344:21353   */\n      dup3\n        /* \"#utility.yul\":21340:21358   */\n      add\n        /* \"#utility.yul\":21332:21358   */\n      swap1\n      pop\n        /* \"#utility.yul\":21368:21439   */\n      tag_619\n        /* \"#utility.yul\":21436:21437   */\n      0x00\n        /* \"#utility.yul\":21425:21434   */\n      dup4\n        /* \"#utility.yul\":21421:21438   */\n      add\n        /* \"#utility.yul\":21412:21418   */\n      dup7\n        /* \"#utility.yul\":21368:21439   */\n      tag_404\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":21449:21521   */\n      tag_620\n        /* \"#utility.yul\":21517:21519   */\n      0x20\n        /* \"#utility.yul\":21506:21515   */\n      dup4\n        /* \"#utility.yul\":21502:21520   */\n      add\n        /* \"#utility.yul\":21493:21499   */\n      dup6\n        /* \"#utility.yul\":21449:21521   */\n      tag_395\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":21531:21603   */\n      tag_621\n        /* \"#utility.yul\":21599:21601   */\n      0x40\n        /* \"#utility.yul\":21588:21597   */\n      dup4\n        /* \"#utility.yul\":21584:21602   */\n      add\n        /* \"#utility.yul\":21575:21581   */\n      dup5\n        /* \"#utility.yul\":21531:21603   */\n      tag_395\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":21168:21610   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220046c762e4feec9060ada05bb5c89f5409dfd61bcfe662247a648c69cc259d9cd64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1459": {
									"entryPoint": null,
									"id": 1459,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 879,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 684,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 1012,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2673,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1742,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8147:9",
										"nodeType": "YulBlock",
										"src": "0:8147:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "140:152:9",
													"nodeType": "YulBlock",
													"src": "140:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:9",
																		"nodeType": "YulLiteral",
																		"src": "157:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:9",
																		"nodeType": "YulLiteral",
																		"src": "160:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:9"
																},
																"nativeSrc": "150:88:9",
																"nodeType": "YulFunctionCall",
																"src": "150:88:9"
															},
															"nativeSrc": "150:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:9",
																		"nodeType": "YulLiteral",
																		"src": "254:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:9",
																		"nodeType": "YulLiteral",
																		"src": "257:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:9"
																},
																"nativeSrc": "247:15:9",
																"nodeType": "YulFunctionCall",
																"src": "247:15:9"
															},
															"nativeSrc": "247:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:9",
																		"nodeType": "YulLiteral",
																		"src": "278:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:9",
																		"nodeType": "YulLiteral",
																		"src": "281:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:9"
																},
																"nativeSrc": "271:15:9",
																"nodeType": "YulFunctionCall",
																"src": "271:15:9"
															},
															"nativeSrc": "271:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:9"
											},
											{
												"body": {
													"nativeSrc": "326:152:9",
													"nodeType": "YulBlock",
													"src": "326:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:9",
																		"nodeType": "YulLiteral",
																		"src": "343:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:9",
																		"nodeType": "YulLiteral",
																		"src": "346:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:9"
																},
																"nativeSrc": "336:88:9",
																"nodeType": "YulFunctionCall",
																"src": "336:88:9"
															},
															"nativeSrc": "336:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:9",
																		"nodeType": "YulLiteral",
																		"src": "443:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:15:9",
																"nodeType": "YulFunctionCall",
																"src": "433:15:9"
															},
															"nativeSrc": "433:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:9",
																		"nodeType": "YulLiteral",
																		"src": "464:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:9",
																		"nodeType": "YulLiteral",
																		"src": "467:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:9"
																},
																"nativeSrc": "457:15:9",
																"nodeType": "YulFunctionCall",
																"src": "457:15:9"
															},
															"nativeSrc": "457:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:9"
											},
											{
												"body": {
													"nativeSrc": "535:269:9",
													"nodeType": "YulBlock",
													"src": "535:269:9",
													"statements": [
														{
															"nativeSrc": "545:22:9",
															"nodeType": "YulAssignment",
															"src": "545:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:9",
																		"nodeType": "YulLiteral",
																		"src": "565:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:9"
																},
																"nativeSrc": "555:12:9",
																"nodeType": "YulFunctionCall",
																"src": "555:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:9"
																}
															]
														},
														{
															"nativeSrc": "576:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:9",
																		"nodeType": "YulLiteral",
																		"src": "612:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:9"
																},
																"nativeSrc": "602:12:9",
																"nodeType": "YulFunctionCall",
																"src": "602:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:9",
																	"nodeType": "YulTypedName",
																	"src": "580:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:9",
																"nodeType": "YulBlock",
																"src": "653:51:9",
																"statements": [
																	{
																		"nativeSrc": "667:27:9",
																		"nodeType": "YulAssignment",
																		"src": "667:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:9",
																					"nodeType": "YulLiteral",
																					"src": "689:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:9"
																			},
																			"nativeSrc": "677:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:9"
																},
																"nativeSrc": "626:26:9",
																"nodeType": "YulFunctionCall",
																"src": "626:26:9"
															},
															"nativeSrc": "623:81:9",
															"nodeType": "YulIf",
															"src": "623:81:9"
														},
														{
															"body": {
																"nativeSrc": "756:42:9",
																"nodeType": "YulBlock",
																"src": "756:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:9"
																			},
																			"nativeSrc": "770:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:9"
																		},
																		"nativeSrc": "770:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:9",
																				"nodeType": "YulLiteral",
																				"src": "751:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:9"
																		},
																		"nativeSrc": "740:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:9"
																},
																"nativeSrc": "717:38:9",
																"nodeType": "YulFunctionCall",
																"src": "717:38:9"
															},
															"nativeSrc": "714:84:9",
															"nodeType": "YulIf",
															"src": "714:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:9",
														"nodeType": "YulTypedName",
														"src": "519:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:9",
														"nodeType": "YulTypedName",
														"src": "528:6:9",
														"type": ""
													}
												],
												"src": "484:320:9"
											},
											{
												"body": {
													"nativeSrc": "864:87:9",
													"nodeType": "YulBlock",
													"src": "864:87:9",
													"statements": [
														{
															"nativeSrc": "874:11:9",
															"nodeType": "YulAssignment",
															"src": "874:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:9",
																"nodeType": "YulIdentifier",
																"src": "882:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:9",
																		"nodeType": "YulLiteral",
																		"src": "902:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:9"
																},
																"nativeSrc": "895:14:9",
																"nodeType": "YulFunctionCall",
																"src": "895:14:9"
															},
															"nativeSrc": "895:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:9"
														},
														{
															"nativeSrc": "918:26:9",
															"nodeType": "YulAssignment",
															"src": "918:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:9",
																		"nodeType": "YulLiteral",
																		"src": "936:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:9",
																		"nodeType": "YulLiteral",
																		"src": "939:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:9"
																},
																"nativeSrc": "926:18:9",
																"nodeType": "YulFunctionCall",
																"src": "926:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:9",
														"nodeType": "YulTypedName",
														"src": "851:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:9",
														"nodeType": "YulTypedName",
														"src": "859:4:9",
														"type": ""
													}
												],
												"src": "810:141:9"
											},
											{
												"body": {
													"nativeSrc": "1001:49:9",
													"nodeType": "YulBlock",
													"src": "1001:49:9",
													"statements": [
														{
															"nativeSrc": "1011:33:9",
															"nodeType": "YulAssignment",
															"src": "1011:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:9"
																		},
																		"nativeSrc": "1025:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:9"
																},
																"nativeSrc": "1021:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:9",
														"nodeType": "YulTypedName",
														"src": "984:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:9",
														"nodeType": "YulTypedName",
														"src": "994:6:9",
														"type": ""
													}
												],
												"src": "957:93:9"
											},
											{
												"body": {
													"nativeSrc": "1109:54:9",
													"nodeType": "YulBlock",
													"src": "1109:54:9",
													"statements": [
														{
															"nativeSrc": "1119:37:9",
															"nodeType": "YulAssignment",
															"src": "1119:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:9"
																},
																"nativeSrc": "1140:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:9",
														"nodeType": "YulTypedName",
														"src": "1084:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:9",
														"nodeType": "YulTypedName",
														"src": "1090:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:9",
														"nodeType": "YulTypedName",
														"src": "1100:8:9",
														"type": ""
													}
												],
												"src": "1056:107:9"
											},
											{
												"body": {
													"nativeSrc": "1245:317:9",
													"nodeType": "YulBlock",
													"src": "1245:317:9",
													"statements": [
														{
															"nativeSrc": "1255:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:9"
																},
																"nativeSrc": "1272:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:9",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:9",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:9"
																},
																"nativeSrc": "1311:97:9",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:9",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:9",
															"nodeType": "YulAssignment",
															"src": "1417:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:9"
																},
																"nativeSrc": "1429:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:9"
																}
															]
														},
														{
															"nativeSrc": "1477:30:9",
															"nodeType": "YulAssignment",
															"src": "1477:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:9"
																		},
																		"nativeSrc": "1497:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:9"
																},
																"nativeSrc": "1486:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:9"
																}
															]
														},
														{
															"nativeSrc": "1516:40:9",
															"nodeType": "YulAssignment",
															"src": "1516:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:9"
																		},
																		"nativeSrc": "1536:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:9"
																},
																"nativeSrc": "1526:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:9",
														"nodeType": "YulTypedName",
														"src": "1206:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:9",
														"nodeType": "YulTypedName",
														"src": "1213:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:9",
														"nodeType": "YulTypedName",
														"src": "1225:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:9",
														"nodeType": "YulTypedName",
														"src": "1238:6:9",
														"type": ""
													}
												],
												"src": "1169:393:9"
											},
											{
												"body": {
													"nativeSrc": "1613:32:9",
													"nodeType": "YulBlock",
													"src": "1613:32:9",
													"statements": [
														{
															"nativeSrc": "1623:16:9",
															"nodeType": "YulAssignment",
															"src": "1623:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:9",
																"nodeType": "YulIdentifier",
																"src": "1634:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:9",
														"nodeType": "YulTypedName",
														"src": "1595:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:9",
														"nodeType": "YulTypedName",
														"src": "1605:7:9",
														"type": ""
													}
												],
												"src": "1568:77:9"
											},
											{
												"body": {
													"nativeSrc": "1683:28:9",
													"nodeType": "YulBlock",
													"src": "1683:28:9",
													"statements": [
														{
															"nativeSrc": "1693:12:9",
															"nodeType": "YulAssignment",
															"src": "1693:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:9",
																"nodeType": "YulIdentifier",
																"src": "1700:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:9",
														"nodeType": "YulTypedName",
														"src": "1669:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:9",
														"nodeType": "YulTypedName",
														"src": "1679:3:9",
														"type": ""
													}
												],
												"src": "1651:60:9"
											},
											{
												"body": {
													"nativeSrc": "1777:82:9",
													"nodeType": "YulBlock",
													"src": "1777:82:9",
													"statements": [
														{
															"nativeSrc": "1787:66:9",
															"nodeType": "YulAssignment",
															"src": "1787:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:9"
																				},
																				"nativeSrc": "1827:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:9"
																		},
																		"nativeSrc": "1818:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:9"
																},
																"nativeSrc": "1800:53:9",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:9",
														"nodeType": "YulTypedName",
														"src": "1757:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:9",
														"nodeType": "YulTypedName",
														"src": "1767:9:9",
														"type": ""
													}
												],
												"src": "1717:142:9"
											},
											{
												"body": {
													"nativeSrc": "1912:28:9",
													"nodeType": "YulBlock",
													"src": "1912:28:9",
													"statements": [
														{
															"nativeSrc": "1922:12:9",
															"nodeType": "YulAssignment",
															"src": "1922:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:9",
																"nodeType": "YulIdentifier",
																"src": "1929:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:9",
														"nodeType": "YulTypedName",
														"src": "1898:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:9",
														"nodeType": "YulTypedName",
														"src": "1908:3:9",
														"type": ""
													}
												],
												"src": "1865:75:9"
											},
											{
												"body": {
													"nativeSrc": "2022:193:9",
													"nodeType": "YulBlock",
													"src": "2022:193:9",
													"statements": [
														{
															"nativeSrc": "2032:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:9"
																},
																"nativeSrc": "2056:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:9",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:9"
																				},
																				"nativeSrc": "2145:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:9"
																				},
																				"nativeSrc": "2166:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:9"
																		},
																		"nativeSrc": "2117:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:9"
																},
																"nativeSrc": "2104:105:9",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:9"
															},
															"nativeSrc": "2104:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:9",
														"nodeType": "YulTypedName",
														"src": "1999:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:9",
														"nodeType": "YulTypedName",
														"src": "2005:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:9",
														"nodeType": "YulTypedName",
														"src": "2013:7:9",
														"type": ""
													}
												],
												"src": "1946:269:9"
											},
											{
												"body": {
													"nativeSrc": "2270:24:9",
													"nodeType": "YulBlock",
													"src": "2270:24:9",
													"statements": [
														{
															"nativeSrc": "2280:8:9",
															"nodeType": "YulAssignment",
															"src": "2280:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:9",
																"nodeType": "YulLiteral",
																"src": "2287:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:9",
														"nodeType": "YulTypedName",
														"src": "2266:3:9",
														"type": ""
													}
												],
												"src": "2221:73:9"
											},
											{
												"body": {
													"nativeSrc": "2353:136:9",
													"nodeType": "YulBlock",
													"src": "2353:136:9",
													"statements": [
														{
															"nativeSrc": "2363:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:9"
																},
																"nativeSrc": "2377:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:9"
																},
																"nativeSrc": "2418:65:9",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:9"
															},
															"nativeSrc": "2418:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:9",
														"nodeType": "YulTypedName",
														"src": "2339:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:9",
														"nodeType": "YulTypedName",
														"src": "2345:6:9",
														"type": ""
													}
												],
												"src": "2300:189:9"
											},
											{
												"body": {
													"nativeSrc": "2545:136:9",
													"nodeType": "YulBlock",
													"src": "2545:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:9",
																"nodeType": "YulBlock",
																"src": "2612:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:9"
																			},
																			"nativeSrc": "2626:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:9"
																		},
																		"nativeSrc": "2626:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:9"
																},
																"nativeSrc": "2562:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:9"
															},
															"nativeSrc": "2555:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:9",
																"nodeType": "YulBlock",
																"src": "2577:26:9",
																"statements": [
																	{
																		"nativeSrc": "2579:22:9",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:9"
																			},
																			"nativeSrc": "2588:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:9",
																"nodeType": "YulBlock",
																"src": "2559:2:9",
																"statements": []
															},
															"src": "2555:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:9",
														"nodeType": "YulTypedName",
														"src": "2533:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:9",
														"nodeType": "YulTypedName",
														"src": "2540:3:9",
														"type": ""
													}
												],
												"src": "2495:186:9"
											},
											{
												"body": {
													"nativeSrc": "2766:464:9",
													"nodeType": "YulBlock",
													"src": "2766:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:9",
																"nodeType": "YulBlock",
																"src": "2792:431:9",
																"statements": [
																	{
																		"nativeSrc": "2806:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:9"
																			},
																			"nativeSrc": "2822:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:9",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:9"
																					},
																					"nativeSrc": "2906:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:9"
																			},
																			"nativeSrc": "2892:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:9",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:9",
																			"nodeType": "YulBlock",
																			"src": "3093:27:9",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:9",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:9",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:9"
																			},
																			"nativeSrc": "3074:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:9"
																		},
																		"nativeSrc": "3071:49:9",
																		"nodeType": "YulIf",
																		"src": "3071:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:9"
																							},
																							"nativeSrc": "3189:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:9"
																					},
																					"nativeSrc": "3175:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:9"
																			},
																			"nativeSrc": "3133:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:9"
																		},
																		"nativeSrc": "3133:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:9"
																},
																"nativeSrc": "2780:11:9",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:9"
															},
															"nativeSrc": "2777:446:9",
															"nodeType": "YulIf",
															"src": "2777:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:9",
														"nodeType": "YulTypedName",
														"src": "2742:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:9",
														"nodeType": "YulTypedName",
														"src": "2749:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:9",
														"nodeType": "YulTypedName",
														"src": "2754:10:9",
														"type": ""
													}
												],
												"src": "2687:543:9"
											},
											{
												"body": {
													"nativeSrc": "3299:54:9",
													"nodeType": "YulBlock",
													"src": "3299:54:9",
													"statements": [
														{
															"nativeSrc": "3309:37:9",
															"nodeType": "YulAssignment",
															"src": "3309:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:9"
																},
																"nativeSrc": "3330:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:9",
														"nodeType": "YulTypedName",
														"src": "3274:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:9",
														"nodeType": "YulTypedName",
														"src": "3280:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:9",
														"nodeType": "YulTypedName",
														"src": "3290:8:9",
														"type": ""
													}
												],
												"src": "3236:117:9"
											},
											{
												"body": {
													"nativeSrc": "3410:118:9",
													"nodeType": "YulBlock",
													"src": "3410:118:9",
													"statements": [
														{
															"nativeSrc": "3420:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:9"
																				},
																				"nativeSrc": "3465:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:9"
																				},
																				"nativeSrc": "3480:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:9"
																		},
																		"nativeSrc": "3436:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:9"
																},
																"nativeSrc": "3432:56:9",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:9",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:9",
															"nodeType": "YulAssignment",
															"src": "3497:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:9"
																},
																"nativeSrc": "3507:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:9",
														"nodeType": "YulTypedName",
														"src": "3387:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:9",
														"nodeType": "YulTypedName",
														"src": "3393:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:9",
														"nodeType": "YulTypedName",
														"src": "3403:6:9",
														"type": ""
													}
												],
												"src": "3359:169:9"
											},
											{
												"body": {
													"nativeSrc": "3614:214:9",
													"nodeType": "YulBlock",
													"src": "3614:214:9",
													"statements": [
														{
															"nativeSrc": "3747:37:9",
															"nodeType": "YulAssignment",
															"src": "3747:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:9"
																},
																"nativeSrc": "3755:29:9",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:9"
																}
															]
														},
														{
															"nativeSrc": "3793:29:9",
															"nodeType": "YulAssignment",
															"src": "3793:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:9"
																		},
																		"nativeSrc": "3810:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:9"
																},
																"nativeSrc": "3801:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:9",
														"nodeType": "YulTypedName",
														"src": "3595:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:9",
														"nodeType": "YulTypedName",
														"src": "3601:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:9",
														"nodeType": "YulTypedName",
														"src": "3609:4:9",
														"type": ""
													}
												],
												"src": "3533:295:9"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:9",
													"nodeType": "YulBlock",
													"src": "3925:1303:9",
													"statements": [
														{
															"nativeSrc": "3936:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:9"
																},
																"nativeSrc": "3950:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:9",
																"nodeType": "YulBlock",
																"src": "4072:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:9"
																			},
																			"nativeSrc": "4074:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:9"
																		},
																		"nativeSrc": "4074:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:9",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:9"
																},
																"nativeSrc": "4041:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:9"
															},
															"nativeSrc": "4038:56:9",
															"nodeType": "YulIf",
															"src": "4038:56:9"
														},
														{
															"nativeSrc": "4104:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:9"
																		},
																		"nativeSrc": "4144:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:9"
																},
																"nativeSrc": "4118:38:9",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:9"
																},
																"nativeSrc": "4203:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:9"
															},
															"nativeSrc": "4203:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:9"
														},
														{
															"nativeSrc": "4280:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:9",
																"nodeType": "YulLiteral",
																"src": "4297:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:9",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:9",
															"nodeType": "YulAssignment",
															"src": "4308:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:9",
																"nodeType": "YulLiteral",
																"src": "4321:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:9",
																		"nodeType": "YulBlock",
																		"src": "4372:611:9",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:9",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:9"
																							},
																							"nativeSrc": "4413:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:9"
																					},
																					"nativeSrc": "4401:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:9",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:9"
																					},
																					"nativeSrc": "4451:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:9",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:9",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:9",
																					"nodeType": "YulBlock",
																					"src": "4569:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:9"
																												},
																												"nativeSrc": "4608:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:9"
																										},
																										"nativeSrc": "4602:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:9"
																								},
																								"nativeSrc": "4587:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:9"
																							},
																							"nativeSrc": "4587:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:9"
																						},
																						{
																							"nativeSrc": "4646:24:9",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:9",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:9"
																								},
																								"nativeSrc": "4656:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:9",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:9",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:9"
																								},
																								"nativeSrc": "4700:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:9"
																					},
																					"nativeSrc": "4532:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:9"
																				},
																				"nativeSrc": "4524:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:9",
																					"nodeType": "YulBlock",
																					"src": "4547:21:9",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:9",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:9",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:9"
																								},
																								"nativeSrc": "4554:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:9",
																					"nodeType": "YulBlock",
																					"src": "4528:3:9",
																					"statements": []
																				},
																				"src": "4524:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:9",
																					"nodeType": "YulBlock",
																					"src": "4768:156:9",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:9"
																										},
																										"nativeSrc": "4809:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:9"
																								},
																								"nativeSrc": "4803:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:9",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:9",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:9"
																												},
																												"nativeSrc": "4891:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:9"
																										},
																										"nativeSrc": "4861:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:9"
																								},
																								"nativeSrc": "4846:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:9"
																							},
																							"nativeSrc": "4846:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:9"
																					},
																					"nativeSrc": "4748:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:9"
																				},
																				"nativeSrc": "4745:179:9",
																				"nodeType": "YulIf",
																				"src": "4745:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:9",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:9"
																									},
																									"nativeSrc": "4954:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:9",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:9"
																							},
																							"nativeSrc": "4950:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:9"
																					},
																					"nativeSrc": "4937:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:9"
																				},
																				"nativeSrc": "4937:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:9"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:9",
																	"nodeType": "YulCase",
																	"src": "4365:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:9",
																		"nodeType": "YulBlock",
																		"src": "5000:222:9",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:9",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:9",
																					"nodeType": "YulBlock",
																					"src": "5051:67:9",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:9",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:9"
																										},
																										"nativeSrc": "5084:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:9"
																								},
																								"nativeSrc": "5078:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:9"
																				},
																				"nativeSrc": "5041:77:9",
																				"nodeType": "YulIf",
																				"src": "5041:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:9"
																							},
																							"nativeSrc": "5144:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:9"
																					},
																					"nativeSrc": "5131:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:9"
																				},
																				"nativeSrc": "5131:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:9"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:9",
																	"nodeType": "YulCase",
																	"src": "4992:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:9"
																},
																"nativeSrc": "4342:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:9"
															},
															"nativeSrc": "4335:887:9",
															"nodeType": "YulSwitch",
															"src": "4335:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:9",
														"nodeType": "YulTypedName",
														"src": "3914:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:9",
														"nodeType": "YulTypedName",
														"src": "3920:3:9",
														"type": ""
													}
												],
												"src": "3833:1395:9"
											},
											{
												"body": {
													"nativeSrc": "5279:81:9",
													"nodeType": "YulBlock",
													"src": "5279:81:9",
													"statements": [
														{
															"nativeSrc": "5289:65:9",
															"nodeType": "YulAssignment",
															"src": "5289:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:9",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:9"
																},
																"nativeSrc": "5300:54:9",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:9",
														"nodeType": "YulTypedName",
														"src": "5261:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:9",
														"nodeType": "YulTypedName",
														"src": "5271:7:9",
														"type": ""
													}
												],
												"src": "5234:126:9"
											},
											{
												"body": {
													"nativeSrc": "5411:51:9",
													"nodeType": "YulBlock",
													"src": "5411:51:9",
													"statements": [
														{
															"nativeSrc": "5421:35:9",
															"nodeType": "YulAssignment",
															"src": "5421:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:9"
																},
																"nativeSrc": "5432:24:9",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:9",
														"nodeType": "YulTypedName",
														"src": "5393:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:9",
														"nodeType": "YulTypedName",
														"src": "5403:7:9",
														"type": ""
													}
												],
												"src": "5366:96:9"
											},
											{
												"body": {
													"nativeSrc": "5533:53:9",
													"nodeType": "YulBlock",
													"src": "5533:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:9"
																		},
																		"nativeSrc": "5555:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:9"
																},
																"nativeSrc": "5543:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:9"
															},
															"nativeSrc": "5543:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:9",
														"nodeType": "YulTypedName",
														"src": "5521:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:9",
														"nodeType": "YulTypedName",
														"src": "5528:3:9",
														"type": ""
													}
												],
												"src": "5468:118:9"
											},
											{
												"body": {
													"nativeSrc": "5690:124:9",
													"nodeType": "YulBlock",
													"src": "5690:124:9",
													"statements": [
														{
															"nativeSrc": "5700:26:9",
															"nodeType": "YulAssignment",
															"src": "5700:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:9"
																},
																"nativeSrc": "5708:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:9"
																		},
																		"nativeSrc": "5789:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:9"
																},
																"nativeSrc": "5736:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:9"
															},
															"nativeSrc": "5736:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:9",
														"nodeType": "YulTypedName",
														"src": "5662:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:9",
														"nodeType": "YulTypedName",
														"src": "5674:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:9",
														"nodeType": "YulTypedName",
														"src": "5685:4:9",
														"type": ""
													}
												],
												"src": "5592:222:9"
											},
											{
												"body": {
													"nativeSrc": "5916:73:9",
													"nodeType": "YulBlock",
													"src": "5916:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5933:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5933:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5938:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5938:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5926:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5926:6:9"
																},
																"nativeSrc": "5926:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5926:19:9"
															},
															"nativeSrc": "5926:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "5926:19:9"
														},
														{
															"nativeSrc": "5954:29:9",
															"nodeType": "YulAssignment",
															"src": "5954:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5973:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5973:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5978:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5978:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5969:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5969:3:9"
																},
																"nativeSrc": "5969:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5969:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5954:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "5954:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5820:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5888:3:9",
														"nodeType": "YulTypedName",
														"src": "5888:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5893:6:9",
														"nodeType": "YulTypedName",
														"src": "5893:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5904:11:9",
														"nodeType": "YulTypedName",
														"src": "5904:11:9",
														"type": ""
													}
												],
												"src": "5820:169:9"
											},
											{
												"body": {
													"nativeSrc": "6101:63:9",
													"nodeType": "YulBlock",
													"src": "6101:63:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6123:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6123:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6131:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6131:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6119:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6119:3:9"
																		},
																		"nativeSrc": "6119:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6119:14:9"
																	},
																	{
																		"hexValue": "416c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "6135:21:9",
																		"nodeType": "YulLiteral",
																		"src": "6135:21:9",
																		"type": "",
																		"value": "Already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6112:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6112:6:9"
																},
																"nativeSrc": "6112:45:9",
																"nodeType": "YulFunctionCall",
																"src": "6112:45:9"
															},
															"nativeSrc": "6112:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "6112:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
												"nativeSrc": "5995:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6093:6:9",
														"nodeType": "YulTypedName",
														"src": "6093:6:9",
														"type": ""
													}
												],
												"src": "5995:169:9"
											},
											{
												"body": {
													"nativeSrc": "6316:220:9",
													"nodeType": "YulBlock",
													"src": "6316:220:9",
													"statements": [
														{
															"nativeSrc": "6326:74:9",
															"nodeType": "YulAssignment",
															"src": "6326:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6392:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6392:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6397:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6397:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6333:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "6333:58:9"
																},
																"nativeSrc": "6333:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6333:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6326:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6326:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6498:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6498:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																	"nativeSrc": "6409:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "6409:88:9"
																},
																"nativeSrc": "6409:93:9",
																"nodeType": "YulFunctionCall",
																"src": "6409:93:9"
															},
															"nativeSrc": "6409:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "6409:93:9"
														},
														{
															"nativeSrc": "6511:19:9",
															"nodeType": "YulAssignment",
															"src": "6511:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6522:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6522:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6527:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6527:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6518:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6518:3:9"
																},
																"nativeSrc": "6518:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6518:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6511:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6511:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6170:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6304:3:9",
														"nodeType": "YulTypedName",
														"src": "6304:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6312:3:9",
														"nodeType": "YulTypedName",
														"src": "6312:3:9",
														"type": ""
													}
												],
												"src": "6170:366:9"
											},
											{
												"body": {
													"nativeSrc": "6713:248:9",
													"nodeType": "YulBlock",
													"src": "6713:248:9",
													"statements": [
														{
															"nativeSrc": "6723:26:9",
															"nodeType": "YulAssignment",
															"src": "6723:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6735:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6735:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6746:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6731:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:9"
																},
																"nativeSrc": "6731:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6731:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6723:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6723:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6770:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6770:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6781:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6781:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6766:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6766:3:9"
																		},
																		"nativeSrc": "6766:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6766:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6789:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6789:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6795:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6795:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6785:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6785:3:9"
																		},
																		"nativeSrc": "6785:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6785:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:9"
																},
																"nativeSrc": "6759:47:9",
																"nodeType": "YulFunctionCall",
																"src": "6759:47:9"
															},
															"nativeSrc": "6759:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "6759:47:9"
														},
														{
															"nativeSrc": "6815:139:9",
															"nodeType": "YulAssignment",
															"src": "6815:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6949:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6949:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6823:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "6823:124:9"
																},
																"nativeSrc": "6823:131:9",
																"nodeType": "YulFunctionCall",
																"src": "6823:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6815:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6815:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6542:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6693:9:9",
														"nodeType": "YulTypedName",
														"src": "6693:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6708:4:9",
														"nodeType": "YulTypedName",
														"src": "6708:4:9",
														"type": ""
													}
												],
												"src": "6542:419:9"
											},
											{
												"body": {
													"nativeSrc": "7032:53:9",
													"nodeType": "YulBlock",
													"src": "7032:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7049:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7049:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7072:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7072:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7054:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "7054:17:9"
																		},
																		"nativeSrc": "7054:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7054:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7042:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7042:6:9"
																},
																"nativeSrc": "7042:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7042:37:9"
															},
															"nativeSrc": "7042:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "7042:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6967:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7020:5:9",
														"nodeType": "YulTypedName",
														"src": "7020:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7027:3:9",
														"nodeType": "YulTypedName",
														"src": "7027:3:9",
														"type": ""
													}
												],
												"src": "6967:118:9"
											},
											{
												"body": {
													"nativeSrc": "7189:124:9",
													"nodeType": "YulBlock",
													"src": "7189:124:9",
													"statements": [
														{
															"nativeSrc": "7199:26:9",
															"nodeType": "YulAssignment",
															"src": "7199:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7211:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7211:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7222:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7222:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7207:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7207:3:9"
																},
																"nativeSrc": "7207:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7207:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7199:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7199:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7279:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7279:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7292:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7292:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7303:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7303:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7288:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7288:3:9"
																		},
																		"nativeSrc": "7288:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7288:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7235:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7235:43:9"
																},
																"nativeSrc": "7235:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7235:71:9"
															},
															"nativeSrc": "7235:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7235:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7091:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7161:9:9",
														"nodeType": "YulTypedName",
														"src": "7161:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7173:6:9",
														"nodeType": "YulTypedName",
														"src": "7173:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7184:4:9",
														"nodeType": "YulTypedName",
														"src": "7184:4:9",
														"type": ""
													}
												],
												"src": "7091:222:9"
											},
											{
												"body": {
													"nativeSrc": "7347:152:9",
													"nodeType": "YulBlock",
													"src": "7347:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7364:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7364:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7367:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7367:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7357:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7357:6:9"
																},
																"nativeSrc": "7357:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7357:88:9"
															},
															"nativeSrc": "7357:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7357:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7461:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7461:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7464:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7464:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7454:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7454:6:9"
																},
																"nativeSrc": "7454:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7454:15:9"
															},
															"nativeSrc": "7454:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7454:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7485:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7485:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7488:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7488:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7478:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7478:6:9"
																},
																"nativeSrc": "7478:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7478:15:9"
															},
															"nativeSrc": "7478:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7478:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7319:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7319:180:9"
											},
											{
												"body": {
													"nativeSrc": "7549:147:9",
													"nodeType": "YulBlock",
													"src": "7549:147:9",
													"statements": [
														{
															"nativeSrc": "7559:25:9",
															"nodeType": "YulAssignment",
															"src": "7559:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7582:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7582:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7564:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7564:17:9"
																},
																"nativeSrc": "7564:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7564:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7559:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7559:1:9"
																}
															]
														},
														{
															"nativeSrc": "7593:25:9",
															"nodeType": "YulAssignment",
															"src": "7593:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7616:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7616:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7598:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7598:17:9"
																},
																"nativeSrc": "7598:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7598:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7593:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7593:1:9"
																}
															]
														},
														{
															"nativeSrc": "7627:16:9",
															"nodeType": "YulAssignment",
															"src": "7627:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7638:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7638:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7641:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7641:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7634:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7634:3:9"
																},
																"nativeSrc": "7634:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7634:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7627:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7627:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7667:22:9",
																"nodeType": "YulBlock",
																"src": "7667:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7669:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7669:16:9"
																			},
																			"nativeSrc": "7669:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7669:18:9"
																		},
																		"nativeSrc": "7669:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7669:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7659:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7659:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7662:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7662:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7656:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7656:2:9"
																},
																"nativeSrc": "7656:10:9",
																"nodeType": "YulFunctionCall",
																"src": "7656:10:9"
															},
															"nativeSrc": "7653:36:9",
															"nodeType": "YulIf",
															"src": "7653:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7505:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7536:1:9",
														"nodeType": "YulTypedName",
														"src": "7536:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7539:1:9",
														"nodeType": "YulTypedName",
														"src": "7539:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7545:3:9",
														"nodeType": "YulTypedName",
														"src": "7545:3:9",
														"type": ""
													}
												],
												"src": "7505:191:9"
											},
											{
												"body": {
													"nativeSrc": "7856:288:9",
													"nodeType": "YulBlock",
													"src": "7856:288:9",
													"statements": [
														{
															"nativeSrc": "7866:26:9",
															"nodeType": "YulAssignment",
															"src": "7866:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7878:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7878:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7889:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7874:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7874:3:9"
																},
																"nativeSrc": "7874:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7874:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7866:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7866:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7946:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7946:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7959:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7959:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7970:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7970:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7955:3:9"
																		},
																		"nativeSrc": "7955:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7955:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7902:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7902:43:9"
																},
																"nativeSrc": "7902:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7902:71:9"
															},
															"nativeSrc": "7902:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7902:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8027:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8027:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8040:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8040:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8051:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8051:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8036:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8036:3:9"
																		},
																		"nativeSrc": "8036:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8036:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7983:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7983:43:9"
																},
																"nativeSrc": "7983:72:9",
																"nodeType": "YulFunctionCall",
																"src": "7983:72:9"
															},
															"nativeSrc": "7983:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "7983:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8109:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8109:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8122:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8122:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8133:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8133:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8118:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:9"
																		},
																		"nativeSrc": "8118:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8118:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8065:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8065:43:9"
																},
																"nativeSrc": "8065:72:9",
																"nodeType": "YulFunctionCall",
																"src": "8065:72:9"
															},
															"nativeSrc": "8065:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "8065:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7702:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7812:9:9",
														"nodeType": "YulTypedName",
														"src": "7812:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7824:6:9",
														"nodeType": "YulTypedName",
														"src": "7824:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7832:6:9",
														"nodeType": "YulTypedName",
														"src": "7832:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7840:6:9",
														"nodeType": "YulTypedName",
														"src": "7840:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7851:4:9",
														"nodeType": "YulTypedName",
														"src": "7851:4:9",
														"type": ""
													}
												],
												"src": "7702:442:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50336040518060400160405280601181526020017f50726f7068656379204a696d70736f6e730000000000000000000000000000008152506040518060400160405280600481526020017f4a696d7000000000000000000000000000000000000000000000000000000000815250816003908161008c919061084a565b50806004908161009c919061084a565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101069190610958565b60405180910390fd5b61011e816102ac60201b60201c565b50600160068190555060075f9054906101000a900460ff1615610176576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016d906109cb565b60405180910390fd5b610192336b204fce5e3e2502611000000061036f60201b60201c565b600160075f6101000a81548160ff021916908315150217905550683635c9adc5dea0000060088190555069152d02c7e14af6800000600a8190555062015180600981905550603c6010819055505f600b5f6101000a81548160ff0219169083151502179055506001600f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f9d5570c03a71af73640da09c132d73bb3efe7ca4f55516a1afc2597cbdfd620c6b204fce5e3e2502611000000060405161029f91906109f8565b60405180910390a2610aa6565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103df575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103d69190610958565b60405180910390fd5b6103f05f83836103f460201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610444578060025f8282546104389190610a3e565b92505081905550610512565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156104cd578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104c493929190610a71565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610559578060025f82825403925050819055506105a3565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161060091906109f8565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061068857607f821691505b60208210810361069b5761069a610644565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106fd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106c2565b61070786836106c2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61074b6107466107418461071f565b610728565b61071f565b9050919050565b5f819050919050565b61076483610731565b61077861077082610752565b8484546106ce565b825550505050565b5f5f905090565b61078f610780565b61079a81848461075b565b505050565b5b818110156107bd576107b25f82610787565b6001810190506107a0565b5050565b601f821115610802576107d3816106a1565b6107dc846106b3565b810160208510156107eb578190505b6107ff6107f7856106b3565b83018261079f565b50505b505050565b5f82821c905092915050565b5f6108225f1984600802610807565b1980831691505092915050565b5f61083a8383610813565b9150826002028217905092915050565b6108538261060d565b67ffffffffffffffff81111561086c5761086b610617565b5b6108768254610671565b6108818282856107c1565b5f60209050601f8311600181146108b2575f84156108a0578287015190505b6108aa858261082f565b865550610911565b601f1984166108c0866106a1565b5f5b828110156108e7578489015182556001820191506020850194506020810190506108c2565b868310156109045784890151610900601f891682610813565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61094282610919565b9050919050565b61095281610938565b82525050565b5f60208201905061096b5f830184610949565b92915050565b5f82825260208201905092915050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f6109b5601383610971565b91506109c082610981565b602082019050919050565b5f6020820190508181035f8301526109e2816109a9565b9050919050565b6109f28161071f565b82525050565b5f602082019050610a0b5f8301846109e9565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a488261071f565b9150610a538361071f565b9250828201905080821115610a6b57610a6a610a11565b5b92915050565b5f606082019050610a845f830186610949565b610a9160208301856109e9565b610a9e60408301846109e9565b949350505050565b612c7180610ab35f395ff3fe608060405234801561000f575f5ffd5b50600436106101d8575f3560e01c8063611274c5116101025780639155e083116100a0578063aa4bde281161006f578063aa4bde2814610544578063dd62ed3e14610562578063f2fde38b14610592578063fe575a87146105ae576101d8565b80639155e083146104bc57806395d89b41146104d8578063a9059cbb146104f6578063a9e7572314610526576101d8565b806370a08231116100dc57806370a0823114610448578063715018a6146104785780638da5cb5b146104825780638f70ccf7146104a0576101d8565b8063611274c5146103f257806368f162931461040e5780636ff1c9bc1461042c576101d8565b806323b872dd1161017a578063330671ad11610149578063330671ad1461036a5780633af32abf146103885780634ada218b146103b85780636072e6a8146103d6576101d8565b806323b872dd146102ce578063283af019146102fe578063313ce5671461032e57806332cb6b0c1461034c576101d8565b80630d2d8a31116101b65780630d2d8a31146102465780630d392cd914610276578063158ef93e1461029257806318160ddd146102b0576101d8565b806302cd093d146101dc57806306fdde03146101f8578063095ea7b314610216575b5f5ffd5b6101f660048036038101906101f1919061223f565b6105de565b005b610200610645565b60405161020d9190612313565b60405180910390f35b610230600480360381019061022b919061238d565b6106d5565b60405161023d91906123e5565b60405180910390f35b610260600480360381019061025b91906123fe565b6106f7565b60405161026d9190612438565b60405180910390f35b610290600480360381019061028b919061247b565b61070c565b005b61029a6107ba565b6040516102a791906123e5565b60405180910390f35b6102b86107cc565b6040516102c59190612438565b60405180910390f35b6102e860048036038101906102e391906124b9565b6107d5565b6040516102f591906123e5565b60405180910390f35b610318600480360381019061031391906123fe565b610d79565b6040516103259190612438565b60405180910390f35b610336610d8e565b6040516103439190612524565b60405180910390f35b610354610d96565b6040516103619190612438565b60405180910390f35b610372610da6565b60405161037f9190612438565b60405180910390f35b6103a2600480360381019061039d91906123fe565b610dac565b6040516103af91906123e5565b60405180910390f35b6103c0610dc9565b6040516103cd91906123e5565b60405180910390f35b6103f060048036038101906103eb919061259e565b610ddb565b005b61040c6004803603810190610407919061259e565b610ef6565b005b610416611011565b6040516104239190612438565b60405180910390f35b610446600480360381019061044191906123fe565b611017565b005b610462600480360381019061045d91906123fe565b61118f565b60405161046f9190612438565b60405180910390f35b6104806111d4565b005b61048a6111e7565b604051610497919061260a565b60405180910390f35b6104ba60048036038101906104b59190612623565b61120f565b005b6104d660048036038101906104d1919061247b565b61126a565b005b6104e0611318565b6040516104ed9190612313565b60405180910390f35b610510600480360381019061050b919061238d565b6113a8565b60405161051d91906123e5565b60405180910390f35b61052e61194a565b60405161053b9190612438565b60405180910390f35b61054c611950565b6040516105599190612438565b60405180910390f35b61057c6004803603810190610577919061264e565b611956565b6040516105899190612438565b60405180910390f35b6105ac60048036038101906105a791906123fe565b6119d8565b005b6105c860048036038101906105c391906123fe565b611a5c565b6040516105d591906123e5565b60405180910390f35b6105e6611a79565b8360088190555082600a8190555081600981905550806010819055507fbb5d5c94dff5adb0bc0e043a6c2cf9bb8153231069831102f0e8e53b89924f1f84848484604051610637949392919061268c565b60405180910390a150505050565b606060038054610654906126fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610680906126fc565b80156106cb5780601f106106a2576101008083540402835291602001916106cb565b820191905f5260205f20905b8154815290600101906020018083116106ae57829003601f168201915b5050505050905090565b5f5f6106df611b00565b90506106ec818585611b07565b600191505092915050565b600c602052805f5260405f205f915090505481565b610714611a79565b80600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d826040516107ae91906123e5565b60405180910390a25050565b60075f9054906101000a900460ff1681565b5f600254905090565b5f838383600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156108775750600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b6108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90612776565b60405180910390fd5b600b5f9054906101000a900460ff16806109165750600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b806109675750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b6109a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099d906127de565b60405180910390fd5b600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015610a445750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15610c6057600854811115610a8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8590612846565b60405180910390fd5b610ae0601054600c5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611b1990919063ffffffff16565b421015610b22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b19906128ae565b60405180910390fd5b5f600d5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414610bfb57610bb8600954600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611b1990919063ffffffff16565b421015610bfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf190612916565b60405180910390fd5b5b5f610c1782610c098561118f565b611b1990919063ffffffff16565b9050600a54811115610c5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c559061297e565b60405180910390fd5b505b610c68611b2e565b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd906129e6565b60405180910390fd5b42600d5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600c5f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610d65878787611b7d565b9350610d6f611bab565b5050509392505050565b600d602052805f5260405f205f915090505481565b5f6012905090565b6b204fce5e3e2502611000000081565b60095481565b600f602052805f5260405f205f915054906101000a900460ff1681565b600b5f9054906101000a900460ff1681565b610de3611a79565b5f5f90505b83839050811015610ef05781600e5f868685818110610e0a57610e09612a04565b5b9050602002016020810190610e1f91906123fe565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550838382818110610e8157610e80612a04565b5b9050602002016020810190610e9691906123fe565b73ffffffffffffffffffffffffffffffffffffffff167f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac83604051610edb91906123e5565b60405180910390a28080600101915050610de8565b50505050565b610efe611a79565b5f5f90505b8383905081101561100b5781600f5f868685818110610f2557610f24612a04565b5b9050602002016020810190610f3a91906123fe565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550838382818110610f9c57610f9b612a04565b5b9050602002016020810190610fb191906123fe565b73ffffffffffffffffffffffffffffffffffffffff167ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d83604051610ff691906123e5565b60405180910390a28080600101915050610f03565b50505050565b60105481565b61101f611a79565b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361108d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108490612a7b565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110c7919061260a565b602060405180830381865afa1580156110e2573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111069190612aad565b90508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61112c6111e7565b836040518363ffffffff1660e01b815260040161114a929190612ad8565b6020604051808303815f875af1158015611166573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061118a9190612b13565b505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6111dc611a79565b6111e55f611bb5565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611217611a79565b80600b5f6101000a81548160ff0219169083151502179055507fbeda7dca7bc1b3e80b871f4818129ec73b771581f803d553aeb3484098e5f65a8160405161125f91906123e5565b60405180910390a150565b611272611a79565b80600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac8260405161130c91906123e5565b60405180910390a25050565b606060048054611327906126fc565b80601f0160208091040260200160405190810160405280929190818152602001828054611353906126fc565b801561139e5780601f106113755761010080835404028352916020019161139e565b820191905f5260205f20905b81548152906001019060200180831161138157829003601f168201915b5050505050905090565b5f338383600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615801561144a5750600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b611489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148090612776565b60405180910390fd5b600b5f9054906101000a900460ff16806114e95750600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b8061153a5750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b611579576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611570906127de565b60405180910390fd5b600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156116175750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b1561183357600854811115611661576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165890612846565b60405180910390fd5b6116b3601054600c5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611b1990919063ffffffff16565b4210156116f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ec906128ae565b60405180910390fd5b5f600d5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146117ce5761178b600954600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611b1990919063ffffffff16565b4210156117cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c490612916565b60405180910390fd5b5b5f6117ea826117dc8561118f565b611b1990919063ffffffff16565b9050600a54811115611831576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118289061297e565b60405180910390fd5b505b61183b611b2e565b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036118a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a0906129e6565b60405180910390fd5b42600d5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506119378686611c78565b9350611941611bab565b50505092915050565b60085481565b600a5481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6119e0611a79565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a50575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611a47919061260a565b60405180910390fd5b611a5981611bb5565b50565b600e602052805f5260405f205f915054906101000a900460ff1681565b611a81611b00565b73ffffffffffffffffffffffffffffffffffffffff16611a9f6111e7565b73ffffffffffffffffffffffffffffffffffffffff1614611afe57611ac2611b00565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611af5919061260a565b60405180910390fd5b565b5f33905090565b611b148383836001611c9a565b505050565b5f8183611b269190612b6b565b905092915050565b600260065403611b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6a90612be8565b60405180910390fd5b6002600681905550565b5f5f611b87611b00565b9050611b94858285611e69565b611b9f858585611efb565b60019150509392505050565b6001600681905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f611c82611b00565b9050611c8f818585611efb565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611d0a575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611d01919061260a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d7a575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611d71919061260a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611e63578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611e5a9190612438565b60405180910390a35b50505050565b5f611e748484611956565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611ef55781811015611ee6578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611edd93929190612c06565b60405180910390fd5b611ef484848484035f611c9a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f6b575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611f62919061260a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611fdb575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611fd2919061260a565b60405180910390fd5b611fe6838383611feb565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361203b578060025f82825461202f9190612b6b565b92505081905550612109565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156120c4578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016120bb93929190612c06565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612150578060025f828254039250508190555061219a565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516121f79190612438565b60405180910390a3505050565b5f5ffd5b5f5ffd5b5f819050919050565b61221e8161220c565b8114612228575f5ffd5b50565b5f8135905061223981612215565b92915050565b5f5f5f5f6080858703121561225757612256612204565b5b5f6122648782880161222b565b94505060206122758782880161222b565b93505060406122868782880161222b565b92505060606122978782880161222b565b91505092959194509250565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6122e5826122a3565b6122ef81856122ad565b93506122ff8185602086016122bd565b612308816122cb565b840191505092915050565b5f6020820190508181035f83015261232b81846122db565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61235c82612333565b9050919050565b61236c81612352565b8114612376575f5ffd5b50565b5f8135905061238781612363565b92915050565b5f5f604083850312156123a3576123a2612204565b5b5f6123b085828601612379565b92505060206123c18582860161222b565b9150509250929050565b5f8115159050919050565b6123df816123cb565b82525050565b5f6020820190506123f85f8301846123d6565b92915050565b5f6020828403121561241357612412612204565b5b5f61242084828501612379565b91505092915050565b6124328161220c565b82525050565b5f60208201905061244b5f830184612429565b92915050565b61245a816123cb565b8114612464575f5ffd5b50565b5f8135905061247581612451565b92915050565b5f5f6040838503121561249157612490612204565b5b5f61249e85828601612379565b92505060206124af85828601612467565b9150509250929050565b5f5f5f606084860312156124d0576124cf612204565b5b5f6124dd86828701612379565b93505060206124ee86828701612379565b92505060406124ff8682870161222b565b9150509250925092565b5f60ff82169050919050565b61251e81612509565b82525050565b5f6020820190506125375f830184612515565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261255e5761255d61253d565b5b8235905067ffffffffffffffff81111561257b5761257a612541565b5b60208301915083602082028301111561259757612596612545565b5b9250929050565b5f5f5f604084860312156125b5576125b4612204565b5b5f84013567ffffffffffffffff8111156125d2576125d1612208565b5b6125de86828701612549565b935093505060206125f186828701612467565b9150509250925092565b61260481612352565b82525050565b5f60208201905061261d5f8301846125fb565b92915050565b5f6020828403121561263857612637612204565b5b5f61264584828501612467565b91505092915050565b5f5f6040838503121561266457612663612204565b5b5f61267185828601612379565b925050602061268285828601612379565b9150509250929050565b5f60808201905061269f5f830187612429565b6126ac6020830186612429565b6126b96040830185612429565b6126c66060830184612429565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061271357607f821691505b602082108103612726576127256126cf565b5b50919050565b7f4164647265737320697320626c61636b6c6973746564000000000000000000005f82015250565b5f6127606016836122ad565b915061276b8261272c565b602082019050919050565b5f6020820190508181035f83015261278d81612754565b9050919050565b7f54726164696e67206e6f7420656e61626c6564000000000000000000000000005f82015250565b5f6127c86013836122ad565b91506127d382612794565b602082019050919050565b5f6020820190508181035f8301526127f5816127bc565b9050919050565b7f5472616e736665722065786365656473206d617820616d6f756e7400000000005f82015250565b5f612830601b836122ad565b915061283b826127fc565b602082019050919050565b5f6020820190508181035f83015261285d81612824565b9050919050565b7f436f6f6c646f776e2061637469766500000000000000000000000000000000005f82015250565b5f612898600f836122ad565b91506128a382612864565b602082019050919050565b5f6020820190508181035f8301526128c58161288c565b9050919050565b7f486f6c642074696d65206e6f74206d65740000000000000000000000000000005f82015250565b5f6129006011836122ad565b915061290b826128cc565b602082019050919050565b5f6020820190508181035f83015261292d816128f4565b9050919050565b7f45786365656473206d61782077616c6c657420616d6f756e74000000000000005f82015250565b5f6129686019836122ad565b915061297382612934565b602082019050919050565b5f6020820190508181035f8301526129958161295c565b9050919050565b7f496e76616c696420726563697069656e740000000000000000000000000000005f82015250565b5f6129d06011836122ad565b91506129db8261299c565b602082019050919050565b5f6020820190508181035f8301526129fd816129c4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f43616e6e6f7420776974686472617720746f6b656e20697473656c66000000005f82015250565b5f612a65601c836122ad565b9150612a7082612a31565b602082019050919050565b5f6020820190508181035f830152612a9281612a59565b9050919050565b5f81519050612aa781612215565b92915050565b5f60208284031215612ac257612ac1612204565b5b5f612acf84828501612a99565b91505092915050565b5f604082019050612aeb5f8301856125fb565b612af86020830184612429565b9392505050565b5f81519050612b0d81612451565b92915050565b5f60208284031215612b2857612b27612204565b5b5f612b3584828501612aff565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612b758261220c565b9150612b808361220c565b9250828201905080821115612b9857612b97612b3e565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612bd2601f836122ad565b9150612bdd82612b9e565b602082019050919050565b5f6020820190508181035f830152612bff81612bc6565b9050919050565b5f606082019050612c195f8301866125fb565b612c266020830185612429565b612c336040830184612429565b94935050505056fea2646970667358221220046c762e4feec9060ada05bb5c89f5409dfd61bcfe662247a648c69cc259d9cd64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F7068656379204A696D70736F6E73000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4A696D7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x84A JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x84A JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x2AC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x176 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D SWAP1 PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x192 CALLER PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x36F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH10 0x152D02C7E14AF6800000 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH3 0x15180 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x3C PUSH1 0x10 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9D5570C03A71AF73640DA09C132D73BB3EFE7CA4F55516A1AFC2597CBDFD620C PUSH12 0x204FCE5E3E25026110000000 PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xAA6 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3DF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F0 PUSH0 DUP4 DUP4 PUSH2 0x3F4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x444 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0xA3E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x512 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4CD JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x559 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5A3 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x688 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x69B JUMPI PUSH2 0x69A PUSH2 0x644 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x6FD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x6C2 JUMP JUMPDEST PUSH2 0x707 DUP7 DUP4 PUSH2 0x6C2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x74B PUSH2 0x746 PUSH2 0x741 DUP5 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x764 DUP4 PUSH2 0x731 JUMP JUMPDEST PUSH2 0x778 PUSH2 0x770 DUP3 PUSH2 0x752 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x6CE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x78F PUSH2 0x780 JUMP JUMPDEST PUSH2 0x79A DUP2 DUP5 DUP5 PUSH2 0x75B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7B2 PUSH0 DUP3 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7A0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x802 JUMPI PUSH2 0x7D3 DUP2 PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x7DC DUP5 PUSH2 0x6B3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x7EB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x7FF PUSH2 0x7F7 DUP6 PUSH2 0x6B3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x79F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x822 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x807 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x83A DUP4 DUP4 PUSH2 0x813 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x853 DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x86C JUMPI PUSH2 0x86B PUSH2 0x617 JUMP JUMPDEST JUMPDEST PUSH2 0x876 DUP3 SLOAD PUSH2 0x671 JUMP JUMPDEST PUSH2 0x881 DUP3 DUP3 DUP6 PUSH2 0x7C1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x8B2 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x8A0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x8AA DUP6 DUP3 PUSH2 0x82F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x911 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x8C0 DUP7 PUSH2 0x6A1 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8E7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8C2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x904 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x900 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x813 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x942 DUP3 PUSH2 0x919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x952 DUP2 PUSH2 0x938 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x96B PUSH0 DUP4 ADD DUP5 PUSH2 0x949 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9B5 PUSH1 0x13 DUP4 PUSH2 0x971 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C0 DUP3 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9E2 DUP2 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F2 DUP2 PUSH2 0x71F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA0B PUSH0 DUP4 ADD DUP5 PUSH2 0x9E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA48 DUP3 PUSH2 0x71F JUMP JUMPDEST SWAP2 POP PUSH2 0xA53 DUP4 PUSH2 0x71F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA6B JUMPI PUSH2 0xA6A PUSH2 0xA11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA84 PUSH0 DUP4 ADD DUP7 PUSH2 0x949 JUMP JUMPDEST PUSH2 0xA91 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0xA9E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2C71 DUP1 PUSH2 0xAB3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x611274C5 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0x9155E083 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xAA4BDE28 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAA4BDE28 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x5AE JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x9155E083 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xA9E75723 EQ PUSH2 0x526 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x8F70CCF7 EQ PUSH2 0x4A0 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x611274C5 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x68F16293 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x42C JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x330671AD GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x330671AD EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x6072E6A8 EQ PUSH2 0x3D6 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x283AF019 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x34C JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xD2D8A31 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xD2D8A31 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xD392CD9 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2B0 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2CD093D EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x216 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x238D JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x2524 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x354 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C0 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x259E JUMP JUMPDEST PUSH2 0xDDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x259E JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x416 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x446 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x480 PUSH2 0x11D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48A PUSH2 0x11E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH2 0x120F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH2 0x126A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E0 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x510 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x238D JUMP JUMPDEST PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52E PUSH2 0x194A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x264E JUMP JUMPDEST PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x19D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E6 PUSH2 0x1A79 JUMP JUMPDEST DUP4 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x10 DUP2 SWAP1 SSTORE POP PUSH32 0xBB5D5C94DFF5ADB0BC0E043A6C2CF9BB8153231069831102F0E8E53B89924F1F DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x637 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x268C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x654 SWAP1 PUSH2 0x26FC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x680 SWAP1 PUSH2 0x26FC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6DF PUSH2 0x1B00 JUMP JUMPDEST SWAP1 POP PUSH2 0x6EC DUP2 DUP6 DUP6 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x714 PUSH2 0x1A79 JUMP JUMPDEST DUP1 PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D DUP3 PUSH1 0x40 MLOAD PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP4 DUP4 DUP4 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI POP PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x8B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AD SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x916 JUMPI POP PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x967 JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA44 JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xC60 JUMPI PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA85 SWAP1 PUSH2 0x2846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE0 PUSH1 0x10 SLOAD PUSH1 0xC PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1B19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB19 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0xBFB JUMPI PUSH2 0xBB8 PUSH1 0x9 SLOAD PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1B19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xBFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF1 SWAP1 PUSH2 0x2916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 PUSH2 0xC17 DUP3 PUSH2 0xC09 DUP6 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x1B19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 GT ISZERO PUSH2 0xC5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC55 SWAP1 PUSH2 0x297E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0xC68 PUSH2 0x1B2E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP1 PUSH2 0x29E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xD PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD65 DUP8 DUP8 DUP8 PUSH2 0x1B7D JUMP JUMPDEST SWAP4 POP PUSH2 0xD6F PUSH2 0x1BAB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH12 0x204FCE5E3E25026110000000 DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xDE3 PUSH2 0x1A79 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xEF0 JUMPI DUP2 PUSH1 0xE PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xE0A JUMPI PUSH2 0xE09 PUSH2 0x2A04 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE1F SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xE81 JUMPI PUSH2 0xE80 PUSH2 0x2A04 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC DUP4 PUSH1 0x40 MLOAD PUSH2 0xEDB SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xDE8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xEFE PUSH2 0x1A79 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x100B JUMPI DUP2 PUSH1 0xF PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xF25 JUMPI PUSH2 0xF24 PUSH2 0x2A04 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0x2A04 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFB1 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF03 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x101F PUSH2 0x1A79 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1084 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1106 SWAP2 SWAP1 PUSH2 0x2AAD JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x112C PUSH2 0x11E7 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114A SWAP3 SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1166 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118A SWAP2 SWAP1 PUSH2 0x2B13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11DC PUSH2 0x1A79 JUMP JUMPDEST PUSH2 0x11E5 PUSH0 PUSH2 0x1BB5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1217 PUSH2 0x1A79 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xBEDA7DCA7BC1B3E80B871F4818129EC73B771581F803D553AEB3484098E5F65A DUP2 PUSH1 0x40 MLOAD PUSH2 0x125F SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1272 PUSH2 0x1A79 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC DUP3 PUSH1 0x40 MLOAD PUSH2 0x130C SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1327 SWAP1 PUSH2 0x26FC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1353 SWAP1 PUSH2 0x26FC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x139E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1375 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x139E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1381 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER DUP4 DUP4 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x144A JUMPI POP PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1489 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1480 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x14E9 JUMPI POP PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x153A JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x1579 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1570 SWAP1 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1617 JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1833 JUMPI PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0x1661 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1658 SWAP1 PUSH2 0x2846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B3 PUSH1 0x10 SLOAD PUSH1 0xC PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1B19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x16F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16EC SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x17CE JUMPI PUSH2 0x178B PUSH1 0x9 SLOAD PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1B19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x17CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C4 SWAP1 PUSH2 0x2916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 PUSH2 0x17EA DUP3 PUSH2 0x17DC DUP6 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x1B19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 GT ISZERO PUSH2 0x1831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1828 SWAP1 PUSH2 0x297E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x183B PUSH2 0x1B2E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A0 SWAP1 PUSH2 0x29E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xD PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1937 DUP7 DUP7 PUSH2 0x1C78 JUMP JUMPDEST SWAP4 POP PUSH2 0x1941 PUSH2 0x1BAB JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19E0 PUSH2 0x1A79 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A50 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A59 DUP2 PUSH2 0x1BB5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1A81 PUSH2 0x1B00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A9F PUSH2 0x11E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AFE JUMPI PUSH2 0x1AC2 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF5 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B14 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1B26 SWAP2 SWAP1 PUSH2 0x2B6B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1B73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6A SWAP1 PUSH2 0x2BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1B87 PUSH2 0x1B00 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B94 DUP6 DUP3 DUP6 PUSH2 0x1E69 JUMP JUMPDEST PUSH2 0x1B9F DUP6 DUP6 DUP6 PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1C82 PUSH2 0x1B00 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C8F DUP2 DUP6 DUP6 PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D0A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D01 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D7A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D71 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1E63 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1E5A SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E74 DUP5 DUP5 PUSH2 0x1956 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1EF5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1EE6 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EDD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EF4 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F6B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F62 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FDB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD2 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FE6 DUP4 DUP4 DUP4 PUSH2 0x1FEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x203B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x202F SWAP2 SWAP1 PUSH2 0x2B6B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2109 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x20C4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2150 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x219A JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x21F7 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x221E DUP2 PUSH2 0x220C JUMP JUMPDEST DUP2 EQ PUSH2 0x2228 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2239 DUP2 PUSH2 0x2215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2264 DUP8 DUP3 DUP9 ADD PUSH2 0x222B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2275 DUP8 DUP3 DUP9 ADD PUSH2 0x222B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2286 DUP8 DUP3 DUP9 ADD PUSH2 0x222B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2297 DUP8 DUP3 DUP9 ADD PUSH2 0x222B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22E5 DUP3 PUSH2 0x22A3 JUMP JUMPDEST PUSH2 0x22EF DUP2 DUP6 PUSH2 0x22AD JUMP JUMPDEST SWAP4 POP PUSH2 0x22FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x2308 DUP2 PUSH2 0x22CB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x232B DUP2 DUP5 PUSH2 0x22DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x235C DUP3 PUSH2 0x2333 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236C DUP2 PUSH2 0x2352 JUMP JUMPDEST DUP2 EQ PUSH2 0x2376 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2387 DUP2 PUSH2 0x2363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23A3 JUMPI PUSH2 0x23A2 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23B0 DUP6 DUP3 DUP7 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23C1 DUP6 DUP3 DUP7 ADD PUSH2 0x222B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23DF DUP2 PUSH2 0x23CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x23D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2413 JUMPI PUSH2 0x2412 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2420 DUP5 DUP3 DUP6 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2432 DUP2 PUSH2 0x220C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x244B PUSH0 DUP4 ADD DUP5 PUSH2 0x2429 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x245A DUP2 PUSH2 0x23CB JUMP JUMPDEST DUP2 EQ PUSH2 0x2464 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2475 DUP2 PUSH2 0x2451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2491 JUMPI PUSH2 0x2490 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x249E DUP6 DUP3 DUP7 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24AF DUP6 DUP3 DUP7 ADD PUSH2 0x2467 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24D0 JUMPI PUSH2 0x24CF PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24DD DUP7 DUP3 DUP8 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x24EE DUP7 DUP3 DUP8 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x24FF DUP7 DUP3 DUP8 ADD PUSH2 0x222B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x251E DUP2 PUSH2 0x2509 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2537 PUSH0 DUP4 ADD DUP5 PUSH2 0x2515 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x255E JUMPI PUSH2 0x255D PUSH2 0x253D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x257B JUMPI PUSH2 0x257A PUSH2 0x2541 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2597 JUMPI PUSH2 0x2596 PUSH2 0x2545 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25B5 JUMPI PUSH2 0x25B4 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25D2 JUMPI PUSH2 0x25D1 PUSH2 0x2208 JUMP JUMPDEST JUMPDEST PUSH2 0x25DE DUP7 DUP3 DUP8 ADD PUSH2 0x2549 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x25F1 DUP7 DUP3 DUP8 ADD PUSH2 0x2467 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2604 DUP2 PUSH2 0x2352 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x261D PUSH0 DUP4 ADD DUP5 PUSH2 0x25FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2638 JUMPI PUSH2 0x2637 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2645 DUP5 DUP3 DUP6 ADD PUSH2 0x2467 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2664 JUMPI PUSH2 0x2663 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2671 DUP6 DUP3 DUP7 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2682 DUP6 DUP3 DUP7 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x269F PUSH0 DUP4 ADD DUP8 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x26AC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x26B9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x26C6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2429 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2713 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2726 JUMPI PUSH2 0x2725 PUSH2 0x26CF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320697320626C61636B6C697374656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2760 PUSH1 0x16 DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x276B DUP3 PUSH2 0x272C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x278D DUP2 PUSH2 0x2754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54726164696E67206E6F7420656E61626C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27C8 PUSH1 0x13 DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x27D3 DUP3 PUSH2 0x2794 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27F5 DUP2 PUSH2 0x27BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E736665722065786365656473206D617820616D6F756E740000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2830 PUSH1 0x1B DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x283B DUP3 PUSH2 0x27FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x285D DUP2 PUSH2 0x2824 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E206163746976650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2898 PUSH1 0xF DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x28A3 DUP3 PUSH2 0x2864 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28C5 DUP2 PUSH2 0x288C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x486F6C642074696D65206E6F74206D6574000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2900 PUSH1 0x11 DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x290B DUP3 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x292D DUP2 PUSH2 0x28F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D61782077616C6C657420616D6F756E7400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2968 PUSH1 0x19 DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2973 DUP3 PUSH2 0x2934 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2995 DUP2 PUSH2 0x295C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29D0 PUSH1 0x11 DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x29DB DUP3 PUSH2 0x299C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29FD DUP2 PUSH2 0x29C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x43616E6E6F7420776974686472617720746F6B656E20697473656C6600000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A65 PUSH1 0x1C DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2A70 DUP3 PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A92 DUP2 PUSH2 0x2A59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AA7 DUP2 PUSH2 0x2215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AC2 JUMPI PUSH2 0x2AC1 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2ACF DUP5 DUP3 DUP6 ADD PUSH2 0x2A99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2AEB PUSH0 DUP4 ADD DUP6 PUSH2 0x25FB JUMP JUMPDEST PUSH2 0x2AF8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2429 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B0D DUP2 PUSH2 0x2451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B28 JUMPI PUSH2 0x2B27 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B35 DUP5 DUP3 DUP6 ADD PUSH2 0x2AFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2B75 DUP3 PUSH2 0x220C JUMP JUMPDEST SWAP2 POP PUSH2 0x2B80 DUP4 PUSH2 0x220C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B98 JUMPI PUSH2 0x2B97 PUSH2 0x2B3E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BD2 PUSH1 0x1F DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDD DUP3 PUSH2 0x2B9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BFF DUP2 PUSH2 0x2BC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C19 PUSH0 DUP4 ADD DUP7 PUSH2 0x25FB JUMP JUMPDEST PUSH2 0x2C26 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x2C33 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2429 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV PUSH13 0x762E4FEEC9060ADA05BB5C89F5 BLOCKHASH SWAP14 REVERT PUSH2 0xBCFE PUSH7 0x2247A648C69CC2 MSIZE 0xD9 0xCD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "297:5970:8:-:0;;;1606:807;;;;;;;;;;342:10;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;1675:11:8::1;;;;;;;;;;;1674:12;1666:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1803:29;1809:10;450:23;1803:5;;;:29;;:::i;:::-;1909:4;1895:11;;:18;;;;;;;;;;;;;;;;;;1944:14;1924:17;:34;;;;1987:16;1969:15;:34;;;;2051:6;2037:11;:20;;;;2129:2;2110:16;:21;;;;2201:5;2184:14;;:22;;;;;;;;;;;;;;;;;;2296:4;2268:13;:25;2282:10;2268:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;2382:10;2364:41;;;450:23;2364:41;;;;;;:::i;:::-;;;;;;;;297:5970:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:169::-;5904:11;5938:6;5933:3;5926:19;5978:4;5973:3;5969:14;5954:29;;5820:169;;;;:::o;5995:::-;6135:21;6131:1;6123:6;6119:14;6112:45;5995:169;:::o;6170:366::-;6312:3;6333:67;6397:2;6392:3;6333:67;:::i;:::-;6326:74;;6409:93;6498:3;6409:93;:::i;:::-;6527:2;6522:3;6518:12;6511:19;;6170:366;;;:::o;6542:419::-;6708:4;6746:2;6735:9;6731:18;6723:26;;6795:9;6789:4;6785:20;6781:1;6770:9;6766:17;6759:47;6823:131;6949:4;6823:131;:::i;:::-;6815:139;;6542:419;;;:::o;6967:118::-;7054:24;7072:5;7054:24;:::i;:::-;7049:3;7042:37;6967:118;;:::o;7091:222::-;7184:4;7222:2;7211:9;7207:18;7199:26;;7235:71;7303:1;7292:9;7288:17;7279:6;7235:71;:::i;:::-;7091:222;;;;:::o;7319:180::-;7367:77;7364:1;7357:88;7464:4;7461:1;7454:15;7488:4;7485:1;7478:15;7505:191;7545:3;7564:20;7582:1;7564:20;:::i;:::-;7559:25;;7598:20;7616:1;7598:20;:::i;:::-;7593:25;;7641:1;7638;7634:9;7627:16;;7662:3;7659:1;7656:10;7653:36;;;7669:18;;:::i;:::-;7653:36;7505:191;;;;:::o;7702:442::-;7851:4;7889:2;7878:9;7874:18;7866:26;;7902:71;7970:1;7959:9;7955:17;7946:6;7902:71;:::i;:::-;7983:72;8051:2;8040:9;8036:18;8027:6;7983:72;:::i;:::-;8065;8133:2;8122:9;8118:18;8109:6;8065:72;:::i;:::-;7702:442;;;;;;:::o;297:5970:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_SUPPLY_1334": {
									"entryPoint": 3478,
									"id": 1334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_755": {
									"entryPoint": 6919,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 7322,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 6777,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": 6912,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 7083,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 6958,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_863": {
									"entryPoint": 7785,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 7093,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 7931,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 8171,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1174": {
									"entryPoint": 6937,
									"id": 1174,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_491": {
									"entryPoint": 6486,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 1749,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_450": {
									"entryPoint": 4495,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchUpdateBlacklist_1836": {
									"entryPoint": 3547,
									"id": 1836,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@batchUpdateWhitelist_1875": {
									"entryPoint": 3830,
									"id": 1875,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_428": {
									"entryPoint": 3470,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@emergencyWithdraw_1797": {
									"entryPoint": 4119,
									"id": 1797,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialized_1336": {
									"entryPoint": 1978,
									"id": 1336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isBlacklisted_1356": {
									"entryPoint": 6748,
									"id": 1356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isWhitelisted_1360": {
									"entryPoint": 3500,
									"id": 1360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTransferTime_1348": {
									"entryPoint": 1783,
									"id": 1348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxTransferAmount_1338": {
									"entryPoint": 6474,
									"id": 1338,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxWalletAmount_1342": {
									"entryPoint": 6480,
									"id": 1342,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minHoldTime_1340": {
									"entryPoint": 3494,
									"id": 1340,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_410": {
									"entryPoint": 1605,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 4583,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 4564,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTrading_1679": {
									"entryPoint": 4623,
									"id": 1679,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_419": {
									"entryPoint": 4888,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenReceiveTime_1352": {
									"entryPoint": 3449,
									"id": 1352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_437": {
									"entryPoint": 1996,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tradingEnabled_1344": {
									"entryPoint": 3529,
									"id": 1344,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferCooldown_1362": {
									"entryPoint": 4113,
									"id": 1362,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_1663": {
									"entryPoint": 2005,
									"id": 1663,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_547": {
									"entryPoint": 7037,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 6616,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1612": {
									"entryPoint": 5032,
									"id": 1612,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_474": {
									"entryPoint": 7288,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateBlacklist_1700": {
									"entryPoint": 4714,
									"id": 1700,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateSecurityParams_1758": {
									"entryPoint": 1502,
									"id": 1758,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@updateWhitelist_1721": {
									"entryPoint": 1804,
									"id": 1721,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 9081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 9545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool": {
									"entryPoint": 9319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 11007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool": {
									"entryPoint": 9630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 9763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 8767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10968,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11270,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9868,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11070,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9935,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10756,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 9537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9533,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 9541,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8712,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8708,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f": {
									"entryPoint": 10236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5": {
									"entryPoint": 10340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a": {
									"entryPoint": 10548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d": {
									"entryPoint": 10652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c": {
									"entryPoint": 10132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374": {
									"entryPoint": 10444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc": {
									"entryPoint": 10801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53": {
									"entryPoint": 10028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 11166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21613:9",
										"nodeType": "YulBlock",
										"src": "0:21613:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:32:9",
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nativeSrc": "389:16:9",
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:9",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nativeSrc": "460:79:9",
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:9",
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:9",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:9",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nativeSrc": "519:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nativeSrc": "519:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nativeSrc": "490:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nativeSrc": "480:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nativeSrc": "473:43:9",
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nativeSrc": "470:63:9",
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:9",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nativeSrc": "597:87:9",
													"nodeType": "YulBlock",
													"src": "597:87:9",
													"statements": [
														{
															"nativeSrc": "607:29:9",
															"nodeType": "YulAssignment",
															"src": "607:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:9"
																},
																"nativeSrc": "616:20:9",
																"nodeType": "YulFunctionCall",
																"src": "616:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:9"
																},
																"nativeSrc": "645:33:9",
																"nodeType": "YulFunctionCall",
																"src": "645:33:9"
															},
															"nativeSrc": "645:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:9",
														"nodeType": "YulTypedName",
														"src": "575:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:9",
														"nodeType": "YulTypedName",
														"src": "583:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:9",
														"nodeType": "YulTypedName",
														"src": "591:5:9",
														"type": ""
													}
												],
												"src": "545:139:9"
											},
											{
												"body": {
													"nativeSrc": "807:648:9",
													"nodeType": "YulBlock",
													"src": "807:648:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "854:83:9",
																"nodeType": "YulBlock",
																"src": "854:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "856:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "856:77:9"
																			},
																			"nativeSrc": "856:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "856:79:9"
																		},
																		"nativeSrc": "856:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "856:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "828:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "828:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "837:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "837:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "824:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "824:3:9"
																		},
																		"nativeSrc": "824:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "824:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "849:3:9",
																		"nodeType": "YulLiteral",
																		"src": "849:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "820:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "820:3:9"
																},
																"nativeSrc": "820:33:9",
																"nodeType": "YulFunctionCall",
																"src": "820:33:9"
															},
															"nativeSrc": "817:120:9",
															"nodeType": "YulIf",
															"src": "817:120:9"
														},
														{
															"nativeSrc": "947:117:9",
															"nodeType": "YulBlock",
															"src": "947:117:9",
															"statements": [
																{
																	"nativeSrc": "962:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "962:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "976:1:9",
																		"nodeType": "YulLiteral",
																		"src": "976:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "966:6:9",
																			"nodeType": "YulTypedName",
																			"src": "966:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "991:63:9",
																	"nodeType": "YulAssignment",
																	"src": "991:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1026:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1026:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1037:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1037:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1022:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1022:3:9"
																				},
																				"nativeSrc": "1022:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1022:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1046:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1046:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1001:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1001:20:9"
																		},
																		"nativeSrc": "1001:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1001:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "991:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "991:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1074:118:9",
															"nodeType": "YulBlock",
															"src": "1074:118:9",
															"statements": [
																{
																	"nativeSrc": "1089:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1089:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1103:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1103:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1093:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1093:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1119:63:9",
																	"nodeType": "YulAssignment",
																	"src": "1119:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1154:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1154:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1165:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1165:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1150:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1150:3:9"
																				},
																				"nativeSrc": "1150:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1150:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1174:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1174:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1129:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1129:20:9"
																		},
																		"nativeSrc": "1129:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1129:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1119:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1119:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1202:118:9",
															"nodeType": "YulBlock",
															"src": "1202:118:9",
															"statements": [
																{
																	"nativeSrc": "1217:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1217:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1231:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1231:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1221:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1221:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1247:63:9",
																	"nodeType": "YulAssignment",
																	"src": "1247:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1282:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1282:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1293:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1293:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1278:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1278:3:9"
																				},
																				"nativeSrc": "1278:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1278:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1302:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1257:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1257:20:9"
																		},
																		"nativeSrc": "1257:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1257:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1247:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1247:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1330:118:9",
															"nodeType": "YulBlock",
															"src": "1330:118:9",
															"statements": [
																{
																	"nativeSrc": "1345:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1345:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1359:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1359:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1349:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1349:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1375:63:9",
																	"nodeType": "YulAssignment",
																	"src": "1375:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1410:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1410:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1421:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1421:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1406:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1406:3:9"
																				},
																				"nativeSrc": "1406:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1406:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1430:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1430:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1385:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1385:20:9"
																		},
																		"nativeSrc": "1385:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1385:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1375:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1375:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "690:765:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "753:9:9",
														"nodeType": "YulTypedName",
														"src": "753:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "764:7:9",
														"nodeType": "YulTypedName",
														"src": "764:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "776:6:9",
														"nodeType": "YulTypedName",
														"src": "776:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "784:6:9",
														"nodeType": "YulTypedName",
														"src": "784:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "792:6:9",
														"nodeType": "YulTypedName",
														"src": "792:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "800:6:9",
														"nodeType": "YulTypedName",
														"src": "800:6:9",
														"type": ""
													}
												],
												"src": "690:765:9"
											},
											{
												"body": {
													"nativeSrc": "1520:40:9",
													"nodeType": "YulBlock",
													"src": "1520:40:9",
													"statements": [
														{
															"nativeSrc": "1531:22:9",
															"nodeType": "YulAssignment",
															"src": "1531:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1547:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1547:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1541:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1541:5:9"
																},
																"nativeSrc": "1541:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1541:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1531:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1461:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1503:5:9",
														"nodeType": "YulTypedName",
														"src": "1503:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1513:6:9",
														"nodeType": "YulTypedName",
														"src": "1513:6:9",
														"type": ""
													}
												],
												"src": "1461:99:9"
											},
											{
												"body": {
													"nativeSrc": "1662:73:9",
													"nodeType": "YulBlock",
													"src": "1662:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1679:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1679:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1684:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1684:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1672:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1672:6:9"
																},
																"nativeSrc": "1672:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1672:19:9"
															},
															"nativeSrc": "1672:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "1672:19:9"
														},
														{
															"nativeSrc": "1700:29:9",
															"nodeType": "YulAssignment",
															"src": "1700:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1719:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1719:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1724:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1724:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1715:3:9"
																},
																"nativeSrc": "1715:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1715:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1700:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "1700:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1566:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1634:3:9",
														"nodeType": "YulTypedName",
														"src": "1634:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1639:6:9",
														"nodeType": "YulTypedName",
														"src": "1639:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1650:11:9",
														"nodeType": "YulTypedName",
														"src": "1650:11:9",
														"type": ""
													}
												],
												"src": "1566:169:9"
											},
											{
												"body": {
													"nativeSrc": "1803:77:9",
													"nodeType": "YulBlock",
													"src": "1803:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1820:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1820:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1825:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1825:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1830:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1830:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1814:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1814:5:9"
																},
																"nativeSrc": "1814:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1814:23:9"
															},
															"nativeSrc": "1814:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "1814:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1857:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1857:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1853:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1853:3:9"
																		},
																		"nativeSrc": "1853:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1853:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1871:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1871:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1846:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:9"
																},
																"nativeSrc": "1846:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1846:27:9"
															},
															"nativeSrc": "1846:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1846:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1741:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1785:3:9",
														"nodeType": "YulTypedName",
														"src": "1785:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1790:3:9",
														"nodeType": "YulTypedName",
														"src": "1790:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1795:6:9",
														"nodeType": "YulTypedName",
														"src": "1795:6:9",
														"type": ""
													}
												],
												"src": "1741:139:9"
											},
											{
												"body": {
													"nativeSrc": "1934:54:9",
													"nodeType": "YulBlock",
													"src": "1934:54:9",
													"statements": [
														{
															"nativeSrc": "1944:38:9",
															"nodeType": "YulAssignment",
															"src": "1944:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1962:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1962:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1969:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1969:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1958:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1958:3:9"
																		},
																		"nativeSrc": "1958:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1958:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1978:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1978:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1974:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1974:3:9"
																		},
																		"nativeSrc": "1974:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1974:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1954:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:9"
																},
																"nativeSrc": "1954:28:9",
																"nodeType": "YulFunctionCall",
																"src": "1954:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1944:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1886:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1917:5:9",
														"nodeType": "YulTypedName",
														"src": "1917:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1927:6:9",
														"nodeType": "YulTypedName",
														"src": "1927:6:9",
														"type": ""
													}
												],
												"src": "1886:102:9"
											},
											{
												"body": {
													"nativeSrc": "2086:285:9",
													"nodeType": "YulBlock",
													"src": "2086:285:9",
													"statements": [
														{
															"nativeSrc": "2096:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2096:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2143:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2143:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2110:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "2110:32:9"
																},
																"nativeSrc": "2110:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2110:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2100:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2100:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2158:78:9",
															"nodeType": "YulAssignment",
															"src": "2158:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2224:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2224:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2229:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2229:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2165:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2165:58:9"
																},
																"nativeSrc": "2165:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2165:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2158:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2158:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2284:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2284:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2291:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2291:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2280:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2280:3:9"
																		},
																		"nativeSrc": "2280:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2280:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2298:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2298:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2303:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2303:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2245:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "2245:34:9"
																},
																"nativeSrc": "2245:65:9",
																"nodeType": "YulFunctionCall",
																"src": "2245:65:9"
															},
															"nativeSrc": "2245:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "2245:65:9"
														},
														{
															"nativeSrc": "2319:46:9",
															"nodeType": "YulAssignment",
															"src": "2319:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2330:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2330:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2357:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2357:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2335:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "2335:21:9"
																		},
																		"nativeSrc": "2335:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2335:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2326:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2326:3:9"
																},
																"nativeSrc": "2326:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2326:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2319:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2319:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1994:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2067:5:9",
														"nodeType": "YulTypedName",
														"src": "2067:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2074:3:9",
														"nodeType": "YulTypedName",
														"src": "2074:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2082:3:9",
														"nodeType": "YulTypedName",
														"src": "2082:3:9",
														"type": ""
													}
												],
												"src": "1994:377:9"
											},
											{
												"body": {
													"nativeSrc": "2495:195:9",
													"nodeType": "YulBlock",
													"src": "2495:195:9",
													"statements": [
														{
															"nativeSrc": "2505:26:9",
															"nodeType": "YulAssignment",
															"src": "2505:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2517:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2517:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2528:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2528:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2513:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2513:3:9"
																},
																"nativeSrc": "2513:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2513:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2505:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2505:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2552:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2563:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2563:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2548:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2548:3:9"
																		},
																		"nativeSrc": "2548:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2548:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2571:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2571:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2577:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2577:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2567:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2567:3:9"
																		},
																		"nativeSrc": "2567:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2567:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2541:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2541:6:9"
																},
																"nativeSrc": "2541:47:9",
																"nodeType": "YulFunctionCall",
																"src": "2541:47:9"
															},
															"nativeSrc": "2541:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "2541:47:9"
														},
														{
															"nativeSrc": "2597:86:9",
															"nodeType": "YulAssignment",
															"src": "2597:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2669:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2669:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2678:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2678:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2605:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "2605:63:9"
																},
																"nativeSrc": "2605:78:9",
																"nodeType": "YulFunctionCall",
																"src": "2605:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2597:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2597:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2377:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2467:9:9",
														"nodeType": "YulTypedName",
														"src": "2467:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2479:6:9",
														"nodeType": "YulTypedName",
														"src": "2479:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2490:4:9",
														"nodeType": "YulTypedName",
														"src": "2490:4:9",
														"type": ""
													}
												],
												"src": "2377:313:9"
											},
											{
												"body": {
													"nativeSrc": "2741:81:9",
													"nodeType": "YulBlock",
													"src": "2741:81:9",
													"statements": [
														{
															"nativeSrc": "2751:65:9",
															"nodeType": "YulAssignment",
															"src": "2751:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2773:42:9",
																		"nodeType": "YulLiteral",
																		"src": "2773:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2762:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2762:3:9"
																},
																"nativeSrc": "2762:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2762:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2751:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2751:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2696:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2723:5:9",
														"nodeType": "YulTypedName",
														"src": "2723:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2733:7:9",
														"nodeType": "YulTypedName",
														"src": "2733:7:9",
														"type": ""
													}
												],
												"src": "2696:126:9"
											},
											{
												"body": {
													"nativeSrc": "2873:51:9",
													"nodeType": "YulBlock",
													"src": "2873:51:9",
													"statements": [
														{
															"nativeSrc": "2883:35:9",
															"nodeType": "YulAssignment",
															"src": "2883:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2894:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2894:17:9"
																},
																"nativeSrc": "2894:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2894:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2883:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2883:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2828:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2855:5:9",
														"nodeType": "YulTypedName",
														"src": "2855:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2865:7:9",
														"nodeType": "YulTypedName",
														"src": "2865:7:9",
														"type": ""
													}
												],
												"src": "2828:96:9"
											},
											{
												"body": {
													"nativeSrc": "2973:79:9",
													"nodeType": "YulBlock",
													"src": "2973:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3030:16:9",
																"nodeType": "YulBlock",
																"src": "3030:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3039:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3039:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3042:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3042:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3032:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3032:6:9"
																			},
																			"nativeSrc": "3032:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3032:12:9"
																		},
																		"nativeSrc": "3032:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3032:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2996:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2996:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3021:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3021:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3003:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3003:17:9"
																				},
																				"nativeSrc": "3003:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3003:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2993:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2993:2:9"
																		},
																		"nativeSrc": "2993:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2993:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2986:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2986:6:9"
																},
																"nativeSrc": "2986:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2986:43:9"
															},
															"nativeSrc": "2983:63:9",
															"nodeType": "YulIf",
															"src": "2983:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2930:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2966:5:9",
														"nodeType": "YulTypedName",
														"src": "2966:5:9",
														"type": ""
													}
												],
												"src": "2930:122:9"
											},
											{
												"body": {
													"nativeSrc": "3110:87:9",
													"nodeType": "YulBlock",
													"src": "3110:87:9",
													"statements": [
														{
															"nativeSrc": "3120:29:9",
															"nodeType": "YulAssignment",
															"src": "3120:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3142:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3142:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3129:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3129:12:9"
																},
																"nativeSrc": "3129:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3129:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3120:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3120:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3185:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3185:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3158:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3158:26:9"
																},
																"nativeSrc": "3158:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3158:33:9"
															},
															"nativeSrc": "3158:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3158:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3058:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3088:6:9",
														"nodeType": "YulTypedName",
														"src": "3088:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3096:3:9",
														"nodeType": "YulTypedName",
														"src": "3096:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3104:5:9",
														"nodeType": "YulTypedName",
														"src": "3104:5:9",
														"type": ""
													}
												],
												"src": "3058:139:9"
											},
											{
												"body": {
													"nativeSrc": "3286:391:9",
													"nodeType": "YulBlock",
													"src": "3286:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3332:83:9",
																"nodeType": "YulBlock",
																"src": "3332:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3334:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3334:77:9"
																			},
																			"nativeSrc": "3334:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3334:79:9"
																		},
																		"nativeSrc": "3334:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3334:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3307:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3307:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3316:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3316:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3303:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3303:3:9"
																		},
																		"nativeSrc": "3303:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3303:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3328:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3328:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3299:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3299:3:9"
																},
																"nativeSrc": "3299:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3299:32:9"
															},
															"nativeSrc": "3296:119:9",
															"nodeType": "YulIf",
															"src": "3296:119:9"
														},
														{
															"nativeSrc": "3425:117:9",
															"nodeType": "YulBlock",
															"src": "3425:117:9",
															"statements": [
																{
																	"nativeSrc": "3440:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3440:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3454:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3454:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3444:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3444:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3469:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3469:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3504:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3504:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3515:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3515:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3500:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3500:3:9"
																				},
																				"nativeSrc": "3500:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3500:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3524:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3524:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3479:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3479:20:9"
																		},
																		"nativeSrc": "3479:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3479:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3469:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3469:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3552:118:9",
															"nodeType": "YulBlock",
															"src": "3552:118:9",
															"statements": [
																{
																	"nativeSrc": "3567:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3567:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3581:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3581:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3571:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3571:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3597:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3597:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3632:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3632:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3643:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3643:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3628:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3628:3:9"
																				},
																				"nativeSrc": "3628:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3628:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3652:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3652:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3607:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3607:20:9"
																		},
																		"nativeSrc": "3607:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3607:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3597:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3597:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3203:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3248:9:9",
														"nodeType": "YulTypedName",
														"src": "3248:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3259:7:9",
														"nodeType": "YulTypedName",
														"src": "3259:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3271:6:9",
														"nodeType": "YulTypedName",
														"src": "3271:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3279:6:9",
														"nodeType": "YulTypedName",
														"src": "3279:6:9",
														"type": ""
													}
												],
												"src": "3203:474:9"
											},
											{
												"body": {
													"nativeSrc": "3725:48:9",
													"nodeType": "YulBlock",
													"src": "3725:48:9",
													"statements": [
														{
															"nativeSrc": "3735:32:9",
															"nodeType": "YulAssignment",
															"src": "3735:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3760:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3760:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3753:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3753:6:9"
																		},
																		"nativeSrc": "3753:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3753:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3746:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3746:6:9"
																},
																"nativeSrc": "3746:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3746:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3735:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3735:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3683:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3707:5:9",
														"nodeType": "YulTypedName",
														"src": "3707:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3717:7:9",
														"nodeType": "YulTypedName",
														"src": "3717:7:9",
														"type": ""
													}
												],
												"src": "3683:90:9"
											},
											{
												"body": {
													"nativeSrc": "3838:50:9",
													"nodeType": "YulBlock",
													"src": "3838:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3855:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3855:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3875:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3875:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3860:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3860:14:9"
																		},
																		"nativeSrc": "3860:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3860:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3848:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3848:6:9"
																},
																"nativeSrc": "3848:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3848:34:9"
															},
															"nativeSrc": "3848:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3848:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3779:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3826:5:9",
														"nodeType": "YulTypedName",
														"src": "3826:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3833:3:9",
														"nodeType": "YulTypedName",
														"src": "3833:3:9",
														"type": ""
													}
												],
												"src": "3779:109:9"
											},
											{
												"body": {
													"nativeSrc": "3986:118:9",
													"nodeType": "YulBlock",
													"src": "3986:118:9",
													"statements": [
														{
															"nativeSrc": "3996:26:9",
															"nodeType": "YulAssignment",
															"src": "3996:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4008:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4008:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4019:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4019:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4004:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4004:3:9"
																},
																"nativeSrc": "4004:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4004:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3996:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3996:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4070:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4070:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4083:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4083:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4094:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4094:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4079:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:9"
																		},
																		"nativeSrc": "4079:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4079:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4032:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "4032:37:9"
																},
																"nativeSrc": "4032:65:9",
																"nodeType": "YulFunctionCall",
																"src": "4032:65:9"
															},
															"nativeSrc": "4032:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "4032:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3894:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3958:9:9",
														"nodeType": "YulTypedName",
														"src": "3958:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3970:6:9",
														"nodeType": "YulTypedName",
														"src": "3970:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3981:4:9",
														"nodeType": "YulTypedName",
														"src": "3981:4:9",
														"type": ""
													}
												],
												"src": "3894:210:9"
											},
											{
												"body": {
													"nativeSrc": "4176:263:9",
													"nodeType": "YulBlock",
													"src": "4176:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4222:83:9",
																"nodeType": "YulBlock",
																"src": "4222:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4224:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4224:77:9"
																			},
																			"nativeSrc": "4224:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4224:79:9"
																		},
																		"nativeSrc": "4224:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4224:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4197:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4197:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4206:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4206:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4193:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4193:3:9"
																		},
																		"nativeSrc": "4193:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4193:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4218:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4218:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4189:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4189:3:9"
																},
																"nativeSrc": "4189:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4189:32:9"
															},
															"nativeSrc": "4186:119:9",
															"nodeType": "YulIf",
															"src": "4186:119:9"
														},
														{
															"nativeSrc": "4315:117:9",
															"nodeType": "YulBlock",
															"src": "4315:117:9",
															"statements": [
																{
																	"nativeSrc": "4330:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4330:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4344:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4344:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4334:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4334:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4359:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4359:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4394:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4394:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4405:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4405:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4390:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4390:3:9"
																				},
																				"nativeSrc": "4390:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4390:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4414:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4414:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4369:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4369:20:9"
																		},
																		"nativeSrc": "4369:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4369:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4359:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4359:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4110:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4146:9:9",
														"nodeType": "YulTypedName",
														"src": "4146:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4157:7:9",
														"nodeType": "YulTypedName",
														"src": "4157:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4169:6:9",
														"nodeType": "YulTypedName",
														"src": "4169:6:9",
														"type": ""
													}
												],
												"src": "4110:329:9"
											},
											{
												"body": {
													"nativeSrc": "4510:53:9",
													"nodeType": "YulBlock",
													"src": "4510:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4527:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4527:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4550:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4550:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4532:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "4532:17:9"
																		},
																		"nativeSrc": "4532:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4532:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4520:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:9"
																},
																"nativeSrc": "4520:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4520:37:9"
															},
															"nativeSrc": "4520:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "4520:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4445:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4498:5:9",
														"nodeType": "YulTypedName",
														"src": "4498:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4505:3:9",
														"nodeType": "YulTypedName",
														"src": "4505:3:9",
														"type": ""
													}
												],
												"src": "4445:118:9"
											},
											{
												"body": {
													"nativeSrc": "4667:124:9",
													"nodeType": "YulBlock",
													"src": "4667:124:9",
													"statements": [
														{
															"nativeSrc": "4677:26:9",
															"nodeType": "YulAssignment",
															"src": "4677:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4689:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4689:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4700:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4700:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4685:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4685:3:9"
																},
																"nativeSrc": "4685:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4685:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4677:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4677:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4757:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4757:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4770:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4770:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4781:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4781:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4766:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4766:3:9"
																		},
																		"nativeSrc": "4766:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4766:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4713:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4713:43:9"
																},
																"nativeSrc": "4713:71:9",
																"nodeType": "YulFunctionCall",
																"src": "4713:71:9"
															},
															"nativeSrc": "4713:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "4713:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4569:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4639:9:9",
														"nodeType": "YulTypedName",
														"src": "4639:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4651:6:9",
														"nodeType": "YulTypedName",
														"src": "4651:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4662:4:9",
														"nodeType": "YulTypedName",
														"src": "4662:4:9",
														"type": ""
													}
												],
												"src": "4569:222:9"
											},
											{
												"body": {
													"nativeSrc": "4837:76:9",
													"nodeType": "YulBlock",
													"src": "4837:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4891:16:9",
																"nodeType": "YulBlock",
																"src": "4891:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4900:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4900:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4903:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4903:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4893:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4893:6:9"
																			},
																			"nativeSrc": "4893:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4893:12:9"
																		},
																		"nativeSrc": "4893:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4893:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4860:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4860:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4882:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4882:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4867:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "4867:14:9"
																				},
																				"nativeSrc": "4867:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4867:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4857:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4857:2:9"
																		},
																		"nativeSrc": "4857:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4857:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4850:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4850:6:9"
																},
																"nativeSrc": "4850:40:9",
																"nodeType": "YulFunctionCall",
																"src": "4850:40:9"
															},
															"nativeSrc": "4847:60:9",
															"nodeType": "YulIf",
															"src": "4847:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4797:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4830:5:9",
														"nodeType": "YulTypedName",
														"src": "4830:5:9",
														"type": ""
													}
												],
												"src": "4797:116:9"
											},
											{
												"body": {
													"nativeSrc": "4968:84:9",
													"nodeType": "YulBlock",
													"src": "4968:84:9",
													"statements": [
														{
															"nativeSrc": "4978:29:9",
															"nodeType": "YulAssignment",
															"src": "4978:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5000:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5000:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4987:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "4987:12:9"
																},
																"nativeSrc": "4987:20:9",
																"nodeType": "YulFunctionCall",
																"src": "4987:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4978:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4978:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5040:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5040:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5016:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "5016:23:9"
																},
																"nativeSrc": "5016:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5016:30:9"
															},
															"nativeSrc": "5016:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5016:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4919:133:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4946:6:9",
														"nodeType": "YulTypedName",
														"src": "4946:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4954:3:9",
														"nodeType": "YulTypedName",
														"src": "4954:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4962:5:9",
														"nodeType": "YulTypedName",
														"src": "4962:5:9",
														"type": ""
													}
												],
												"src": "4919:133:9"
											},
											{
												"body": {
													"nativeSrc": "5138:388:9",
													"nodeType": "YulBlock",
													"src": "5138:388:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5184:83:9",
																"nodeType": "YulBlock",
																"src": "5184:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5186:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5186:77:9"
																			},
																			"nativeSrc": "5186:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5186:79:9"
																		},
																		"nativeSrc": "5186:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5186:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5159:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5159:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5168:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5168:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5155:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5155:3:9"
																		},
																		"nativeSrc": "5155:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5155:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5180:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5180:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5151:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5151:3:9"
																},
																"nativeSrc": "5151:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5151:32:9"
															},
															"nativeSrc": "5148:119:9",
															"nodeType": "YulIf",
															"src": "5148:119:9"
														},
														{
															"nativeSrc": "5277:117:9",
															"nodeType": "YulBlock",
															"src": "5277:117:9",
															"statements": [
																{
																	"nativeSrc": "5292:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5306:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5321:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5321:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5356:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5356:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5367:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5367:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5352:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5352:3:9"
																				},
																				"nativeSrc": "5352:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5352:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5376:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5376:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5331:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5331:20:9"
																		},
																		"nativeSrc": "5331:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5331:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5321:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5321:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5404:115:9",
															"nodeType": "YulBlock",
															"src": "5404:115:9",
															"statements": [
																{
																	"nativeSrc": "5419:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5419:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5433:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5433:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5423:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5423:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5449:60:9",
																	"nodeType": "YulAssignment",
																	"src": "5449:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5481:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5481:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5492:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5492:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5477:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5477:3:9"
																				},
																				"nativeSrc": "5477:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5477:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5501:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5501:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5459:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5459:17:9"
																		},
																		"nativeSrc": "5459:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5459:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5449:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5449:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "5058:468:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5100:9:9",
														"nodeType": "YulTypedName",
														"src": "5100:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5111:7:9",
														"nodeType": "YulTypedName",
														"src": "5111:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5123:6:9",
														"nodeType": "YulTypedName",
														"src": "5123:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5131:6:9",
														"nodeType": "YulTypedName",
														"src": "5131:6:9",
														"type": ""
													}
												],
												"src": "5058:468:9"
											},
											{
												"body": {
													"nativeSrc": "5632:519:9",
													"nodeType": "YulBlock",
													"src": "5632:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5678:83:9",
																"nodeType": "YulBlock",
																"src": "5678:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5680:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5680:77:9"
																			},
																			"nativeSrc": "5680:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5680:79:9"
																		},
																		"nativeSrc": "5680:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5680:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5653:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5653:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5662:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5662:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5649:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5649:3:9"
																		},
																		"nativeSrc": "5649:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5649:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5674:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5674:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5645:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5645:3:9"
																},
																"nativeSrc": "5645:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5645:32:9"
															},
															"nativeSrc": "5642:119:9",
															"nodeType": "YulIf",
															"src": "5642:119:9"
														},
														{
															"nativeSrc": "5771:117:9",
															"nodeType": "YulBlock",
															"src": "5771:117:9",
															"statements": [
																{
																	"nativeSrc": "5786:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5786:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5800:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5800:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5790:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5790:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5815:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5815:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5850:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5850:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5861:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5861:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5846:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5846:3:9"
																				},
																				"nativeSrc": "5846:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5846:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5870:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5870:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5825:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5825:20:9"
																		},
																		"nativeSrc": "5825:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5825:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5815:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5815:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5898:118:9",
															"nodeType": "YulBlock",
															"src": "5898:118:9",
															"statements": [
																{
																	"nativeSrc": "5913:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5913:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5927:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5927:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5917:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5917:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5943:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5943:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5978:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5978:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5989:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5989:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5974:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5974:3:9"
																				},
																				"nativeSrc": "5974:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5974:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5998:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5998:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5953:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5953:20:9"
																		},
																		"nativeSrc": "5953:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5953:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5943:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5943:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6026:118:9",
															"nodeType": "YulBlock",
															"src": "6026:118:9",
															"statements": [
																{
																	"nativeSrc": "6041:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6041:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6055:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6055:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6045:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6045:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6071:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6071:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6106:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6106:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6117:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6117:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6102:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6102:3:9"
																				},
																				"nativeSrc": "6102:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6102:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6126:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6126:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6081:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6081:20:9"
																		},
																		"nativeSrc": "6081:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6081:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6071:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6071:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5532:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5586:9:9",
														"nodeType": "YulTypedName",
														"src": "5586:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5597:7:9",
														"nodeType": "YulTypedName",
														"src": "5597:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5609:6:9",
														"nodeType": "YulTypedName",
														"src": "5609:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5617:6:9",
														"nodeType": "YulTypedName",
														"src": "5617:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5625:6:9",
														"nodeType": "YulTypedName",
														"src": "5625:6:9",
														"type": ""
													}
												],
												"src": "5532:619:9"
											},
											{
												"body": {
													"nativeSrc": "6200:43:9",
													"nodeType": "YulBlock",
													"src": "6200:43:9",
													"statements": [
														{
															"nativeSrc": "6210:27:9",
															"nodeType": "YulAssignment",
															"src": "6210:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6225:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6225:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6232:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6232:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6221:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6221:3:9"
																},
																"nativeSrc": "6221:16:9",
																"nodeType": "YulFunctionCall",
																"src": "6221:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6210:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "6210:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6157:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6182:5:9",
														"nodeType": "YulTypedName",
														"src": "6182:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6192:7:9",
														"nodeType": "YulTypedName",
														"src": "6192:7:9",
														"type": ""
													}
												],
												"src": "6157:86:9"
											},
											{
												"body": {
													"nativeSrc": "6310:51:9",
													"nodeType": "YulBlock",
													"src": "6310:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6327:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6327:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6348:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6348:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6332:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "6332:15:9"
																		},
																		"nativeSrc": "6332:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6332:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6320:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6320:6:9"
																},
																"nativeSrc": "6320:35:9",
																"nodeType": "YulFunctionCall",
																"src": "6320:35:9"
															},
															"nativeSrc": "6320:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "6320:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6249:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6298:5:9",
														"nodeType": "YulTypedName",
														"src": "6298:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6305:3:9",
														"nodeType": "YulTypedName",
														"src": "6305:3:9",
														"type": ""
													}
												],
												"src": "6249:112:9"
											},
											{
												"body": {
													"nativeSrc": "6461:120:9",
													"nodeType": "YulBlock",
													"src": "6461:120:9",
													"statements": [
														{
															"nativeSrc": "6471:26:9",
															"nodeType": "YulAssignment",
															"src": "6471:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6483:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6483:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6494:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6479:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6479:3:9"
																},
																"nativeSrc": "6479:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6479:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6471:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6471:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6547:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6547:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6560:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6560:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6571:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6571:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6556:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6556:3:9"
																		},
																		"nativeSrc": "6556:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6556:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6507:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "6507:39:9"
																},
																"nativeSrc": "6507:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6507:67:9"
															},
															"nativeSrc": "6507:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "6507:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6367:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6433:9:9",
														"nodeType": "YulTypedName",
														"src": "6433:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6445:6:9",
														"nodeType": "YulTypedName",
														"src": "6445:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6456:4:9",
														"nodeType": "YulTypedName",
														"src": "6456:4:9",
														"type": ""
													}
												],
												"src": "6367:214:9"
											},
											{
												"body": {
													"nativeSrc": "6676:28:9",
													"nodeType": "YulBlock",
													"src": "6676:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6693:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6693:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6696:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6696:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6686:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6686:6:9"
																},
																"nativeSrc": "6686:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6686:12:9"
															},
															"nativeSrc": "6686:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6686:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6587:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6587:117:9"
											},
											{
												"body": {
													"nativeSrc": "6799:28:9",
													"nodeType": "YulBlock",
													"src": "6799:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6816:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6816:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6819:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6819:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6809:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6809:6:9"
																},
																"nativeSrc": "6809:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6809:12:9"
															},
															"nativeSrc": "6809:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6809:12:9"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "6710:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6710:117:9"
											},
											{
												"body": {
													"nativeSrc": "6922:28:9",
													"nodeType": "YulBlock",
													"src": "6922:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6939:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6942:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6942:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6932:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6932:6:9"
																},
																"nativeSrc": "6932:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6932:12:9"
															},
															"nativeSrc": "6932:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6932:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6833:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6833:117:9"
											},
											{
												"body": {
													"nativeSrc": "7063:478:9",
													"nodeType": "YulBlock",
													"src": "7063:478:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7112:83:9",
																"nodeType": "YulBlock",
																"src": "7112:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7114:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7114:77:9"
																			},
																			"nativeSrc": "7114:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7114:79:9"
																		},
																		"nativeSrc": "7114:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7114:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7091:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7091:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7099:4:9",
																						"nodeType": "YulLiteral",
																						"src": "7099:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7087:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7087:3:9"
																				},
																				"nativeSrc": "7087:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7087:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7106:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7106:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7083:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7083:3:9"
																		},
																		"nativeSrc": "7083:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7083:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7076:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7076:6:9"
																},
																"nativeSrc": "7076:35:9",
																"nodeType": "YulFunctionCall",
																"src": "7076:35:9"
															},
															"nativeSrc": "7073:122:9",
															"nodeType": "YulIf",
															"src": "7073:122:9"
														},
														{
															"nativeSrc": "7204:30:9",
															"nodeType": "YulAssignment",
															"src": "7204:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7227:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7227:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7214:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "7214:12:9"
																},
																"nativeSrc": "7214:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7214:20:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7204:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7204:6:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7277:83:9",
																"nodeType": "YulBlock",
																"src": "7277:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "7279:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7279:77:9"
																			},
																			"nativeSrc": "7279:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7279:79:9"
																		},
																		"nativeSrc": "7279:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7279:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7249:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7249:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7257:18:9",
																		"nodeType": "YulLiteral",
																		"src": "7257:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7246:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7246:2:9"
																},
																"nativeSrc": "7246:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7246:30:9"
															},
															"nativeSrc": "7243:117:9",
															"nodeType": "YulIf",
															"src": "7243:117:9"
														},
														{
															"nativeSrc": "7369:29:9",
															"nodeType": "YulAssignment",
															"src": "7369:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7385:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7385:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7393:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7393:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7381:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7381:3:9"
																},
																"nativeSrc": "7381:17:9",
																"nodeType": "YulFunctionCall",
																"src": "7381:17:9"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "7369:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "7369:8:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7452:83:9",
																"nodeType": "YulBlock",
																"src": "7452:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7454:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7454:77:9"
																			},
																			"nativeSrc": "7454:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7454:79:9"
																		},
																		"nativeSrc": "7454:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7454:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "7417:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "7417:8:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "7431:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7431:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7439:4:9",
																						"nodeType": "YulLiteral",
																						"src": "7439:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7427:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7427:3:9"
																				},
																				"nativeSrc": "7427:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7427:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7413:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7413:3:9"
																		},
																		"nativeSrc": "7413:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7413:32:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7447:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7447:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7410:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7410:2:9"
																},
																"nativeSrc": "7410:41:9",
																"nodeType": "YulFunctionCall",
																"src": "7410:41:9"
															},
															"nativeSrc": "7407:128:9",
															"nodeType": "YulIf",
															"src": "7407:128:9"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "6973:568:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7030:6:9",
														"nodeType": "YulTypedName",
														"src": "7030:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7038:3:9",
														"nodeType": "YulTypedName",
														"src": "7038:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "7046:8:9",
														"nodeType": "YulTypedName",
														"src": "7046:8:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7056:6:9",
														"nodeType": "YulTypedName",
														"src": "7056:6:9",
														"type": ""
													}
												],
												"src": "6973:568:9"
											},
											{
												"body": {
													"nativeSrc": "7662:583:9",
													"nodeType": "YulBlock",
													"src": "7662:583:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7708:83:9",
																"nodeType": "YulBlock",
																"src": "7708:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7710:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7710:77:9"
																			},
																			"nativeSrc": "7710:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7710:79:9"
																		},
																		"nativeSrc": "7710:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7710:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7683:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7683:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7692:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7692:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7679:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7679:3:9"
																		},
																		"nativeSrc": "7679:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7679:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7704:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7704:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7675:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7675:3:9"
																},
																"nativeSrc": "7675:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7675:32:9"
															},
															"nativeSrc": "7672:119:9",
															"nodeType": "YulIf",
															"src": "7672:119:9"
														},
														{
															"nativeSrc": "7801:312:9",
															"nodeType": "YulBlock",
															"src": "7801:312:9",
															"statements": [
																{
																	"nativeSrc": "7816:45:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7816:45:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7847:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7847:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7858:1:9",
																						"nodeType": "YulLiteral",
																						"src": "7858:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7843:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7843:3:9"
																				},
																				"nativeSrc": "7843:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7843:17:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7830:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "7830:12:9"
																		},
																		"nativeSrc": "7830:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7830:31:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7820:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7820:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7908:83:9",
																		"nodeType": "YulBlock",
																		"src": "7908:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7910:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "7910:77:9"
																					},
																					"nativeSrc": "7910:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7910:79:9"
																				},
																				"nativeSrc": "7910:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "7910:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7880:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7880:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7888:18:9",
																				"nodeType": "YulLiteral",
																				"src": "7888:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7877:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7877:2:9"
																		},
																		"nativeSrc": "7877:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7877:30:9"
																	},
																	"nativeSrc": "7874:117:9",
																	"nodeType": "YulIf",
																	"src": "7874:117:9"
																},
																{
																	"nativeSrc": "8005:98:9",
																	"nodeType": "YulAssignment",
																	"src": "8005:98:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8075:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8075:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8086:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8086:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8071:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8071:3:9"
																				},
																				"nativeSrc": "8071:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8071:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8095:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8095:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "8023:47:9",
																			"nodeType": "YulIdentifier",
																			"src": "8023:47:9"
																		},
																		"nativeSrc": "8023:80:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8023:80:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8005:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8005:6:9"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "8013:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8013:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8123:115:9",
															"nodeType": "YulBlock",
															"src": "8123:115:9",
															"statements": [
																{
																	"nativeSrc": "8138:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8138:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8152:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8152:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8142:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8142:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8168:60:9",
																	"nodeType": "YulAssignment",
																	"src": "8168:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8200:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8200:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8211:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8211:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8196:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8196:3:9"
																				},
																				"nativeSrc": "8196:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8196:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8220:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8220:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8178:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8178:17:9"
																		},
																		"nativeSrc": "8178:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8178:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8168:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8168:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool",
												"nativeSrc": "7547:698:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7616:9:9",
														"nodeType": "YulTypedName",
														"src": "7616:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7627:7:9",
														"nodeType": "YulTypedName",
														"src": "7627:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7639:6:9",
														"nodeType": "YulTypedName",
														"src": "7639:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7647:6:9",
														"nodeType": "YulTypedName",
														"src": "7647:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7655:6:9",
														"nodeType": "YulTypedName",
														"src": "7655:6:9",
														"type": ""
													}
												],
												"src": "7547:698:9"
											},
											{
												"body": {
													"nativeSrc": "8316:53:9",
													"nodeType": "YulBlock",
													"src": "8316:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8333:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8333:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8356:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8356:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8338:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8338:17:9"
																		},
																		"nativeSrc": "8338:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8338:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8326:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8326:6:9"
																},
																"nativeSrc": "8326:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8326:37:9"
															},
															"nativeSrc": "8326:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8326:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8251:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8304:5:9",
														"nodeType": "YulTypedName",
														"src": "8304:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8311:3:9",
														"nodeType": "YulTypedName",
														"src": "8311:3:9",
														"type": ""
													}
												],
												"src": "8251:118:9"
											},
											{
												"body": {
													"nativeSrc": "8473:124:9",
													"nodeType": "YulBlock",
													"src": "8473:124:9",
													"statements": [
														{
															"nativeSrc": "8483:26:9",
															"nodeType": "YulAssignment",
															"src": "8483:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8495:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8495:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8506:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8506:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8491:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8491:3:9"
																},
																"nativeSrc": "8491:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8491:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8483:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8483:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8563:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8563:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8576:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8576:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8587:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8587:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8572:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8572:3:9"
																		},
																		"nativeSrc": "8572:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8572:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8519:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8519:43:9"
																},
																"nativeSrc": "8519:71:9",
																"nodeType": "YulFunctionCall",
																"src": "8519:71:9"
															},
															"nativeSrc": "8519:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "8519:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8375:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8445:9:9",
														"nodeType": "YulTypedName",
														"src": "8445:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8457:6:9",
														"nodeType": "YulTypedName",
														"src": "8457:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8468:4:9",
														"nodeType": "YulTypedName",
														"src": "8468:4:9",
														"type": ""
													}
												],
												"src": "8375:222:9"
											},
											{
												"body": {
													"nativeSrc": "8666:260:9",
													"nodeType": "YulBlock",
													"src": "8666:260:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8712:83:9",
																"nodeType": "YulBlock",
																"src": "8712:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8714:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8714:77:9"
																			},
																			"nativeSrc": "8714:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8714:79:9"
																		},
																		"nativeSrc": "8714:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8714:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8687:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8687:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8696:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8696:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8683:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8683:3:9"
																		},
																		"nativeSrc": "8683:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8683:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8708:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8708:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8679:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8679:3:9"
																},
																"nativeSrc": "8679:32:9",
																"nodeType": "YulFunctionCall",
																"src": "8679:32:9"
															},
															"nativeSrc": "8676:119:9",
															"nodeType": "YulIf",
															"src": "8676:119:9"
														},
														{
															"nativeSrc": "8805:114:9",
															"nodeType": "YulBlock",
															"src": "8805:114:9",
															"statements": [
																{
																	"nativeSrc": "8820:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8820:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8834:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8834:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8824:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8824:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8849:60:9",
																	"nodeType": "YulAssignment",
																	"src": "8849:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8881:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8881:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8892:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8892:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8877:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8877:3:9"
																				},
																				"nativeSrc": "8877:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8877:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8901:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8901:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8859:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8859:17:9"
																		},
																		"nativeSrc": "8859:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8859:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8849:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8849:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "8603:323:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8636:9:9",
														"nodeType": "YulTypedName",
														"src": "8636:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8647:7:9",
														"nodeType": "YulTypedName",
														"src": "8647:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8659:6:9",
														"nodeType": "YulTypedName",
														"src": "8659:6:9",
														"type": ""
													}
												],
												"src": "8603:323:9"
											},
											{
												"body": {
													"nativeSrc": "9015:391:9",
													"nodeType": "YulBlock",
													"src": "9015:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9061:83:9",
																"nodeType": "YulBlock",
																"src": "9061:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9063:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "9063:77:9"
																			},
																			"nativeSrc": "9063:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9063:79:9"
																		},
																		"nativeSrc": "9063:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9063:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9036:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9036:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9045:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9045:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9032:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9032:3:9"
																		},
																		"nativeSrc": "9032:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9032:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9057:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9057:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9028:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9028:3:9"
																},
																"nativeSrc": "9028:32:9",
																"nodeType": "YulFunctionCall",
																"src": "9028:32:9"
															},
															"nativeSrc": "9025:119:9",
															"nodeType": "YulIf",
															"src": "9025:119:9"
														},
														{
															"nativeSrc": "9154:117:9",
															"nodeType": "YulBlock",
															"src": "9154:117:9",
															"statements": [
																{
																	"nativeSrc": "9169:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9169:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9183:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9183:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9173:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9173:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9198:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9198:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9233:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9233:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9244:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9244:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9229:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9229:3:9"
																				},
																				"nativeSrc": "9229:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9229:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9253:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9253:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9208:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9208:20:9"
																		},
																		"nativeSrc": "9208:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9208:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9198:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9198:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9281:118:9",
															"nodeType": "YulBlock",
															"src": "9281:118:9",
															"statements": [
																{
																	"nativeSrc": "9296:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9296:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9310:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9310:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9300:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9300:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9326:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9326:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9361:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9361:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9372:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9372:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9357:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9357:3:9"
																				},
																				"nativeSrc": "9357:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9357:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9381:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9381:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9336:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9336:20:9"
																		},
																		"nativeSrc": "9336:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9336:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9326:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9326:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8932:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8977:9:9",
														"nodeType": "YulTypedName",
														"src": "8977:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8988:7:9",
														"nodeType": "YulTypedName",
														"src": "8988:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9000:6:9",
														"nodeType": "YulTypedName",
														"src": "9000:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9008:6:9",
														"nodeType": "YulTypedName",
														"src": "9008:6:9",
														"type": ""
													}
												],
												"src": "8932:474:9"
											},
											{
												"body": {
													"nativeSrc": "9594:371:9",
													"nodeType": "YulBlock",
													"src": "9594:371:9",
													"statements": [
														{
															"nativeSrc": "9604:27:9",
															"nodeType": "YulAssignment",
															"src": "9604:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9616:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9616:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9627:3:9",
																		"nodeType": "YulLiteral",
																		"src": "9627:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9612:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9612:3:9"
																},
																"nativeSrc": "9612:19:9",
																"nodeType": "YulFunctionCall",
																"src": "9612:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9604:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9604:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9685:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9685:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9698:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9698:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9709:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9709:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9694:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9694:3:9"
																		},
																		"nativeSrc": "9694:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9694:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9641:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9641:43:9"
																},
																"nativeSrc": "9641:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9641:71:9"
															},
															"nativeSrc": "9641:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9641:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9766:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9766:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9779:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9779:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9790:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9790:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9775:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9775:3:9"
																		},
																		"nativeSrc": "9775:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9775:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9722:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9722:43:9"
																},
																"nativeSrc": "9722:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9722:72:9"
															},
															"nativeSrc": "9722:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9722:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9848:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9848:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9861:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9861:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9872:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9872:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9857:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9857:3:9"
																		},
																		"nativeSrc": "9857:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9857:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9804:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9804:43:9"
																},
																"nativeSrc": "9804:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9804:72:9"
															},
															"nativeSrc": "9804:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9804:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9930:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9930:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9943:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9943:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9954:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9954:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9939:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9939:3:9"
																		},
																		"nativeSrc": "9939:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9939:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9886:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9886:43:9"
																},
																"nativeSrc": "9886:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9886:72:9"
															},
															"nativeSrc": "9886:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9886:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9412:553:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9542:9:9",
														"nodeType": "YulTypedName",
														"src": "9542:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9554:6:9",
														"nodeType": "YulTypedName",
														"src": "9554:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9562:6:9",
														"nodeType": "YulTypedName",
														"src": "9562:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9570:6:9",
														"nodeType": "YulTypedName",
														"src": "9570:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9578:6:9",
														"nodeType": "YulTypedName",
														"src": "9578:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9589:4:9",
														"nodeType": "YulTypedName",
														"src": "9589:4:9",
														"type": ""
													}
												],
												"src": "9412:553:9"
											},
											{
												"body": {
													"nativeSrc": "9999:152:9",
													"nodeType": "YulBlock",
													"src": "9999:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10016:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10016:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10019:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10019:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10009:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10009:6:9"
																},
																"nativeSrc": "10009:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10009:88:9"
															},
															"nativeSrc": "10009:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10009:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10113:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10113:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10116:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10116:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10106:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10106:6:9"
																},
																"nativeSrc": "10106:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10106:15:9"
															},
															"nativeSrc": "10106:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10106:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10137:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10137:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10140:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10140:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10130:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10130:6:9"
																},
																"nativeSrc": "10130:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10130:15:9"
															},
															"nativeSrc": "10130:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10130:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9971:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9971:180:9"
											},
											{
												"body": {
													"nativeSrc": "10208:269:9",
													"nodeType": "YulBlock",
													"src": "10208:269:9",
													"statements": [
														{
															"nativeSrc": "10218:22:9",
															"nodeType": "YulAssignment",
															"src": "10218:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10232:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10232:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10238:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10238:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10228:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10228:3:9"
																},
																"nativeSrc": "10228:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10228:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10218:6:9"
																}
															]
														},
														{
															"nativeSrc": "10249:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "10249:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10279:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10279:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10285:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10285:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10275:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10275:3:9"
																},
																"nativeSrc": "10275:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10275:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10253:18:9",
																	"nodeType": "YulTypedName",
																	"src": "10253:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10326:51:9",
																"nodeType": "YulBlock",
																"src": "10326:51:9",
																"statements": [
																	{
																		"nativeSrc": "10340:27:9",
																		"nodeType": "YulAssignment",
																		"src": "10340:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10354:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "10354:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10362:4:9",
																					"nodeType": "YulLiteral",
																					"src": "10362:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10350:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "10350:3:9"
																			},
																			"nativeSrc": "10350:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10350:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10340:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10340:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10306:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "10306:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10299:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10299:6:9"
																},
																"nativeSrc": "10299:26:9",
																"nodeType": "YulFunctionCall",
																"src": "10299:26:9"
															},
															"nativeSrc": "10296:81:9",
															"nodeType": "YulIf",
															"src": "10296:81:9"
														},
														{
															"body": {
																"nativeSrc": "10429:42:9",
																"nodeType": "YulBlock",
																"src": "10429:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10443:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10443:16:9"
																			},
																			"nativeSrc": "10443:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10443:18:9"
																		},
																		"nativeSrc": "10443:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10443:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10393:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "10393:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10416:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10416:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10424:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10424:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10413:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "10413:2:9"
																		},
																		"nativeSrc": "10413:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10413:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10390:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10390:2:9"
																},
																"nativeSrc": "10390:38:9",
																"nodeType": "YulFunctionCall",
																"src": "10390:38:9"
															},
															"nativeSrc": "10387:84:9",
															"nodeType": "YulIf",
															"src": "10387:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10157:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10192:4:9",
														"nodeType": "YulTypedName",
														"src": "10192:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10201:6:9",
														"nodeType": "YulTypedName",
														"src": "10201:6:9",
														"type": ""
													}
												],
												"src": "10157:320:9"
											},
											{
												"body": {
													"nativeSrc": "10589:66:9",
													"nodeType": "YulBlock",
													"src": "10589:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10611:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10611:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10619:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10619:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10607:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10607:3:9"
																		},
																		"nativeSrc": "10607:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10607:14:9"
																	},
																	{
																		"hexValue": "4164647265737320697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "10623:24:9",
																		"nodeType": "YulLiteral",
																		"src": "10623:24:9",
																		"type": "",
																		"value": "Address is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10600:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10600:6:9"
																},
																"nativeSrc": "10600:48:9",
																"nodeType": "YulFunctionCall",
																"src": "10600:48:9"
															},
															"nativeSrc": "10600:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "10600:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
												"nativeSrc": "10483:172:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10581:6:9",
														"nodeType": "YulTypedName",
														"src": "10581:6:9",
														"type": ""
													}
												],
												"src": "10483:172:9"
											},
											{
												"body": {
													"nativeSrc": "10807:220:9",
													"nodeType": "YulBlock",
													"src": "10807:220:9",
													"statements": [
														{
															"nativeSrc": "10817:74:9",
															"nodeType": "YulAssignment",
															"src": "10817:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10883:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10883:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10888:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10888:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10824:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10824:58:9"
																},
																"nativeSrc": "10824:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10824:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10817:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10817:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10989:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10989:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																	"nativeSrc": "10900:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10900:88:9"
																},
																"nativeSrc": "10900:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10900:93:9"
															},
															"nativeSrc": "10900:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10900:93:9"
														},
														{
															"nativeSrc": "11002:19:9",
															"nodeType": "YulAssignment",
															"src": "11002:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11013:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11013:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11018:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11018:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11009:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11009:3:9"
																},
																"nativeSrc": "11009:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11009:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11002:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11002:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10661:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10795:3:9",
														"nodeType": "YulTypedName",
														"src": "10795:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10803:3:9",
														"nodeType": "YulTypedName",
														"src": "10803:3:9",
														"type": ""
													}
												],
												"src": "10661:366:9"
											},
											{
												"body": {
													"nativeSrc": "11204:248:9",
													"nodeType": "YulBlock",
													"src": "11204:248:9",
													"statements": [
														{
															"nativeSrc": "11214:26:9",
															"nodeType": "YulAssignment",
															"src": "11214:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11226:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11226:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11237:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11237:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11222:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11222:3:9"
																},
																"nativeSrc": "11222:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11222:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11214:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11214:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11261:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11261:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11272:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11272:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11257:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11257:3:9"
																		},
																		"nativeSrc": "11257:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11257:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11280:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11280:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11286:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11286:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11276:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11276:3:9"
																		},
																		"nativeSrc": "11276:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11276:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11250:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11250:6:9"
																},
																"nativeSrc": "11250:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11250:47:9"
															},
															"nativeSrc": "11250:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11250:47:9"
														},
														{
															"nativeSrc": "11306:139:9",
															"nodeType": "YulAssignment",
															"src": "11306:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11440:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11440:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11314:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11314:124:9"
																},
																"nativeSrc": "11314:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11314:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11306:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11306:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11033:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11184:9:9",
														"nodeType": "YulTypedName",
														"src": "11184:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11199:4:9",
														"nodeType": "YulTypedName",
														"src": "11199:4:9",
														"type": ""
													}
												],
												"src": "11033:419:9"
											},
											{
												"body": {
													"nativeSrc": "11564:63:9",
													"nodeType": "YulBlock",
													"src": "11564:63:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11586:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11586:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11594:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11594:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11582:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11582:3:9"
																		},
																		"nativeSrc": "11582:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11582:14:9"
																	},
																	{
																		"hexValue": "54726164696e67206e6f7420656e61626c6564",
																		"kind": "string",
																		"nativeSrc": "11598:21:9",
																		"nodeType": "YulLiteral",
																		"src": "11598:21:9",
																		"type": "",
																		"value": "Trading not enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11575:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11575:6:9"
																},
																"nativeSrc": "11575:45:9",
																"nodeType": "YulFunctionCall",
																"src": "11575:45:9"
															},
															"nativeSrc": "11575:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "11575:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c",
												"nativeSrc": "11458:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11556:6:9",
														"nodeType": "YulTypedName",
														"src": "11556:6:9",
														"type": ""
													}
												],
												"src": "11458:169:9"
											},
											{
												"body": {
													"nativeSrc": "11779:220:9",
													"nodeType": "YulBlock",
													"src": "11779:220:9",
													"statements": [
														{
															"nativeSrc": "11789:74:9",
															"nodeType": "YulAssignment",
															"src": "11789:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11855:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11855:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11860:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11860:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11796:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11796:58:9"
																},
																"nativeSrc": "11796:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11796:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11789:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11789:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11961:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11961:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c",
																	"nativeSrc": "11872:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11872:88:9"
																},
																"nativeSrc": "11872:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11872:93:9"
															},
															"nativeSrc": "11872:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11872:93:9"
														},
														{
															"nativeSrc": "11974:19:9",
															"nodeType": "YulAssignment",
															"src": "11974:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11985:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11985:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11990:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11990:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11981:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11981:3:9"
																},
																"nativeSrc": "11981:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11981:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11974:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11974:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11633:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11767:3:9",
														"nodeType": "YulTypedName",
														"src": "11767:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11775:3:9",
														"nodeType": "YulTypedName",
														"src": "11775:3:9",
														"type": ""
													}
												],
												"src": "11633:366:9"
											},
											{
												"body": {
													"nativeSrc": "12176:248:9",
													"nodeType": "YulBlock",
													"src": "12176:248:9",
													"statements": [
														{
															"nativeSrc": "12186:26:9",
															"nodeType": "YulAssignment",
															"src": "12186:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12198:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12198:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12209:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12209:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12194:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12194:3:9"
																},
																"nativeSrc": "12194:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12194:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12186:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12186:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12233:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12233:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12244:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12244:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12229:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12229:3:9"
																		},
																		"nativeSrc": "12229:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12229:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12252:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12252:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12258:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12258:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12248:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12248:3:9"
																		},
																		"nativeSrc": "12248:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12248:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12222:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12222:6:9"
																},
																"nativeSrc": "12222:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12222:47:9"
															},
															"nativeSrc": "12222:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12222:47:9"
														},
														{
															"nativeSrc": "12278:139:9",
															"nodeType": "YulAssignment",
															"src": "12278:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12412:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12412:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12286:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12286:124:9"
																},
																"nativeSrc": "12286:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12286:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12278:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12278:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12005:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12156:9:9",
														"nodeType": "YulTypedName",
														"src": "12156:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12171:4:9",
														"nodeType": "YulTypedName",
														"src": "12171:4:9",
														"type": ""
													}
												],
												"src": "12005:419:9"
											},
											{
												"body": {
													"nativeSrc": "12536:71:9",
													"nodeType": "YulBlock",
													"src": "12536:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12558:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12558:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12566:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12566:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12554:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12554:3:9"
																		},
																		"nativeSrc": "12554:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12554:14:9"
																	},
																	{
																		"hexValue": "5472616e736665722065786365656473206d617820616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "12570:29:9",
																		"nodeType": "YulLiteral",
																		"src": "12570:29:9",
																		"type": "",
																		"value": "Transfer exceeds max amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12547:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12547:6:9"
																},
																"nativeSrc": "12547:53:9",
																"nodeType": "YulFunctionCall",
																"src": "12547:53:9"
															},
															"nativeSrc": "12547:53:9",
															"nodeType": "YulExpressionStatement",
															"src": "12547:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f",
												"nativeSrc": "12430:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12528:6:9",
														"nodeType": "YulTypedName",
														"src": "12528:6:9",
														"type": ""
													}
												],
												"src": "12430:177:9"
											},
											{
												"body": {
													"nativeSrc": "12759:220:9",
													"nodeType": "YulBlock",
													"src": "12759:220:9",
													"statements": [
														{
															"nativeSrc": "12769:74:9",
															"nodeType": "YulAssignment",
															"src": "12769:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12835:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12835:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12840:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12840:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12776:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12776:58:9"
																},
																"nativeSrc": "12776:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12776:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12769:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12769:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12941:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12941:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f",
																	"nativeSrc": "12852:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12852:88:9"
																},
																"nativeSrc": "12852:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12852:93:9"
															},
															"nativeSrc": "12852:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12852:93:9"
														},
														{
															"nativeSrc": "12954:19:9",
															"nodeType": "YulAssignment",
															"src": "12954:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12965:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12965:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12970:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12970:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12961:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12961:3:9"
																},
																"nativeSrc": "12961:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12961:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12954:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12954:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12613:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12747:3:9",
														"nodeType": "YulTypedName",
														"src": "12747:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12755:3:9",
														"nodeType": "YulTypedName",
														"src": "12755:3:9",
														"type": ""
													}
												],
												"src": "12613:366:9"
											},
											{
												"body": {
													"nativeSrc": "13156:248:9",
													"nodeType": "YulBlock",
													"src": "13156:248:9",
													"statements": [
														{
															"nativeSrc": "13166:26:9",
															"nodeType": "YulAssignment",
															"src": "13166:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13178:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13178:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13189:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13189:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13174:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13174:3:9"
																},
																"nativeSrc": "13174:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13174:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13166:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13166:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13213:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13213:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13224:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13224:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13209:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13209:3:9"
																		},
																		"nativeSrc": "13209:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13209:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13232:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13232:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13238:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13238:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13228:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13228:3:9"
																		},
																		"nativeSrc": "13228:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13228:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13202:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13202:6:9"
																},
																"nativeSrc": "13202:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13202:47:9"
															},
															"nativeSrc": "13202:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13202:47:9"
														},
														{
															"nativeSrc": "13258:139:9",
															"nodeType": "YulAssignment",
															"src": "13258:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13392:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13392:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13266:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13266:124:9"
																},
																"nativeSrc": "13266:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13266:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13258:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13258:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12985:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13136:9:9",
														"nodeType": "YulTypedName",
														"src": "13136:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13151:4:9",
														"nodeType": "YulTypedName",
														"src": "13151:4:9",
														"type": ""
													}
												],
												"src": "12985:419:9"
											},
											{
												"body": {
													"nativeSrc": "13516:59:9",
													"nodeType": "YulBlock",
													"src": "13516:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13538:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13538:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13546:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13546:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13534:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13534:3:9"
																		},
																		"nativeSrc": "13534:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13534:14:9"
																	},
																	{
																		"hexValue": "436f6f6c646f776e20616374697665",
																		"kind": "string",
																		"nativeSrc": "13550:17:9",
																		"nodeType": "YulLiteral",
																		"src": "13550:17:9",
																		"type": "",
																		"value": "Cooldown active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13527:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13527:6:9"
																},
																"nativeSrc": "13527:41:9",
																"nodeType": "YulFunctionCall",
																"src": "13527:41:9"
															},
															"nativeSrc": "13527:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "13527:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5",
												"nativeSrc": "13410:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13508:6:9",
														"nodeType": "YulTypedName",
														"src": "13508:6:9",
														"type": ""
													}
												],
												"src": "13410:165:9"
											},
											{
												"body": {
													"nativeSrc": "13727:220:9",
													"nodeType": "YulBlock",
													"src": "13727:220:9",
													"statements": [
														{
															"nativeSrc": "13737:74:9",
															"nodeType": "YulAssignment",
															"src": "13737:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13803:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13803:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13808:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13808:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13744:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13744:58:9"
																},
																"nativeSrc": "13744:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13744:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13737:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13737:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13909:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13909:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5",
																	"nativeSrc": "13820:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13820:88:9"
																},
																"nativeSrc": "13820:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13820:93:9"
															},
															"nativeSrc": "13820:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13820:93:9"
														},
														{
															"nativeSrc": "13922:19:9",
															"nodeType": "YulAssignment",
															"src": "13922:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13933:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13933:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13938:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13938:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13929:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13929:3:9"
																},
																"nativeSrc": "13929:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13929:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13922:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13922:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13581:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13715:3:9",
														"nodeType": "YulTypedName",
														"src": "13715:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13723:3:9",
														"nodeType": "YulTypedName",
														"src": "13723:3:9",
														"type": ""
													}
												],
												"src": "13581:366:9"
											},
											{
												"body": {
													"nativeSrc": "14124:248:9",
													"nodeType": "YulBlock",
													"src": "14124:248:9",
													"statements": [
														{
															"nativeSrc": "14134:26:9",
															"nodeType": "YulAssignment",
															"src": "14134:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14146:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14146:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14157:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14157:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14142:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14142:3:9"
																},
																"nativeSrc": "14142:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14142:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14134:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14134:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14181:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14181:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14192:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14192:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14177:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14177:3:9"
																		},
																		"nativeSrc": "14177:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14177:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14200:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14200:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14206:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14206:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14196:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14196:3:9"
																		},
																		"nativeSrc": "14196:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14196:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14170:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14170:6:9"
																},
																"nativeSrc": "14170:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14170:47:9"
															},
															"nativeSrc": "14170:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14170:47:9"
														},
														{
															"nativeSrc": "14226:139:9",
															"nodeType": "YulAssignment",
															"src": "14226:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14360:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14360:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14234:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14234:124:9"
																},
																"nativeSrc": "14234:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14234:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14226:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14226:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13953:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14104:9:9",
														"nodeType": "YulTypedName",
														"src": "14104:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14119:4:9",
														"nodeType": "YulTypedName",
														"src": "14119:4:9",
														"type": ""
													}
												],
												"src": "13953:419:9"
											},
											{
												"body": {
													"nativeSrc": "14484:61:9",
													"nodeType": "YulBlock",
													"src": "14484:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14506:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14506:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14514:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14514:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14502:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14502:3:9"
																		},
																		"nativeSrc": "14502:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14502:14:9"
																	},
																	{
																		"hexValue": "486f6c642074696d65206e6f74206d6574",
																		"kind": "string",
																		"nativeSrc": "14518:19:9",
																		"nodeType": "YulLiteral",
																		"src": "14518:19:9",
																		"type": "",
																		"value": "Hold time not met"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14495:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14495:6:9"
																},
																"nativeSrc": "14495:43:9",
																"nodeType": "YulFunctionCall",
																"src": "14495:43:9"
															},
															"nativeSrc": "14495:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "14495:43:9"
														}
													]
												},
												"name": "store_literal_in_memory_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374",
												"nativeSrc": "14378:167:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14476:6:9",
														"nodeType": "YulTypedName",
														"src": "14476:6:9",
														"type": ""
													}
												],
												"src": "14378:167:9"
											},
											{
												"body": {
													"nativeSrc": "14697:220:9",
													"nodeType": "YulBlock",
													"src": "14697:220:9",
													"statements": [
														{
															"nativeSrc": "14707:74:9",
															"nodeType": "YulAssignment",
															"src": "14707:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14773:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14773:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14778:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14778:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14714:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14714:58:9"
																},
																"nativeSrc": "14714:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14714:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14707:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14707:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14879:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14879:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374",
																	"nativeSrc": "14790:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14790:88:9"
																},
																"nativeSrc": "14790:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14790:93:9"
															},
															"nativeSrc": "14790:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14790:93:9"
														},
														{
															"nativeSrc": "14892:19:9",
															"nodeType": "YulAssignment",
															"src": "14892:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14903:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14903:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14908:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14908:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14899:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14899:3:9"
																},
																"nativeSrc": "14899:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14899:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14892:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14892:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14551:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14685:3:9",
														"nodeType": "YulTypedName",
														"src": "14685:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14693:3:9",
														"nodeType": "YulTypedName",
														"src": "14693:3:9",
														"type": ""
													}
												],
												"src": "14551:366:9"
											},
											{
												"body": {
													"nativeSrc": "15094:248:9",
													"nodeType": "YulBlock",
													"src": "15094:248:9",
													"statements": [
														{
															"nativeSrc": "15104:26:9",
															"nodeType": "YulAssignment",
															"src": "15104:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15116:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15116:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15127:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15127:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15112:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15112:3:9"
																},
																"nativeSrc": "15112:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15112:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15104:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15104:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15151:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15151:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15162:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15162:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15147:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15147:3:9"
																		},
																		"nativeSrc": "15147:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15147:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15170:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15170:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15176:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15176:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15166:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15166:3:9"
																		},
																		"nativeSrc": "15166:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15166:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15140:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15140:6:9"
																},
																"nativeSrc": "15140:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15140:47:9"
															},
															"nativeSrc": "15140:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15140:47:9"
														},
														{
															"nativeSrc": "15196:139:9",
															"nodeType": "YulAssignment",
															"src": "15196:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15330:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15330:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15204:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15204:124:9"
																},
																"nativeSrc": "15204:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15204:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15196:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15196:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14923:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15074:9:9",
														"nodeType": "YulTypedName",
														"src": "15074:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15089:4:9",
														"nodeType": "YulTypedName",
														"src": "15089:4:9",
														"type": ""
													}
												],
												"src": "14923:419:9"
											},
											{
												"body": {
													"nativeSrc": "15454:69:9",
													"nodeType": "YulBlock",
													"src": "15454:69:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15476:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15476:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15484:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15484:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15472:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15472:3:9"
																		},
																		"nativeSrc": "15472:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15472:14:9"
																	},
																	{
																		"hexValue": "45786365656473206d61782077616c6c657420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "15488:27:9",
																		"nodeType": "YulLiteral",
																		"src": "15488:27:9",
																		"type": "",
																		"value": "Exceeds max wallet amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15465:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15465:6:9"
																},
																"nativeSrc": "15465:51:9",
																"nodeType": "YulFunctionCall",
																"src": "15465:51:9"
															},
															"nativeSrc": "15465:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "15465:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a",
												"nativeSrc": "15348:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15446:6:9",
														"nodeType": "YulTypedName",
														"src": "15446:6:9",
														"type": ""
													}
												],
												"src": "15348:175:9"
											},
											{
												"body": {
													"nativeSrc": "15675:220:9",
													"nodeType": "YulBlock",
													"src": "15675:220:9",
													"statements": [
														{
															"nativeSrc": "15685:74:9",
															"nodeType": "YulAssignment",
															"src": "15685:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15751:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15751:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15756:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15756:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15692:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15692:58:9"
																},
																"nativeSrc": "15692:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15692:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15685:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15685:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15857:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15857:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a",
																	"nativeSrc": "15768:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15768:88:9"
																},
																"nativeSrc": "15768:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15768:93:9"
															},
															"nativeSrc": "15768:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15768:93:9"
														},
														{
															"nativeSrc": "15870:19:9",
															"nodeType": "YulAssignment",
															"src": "15870:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15881:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15881:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15886:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15886:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15877:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15877:3:9"
																},
																"nativeSrc": "15877:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15877:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15870:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15870:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15529:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15663:3:9",
														"nodeType": "YulTypedName",
														"src": "15663:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15671:3:9",
														"nodeType": "YulTypedName",
														"src": "15671:3:9",
														"type": ""
													}
												],
												"src": "15529:366:9"
											},
											{
												"body": {
													"nativeSrc": "16072:248:9",
													"nodeType": "YulBlock",
													"src": "16072:248:9",
													"statements": [
														{
															"nativeSrc": "16082:26:9",
															"nodeType": "YulAssignment",
															"src": "16082:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16094:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16094:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16105:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16105:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16090:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16090:3:9"
																},
																"nativeSrc": "16090:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16090:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16082:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16082:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16129:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16129:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16140:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16140:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16125:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16125:3:9"
																		},
																		"nativeSrc": "16125:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16125:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16148:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16148:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16154:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16154:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16144:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16144:3:9"
																		},
																		"nativeSrc": "16144:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16144:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16118:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16118:6:9"
																},
																"nativeSrc": "16118:47:9",
																"nodeType": "YulFunctionCall",
																"src": "16118:47:9"
															},
															"nativeSrc": "16118:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "16118:47:9"
														},
														{
															"nativeSrc": "16174:139:9",
															"nodeType": "YulAssignment",
															"src": "16174:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16308:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16308:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16182:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16182:124:9"
																},
																"nativeSrc": "16182:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16182:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16174:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16174:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15901:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16052:9:9",
														"nodeType": "YulTypedName",
														"src": "16052:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16067:4:9",
														"nodeType": "YulTypedName",
														"src": "16067:4:9",
														"type": ""
													}
												],
												"src": "15901:419:9"
											},
											{
												"body": {
													"nativeSrc": "16432:61:9",
													"nodeType": "YulBlock",
													"src": "16432:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16454:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16454:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16462:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16462:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16450:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16450:3:9"
																		},
																		"nativeSrc": "16450:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16450:14:9"
																	},
																	{
																		"hexValue": "496e76616c696420726563697069656e74",
																		"kind": "string",
																		"nativeSrc": "16466:19:9",
																		"nodeType": "YulLiteral",
																		"src": "16466:19:9",
																		"type": "",
																		"value": "Invalid recipient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16443:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16443:6:9"
																},
																"nativeSrc": "16443:43:9",
																"nodeType": "YulFunctionCall",
																"src": "16443:43:9"
															},
															"nativeSrc": "16443:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "16443:43:9"
														}
													]
												},
												"name": "store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
												"nativeSrc": "16326:167:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16424:6:9",
														"nodeType": "YulTypedName",
														"src": "16424:6:9",
														"type": ""
													}
												],
												"src": "16326:167:9"
											},
											{
												"body": {
													"nativeSrc": "16645:220:9",
													"nodeType": "YulBlock",
													"src": "16645:220:9",
													"statements": [
														{
															"nativeSrc": "16655:74:9",
															"nodeType": "YulAssignment",
															"src": "16655:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16721:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16721:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16726:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16726:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16662:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16662:58:9"
																},
																"nativeSrc": "16662:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16662:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16655:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16655:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16827:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16827:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																	"nativeSrc": "16738:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16738:88:9"
																},
																"nativeSrc": "16738:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16738:93:9"
															},
															"nativeSrc": "16738:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16738:93:9"
														},
														{
															"nativeSrc": "16840:19:9",
															"nodeType": "YulAssignment",
															"src": "16840:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16851:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16851:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16856:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16856:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16847:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16847:3:9"
																},
																"nativeSrc": "16847:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16847:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16840:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16840:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16499:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16633:3:9",
														"nodeType": "YulTypedName",
														"src": "16633:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16641:3:9",
														"nodeType": "YulTypedName",
														"src": "16641:3:9",
														"type": ""
													}
												],
												"src": "16499:366:9"
											},
											{
												"body": {
													"nativeSrc": "17042:248:9",
													"nodeType": "YulBlock",
													"src": "17042:248:9",
													"statements": [
														{
															"nativeSrc": "17052:26:9",
															"nodeType": "YulAssignment",
															"src": "17052:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17064:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17064:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17075:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17075:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17060:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17060:3:9"
																},
																"nativeSrc": "17060:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17060:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17052:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17052:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17099:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17099:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17110:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17110:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17095:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17095:3:9"
																		},
																		"nativeSrc": "17095:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17095:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17118:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17118:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17124:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17124:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17114:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17114:3:9"
																		},
																		"nativeSrc": "17114:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17114:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17088:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17088:6:9"
																},
																"nativeSrc": "17088:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17088:47:9"
															},
															"nativeSrc": "17088:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17088:47:9"
														},
														{
															"nativeSrc": "17144:139:9",
															"nodeType": "YulAssignment",
															"src": "17144:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17278:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17278:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17152:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "17152:124:9"
																},
																"nativeSrc": "17152:131:9",
																"nodeType": "YulFunctionCall",
																"src": "17152:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17144:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17144:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16871:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17022:9:9",
														"nodeType": "YulTypedName",
														"src": "17022:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17037:4:9",
														"nodeType": "YulTypedName",
														"src": "17037:4:9",
														"type": ""
													}
												],
												"src": "16871:419:9"
											},
											{
												"body": {
													"nativeSrc": "17324:152:9",
													"nodeType": "YulBlock",
													"src": "17324:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17341:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17341:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17344:77:9",
																		"nodeType": "YulLiteral",
																		"src": "17344:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17334:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17334:6:9"
																},
																"nativeSrc": "17334:88:9",
																"nodeType": "YulFunctionCall",
																"src": "17334:88:9"
															},
															"nativeSrc": "17334:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "17334:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17438:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17438:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17441:4:9",
																		"nodeType": "YulLiteral",
																		"src": "17441:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17431:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17431:6:9"
																},
																"nativeSrc": "17431:15:9",
																"nodeType": "YulFunctionCall",
																"src": "17431:15:9"
															},
															"nativeSrc": "17431:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "17431:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17462:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17462:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17465:4:9",
																		"nodeType": "YulLiteral",
																		"src": "17465:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17455:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17455:6:9"
																},
																"nativeSrc": "17455:15:9",
																"nodeType": "YulFunctionCall",
																"src": "17455:15:9"
															},
															"nativeSrc": "17455:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "17455:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17296:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "17296:180:9"
											},
											{
												"body": {
													"nativeSrc": "17588:72:9",
													"nodeType": "YulBlock",
													"src": "17588:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17610:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17610:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17618:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17618:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17606:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17606:3:9"
																		},
																		"nativeSrc": "17606:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17606:14:9"
																	},
																	{
																		"hexValue": "43616e6e6f7420776974686472617720746f6b656e20697473656c66",
																		"kind": "string",
																		"nativeSrc": "17622:30:9",
																		"nodeType": "YulLiteral",
																		"src": "17622:30:9",
																		"type": "",
																		"value": "Cannot withdraw token itself"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17599:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17599:6:9"
																},
																"nativeSrc": "17599:54:9",
																"nodeType": "YulFunctionCall",
																"src": "17599:54:9"
															},
															"nativeSrc": "17599:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "17599:54:9"
														}
													]
												},
												"name": "store_literal_in_memory_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc",
												"nativeSrc": "17482:178:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17580:6:9",
														"nodeType": "YulTypedName",
														"src": "17580:6:9",
														"type": ""
													}
												],
												"src": "17482:178:9"
											},
											{
												"body": {
													"nativeSrc": "17812:220:9",
													"nodeType": "YulBlock",
													"src": "17812:220:9",
													"statements": [
														{
															"nativeSrc": "17822:74:9",
															"nodeType": "YulAssignment",
															"src": "17822:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17888:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17888:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17893:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17893:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17829:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17829:58:9"
																},
																"nativeSrc": "17829:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17829:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17822:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17822:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17994:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17994:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc",
																	"nativeSrc": "17905:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17905:88:9"
																},
																"nativeSrc": "17905:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17905:93:9"
															},
															"nativeSrc": "17905:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17905:93:9"
														},
														{
															"nativeSrc": "18007:19:9",
															"nodeType": "YulAssignment",
															"src": "18007:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18018:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18018:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18023:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18023:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18014:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18014:3:9"
																},
																"nativeSrc": "18014:12:9",
																"nodeType": "YulFunctionCall",
																"src": "18014:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18007:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18007:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17666:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17800:3:9",
														"nodeType": "YulTypedName",
														"src": "17800:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17808:3:9",
														"nodeType": "YulTypedName",
														"src": "17808:3:9",
														"type": ""
													}
												],
												"src": "17666:366:9"
											},
											{
												"body": {
													"nativeSrc": "18209:248:9",
													"nodeType": "YulBlock",
													"src": "18209:248:9",
													"statements": [
														{
															"nativeSrc": "18219:26:9",
															"nodeType": "YulAssignment",
															"src": "18219:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18231:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18231:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18242:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18242:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18227:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18227:3:9"
																},
																"nativeSrc": "18227:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18227:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18219:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18219:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18266:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18266:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18277:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18277:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18262:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18262:3:9"
																		},
																		"nativeSrc": "18262:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18262:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18285:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18285:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18291:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18291:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18281:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18281:3:9"
																		},
																		"nativeSrc": "18281:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18281:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18255:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18255:6:9"
																},
																"nativeSrc": "18255:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18255:47:9"
															},
															"nativeSrc": "18255:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "18255:47:9"
														},
														{
															"nativeSrc": "18311:139:9",
															"nodeType": "YulAssignment",
															"src": "18311:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18445:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18445:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18319:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "18319:124:9"
																},
																"nativeSrc": "18319:131:9",
																"nodeType": "YulFunctionCall",
																"src": "18319:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18311:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18311:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18038:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18189:9:9",
														"nodeType": "YulTypedName",
														"src": "18189:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18204:4:9",
														"nodeType": "YulTypedName",
														"src": "18204:4:9",
														"type": ""
													}
												],
												"src": "18038:419:9"
											},
											{
												"body": {
													"nativeSrc": "18526:80:9",
													"nodeType": "YulBlock",
													"src": "18526:80:9",
													"statements": [
														{
															"nativeSrc": "18536:22:9",
															"nodeType": "YulAssignment",
															"src": "18536:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18551:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18551:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18545:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "18545:5:9"
																},
																"nativeSrc": "18545:13:9",
																"nodeType": "YulFunctionCall",
																"src": "18545:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18536:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "18536:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18594:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "18594:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "18567:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "18567:26:9"
																},
																"nativeSrc": "18567:33:9",
																"nodeType": "YulFunctionCall",
																"src": "18567:33:9"
															},
															"nativeSrc": "18567:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "18567:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "18463:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18504:6:9",
														"nodeType": "YulTypedName",
														"src": "18504:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18512:3:9",
														"nodeType": "YulTypedName",
														"src": "18512:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18520:5:9",
														"nodeType": "YulTypedName",
														"src": "18520:5:9",
														"type": ""
													}
												],
												"src": "18463:143:9"
											},
											{
												"body": {
													"nativeSrc": "18689:274:9",
													"nodeType": "YulBlock",
													"src": "18689:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "18735:83:9",
																"nodeType": "YulBlock",
																"src": "18735:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18737:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "18737:77:9"
																			},
																			"nativeSrc": "18737:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "18737:79:9"
																		},
																		"nativeSrc": "18737:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "18737:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18710:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "18710:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18719:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18719:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18706:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18706:3:9"
																		},
																		"nativeSrc": "18706:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18706:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18731:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18731:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18702:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18702:3:9"
																},
																"nativeSrc": "18702:32:9",
																"nodeType": "YulFunctionCall",
																"src": "18702:32:9"
															},
															"nativeSrc": "18699:119:9",
															"nodeType": "YulIf",
															"src": "18699:119:9"
														},
														{
															"nativeSrc": "18828:128:9",
															"nodeType": "YulBlock",
															"src": "18828:128:9",
															"statements": [
																{
																	"nativeSrc": "18843:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18843:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18857:1:9",
																		"nodeType": "YulLiteral",
																		"src": "18857:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18847:6:9",
																			"nodeType": "YulTypedName",
																			"src": "18847:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18872:74:9",
																	"nodeType": "YulAssignment",
																	"src": "18872:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18918:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "18918:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18929:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "18929:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18914:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "18914:3:9"
																				},
																				"nativeSrc": "18914:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18914:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18938:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "18938:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "18882:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "18882:31:9"
																		},
																		"nativeSrc": "18882:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18882:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18872:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "18872:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "18612:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18659:9:9",
														"nodeType": "YulTypedName",
														"src": "18659:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18670:7:9",
														"nodeType": "YulTypedName",
														"src": "18670:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18682:6:9",
														"nodeType": "YulTypedName",
														"src": "18682:6:9",
														"type": ""
													}
												],
												"src": "18612:351:9"
											},
											{
												"body": {
													"nativeSrc": "19095:206:9",
													"nodeType": "YulBlock",
													"src": "19095:206:9",
													"statements": [
														{
															"nativeSrc": "19105:26:9",
															"nodeType": "YulAssignment",
															"src": "19105:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19117:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "19117:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19128:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19128:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19113:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19113:3:9"
																},
																"nativeSrc": "19113:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19113:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19105:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19105:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19185:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "19185:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19198:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19198:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19209:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19209:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19194:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19194:3:9"
																		},
																		"nativeSrc": "19194:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19194:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19141:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "19141:43:9"
																},
																"nativeSrc": "19141:71:9",
																"nodeType": "YulFunctionCall",
																"src": "19141:71:9"
															},
															"nativeSrc": "19141:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "19141:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19266:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "19266:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19279:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19279:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19290:2:9",
																				"nodeType": "YulLiteral",
																				"src": "19290:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19275:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19275:3:9"
																		},
																		"nativeSrc": "19275:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19275:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19222:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "19222:43:9"
																},
																"nativeSrc": "19222:72:9",
																"nodeType": "YulFunctionCall",
																"src": "19222:72:9"
															},
															"nativeSrc": "19222:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "19222:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18969:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19059:9:9",
														"nodeType": "YulTypedName",
														"src": "19059:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19071:6:9",
														"nodeType": "YulTypedName",
														"src": "19071:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19079:6:9",
														"nodeType": "YulTypedName",
														"src": "19079:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19090:4:9",
														"nodeType": "YulTypedName",
														"src": "19090:4:9",
														"type": ""
													}
												],
												"src": "18969:332:9"
											},
											{
												"body": {
													"nativeSrc": "19367:77:9",
													"nodeType": "YulBlock",
													"src": "19367:77:9",
													"statements": [
														{
															"nativeSrc": "19377:22:9",
															"nodeType": "YulAssignment",
															"src": "19377:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19392:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "19392:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19386:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "19386:5:9"
																},
																"nativeSrc": "19386:13:9",
																"nodeType": "YulFunctionCall",
																"src": "19386:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19377:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "19377:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19432:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "19432:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "19408:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "19408:23:9"
																},
																"nativeSrc": "19408:30:9",
																"nodeType": "YulFunctionCall",
																"src": "19408:30:9"
															},
															"nativeSrc": "19408:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "19408:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "19307:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19345:6:9",
														"nodeType": "YulTypedName",
														"src": "19345:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19353:3:9",
														"nodeType": "YulTypedName",
														"src": "19353:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19361:5:9",
														"nodeType": "YulTypedName",
														"src": "19361:5:9",
														"type": ""
													}
												],
												"src": "19307:137:9"
											},
											{
												"body": {
													"nativeSrc": "19524:271:9",
													"nodeType": "YulBlock",
													"src": "19524:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "19570:83:9",
																"nodeType": "YulBlock",
																"src": "19570:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19572:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "19572:77:9"
																			},
																			"nativeSrc": "19572:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "19572:79:9"
																		},
																		"nativeSrc": "19572:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "19572:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19545:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "19545:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19554:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19554:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19541:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19541:3:9"
																		},
																		"nativeSrc": "19541:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19541:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19566:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19566:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19537:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19537:3:9"
																},
																"nativeSrc": "19537:32:9",
																"nodeType": "YulFunctionCall",
																"src": "19537:32:9"
															},
															"nativeSrc": "19534:119:9",
															"nodeType": "YulIf",
															"src": "19534:119:9"
														},
														{
															"nativeSrc": "19663:125:9",
															"nodeType": "YulBlock",
															"src": "19663:125:9",
															"statements": [
																{
																	"nativeSrc": "19678:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19678:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19692:1:9",
																		"nodeType": "YulLiteral",
																		"src": "19692:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19682:6:9",
																			"nodeType": "YulTypedName",
																			"src": "19682:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19707:71:9",
																	"nodeType": "YulAssignment",
																	"src": "19707:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19750:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "19750:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19761:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "19761:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19746:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19746:3:9"
																				},
																				"nativeSrc": "19746:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19746:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19770:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "19770:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "19717:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "19717:28:9"
																		},
																		"nativeSrc": "19717:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19717:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19707:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "19707:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "19450:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19494:9:9",
														"nodeType": "YulTypedName",
														"src": "19494:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19505:7:9",
														"nodeType": "YulTypedName",
														"src": "19505:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19517:6:9",
														"nodeType": "YulTypedName",
														"src": "19517:6:9",
														"type": ""
													}
												],
												"src": "19450:345:9"
											},
											{
												"body": {
													"nativeSrc": "19829:152:9",
													"nodeType": "YulBlock",
													"src": "19829:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19846:1:9",
																		"nodeType": "YulLiteral",
																		"src": "19846:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19849:77:9",
																		"nodeType": "YulLiteral",
																		"src": "19849:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19839:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19839:6:9"
																},
																"nativeSrc": "19839:88:9",
																"nodeType": "YulFunctionCall",
																"src": "19839:88:9"
															},
															"nativeSrc": "19839:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "19839:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19943:1:9",
																		"nodeType": "YulLiteral",
																		"src": "19943:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19946:4:9",
																		"nodeType": "YulLiteral",
																		"src": "19946:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19936:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19936:6:9"
																},
																"nativeSrc": "19936:15:9",
																"nodeType": "YulFunctionCall",
																"src": "19936:15:9"
															},
															"nativeSrc": "19936:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "19936:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19967:1:9",
																		"nodeType": "YulLiteral",
																		"src": "19967:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19970:4:9",
																		"nodeType": "YulLiteral",
																		"src": "19970:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19960:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19960:6:9"
																},
																"nativeSrc": "19960:15:9",
																"nodeType": "YulFunctionCall",
																"src": "19960:15:9"
															},
															"nativeSrc": "19960:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "19960:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "19801:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "19801:180:9"
											},
											{
												"body": {
													"nativeSrc": "20031:147:9",
													"nodeType": "YulBlock",
													"src": "20031:147:9",
													"statements": [
														{
															"nativeSrc": "20041:25:9",
															"nodeType": "YulAssignment",
															"src": "20041:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20064:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "20064:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20046:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "20046:17:9"
																},
																"nativeSrc": "20046:20:9",
																"nodeType": "YulFunctionCall",
																"src": "20046:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20041:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "20041:1:9"
																}
															]
														},
														{
															"nativeSrc": "20075:25:9",
															"nodeType": "YulAssignment",
															"src": "20075:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20098:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "20098:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20080:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "20080:17:9"
																},
																"nativeSrc": "20080:20:9",
																"nodeType": "YulFunctionCall",
																"src": "20080:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20075:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "20075:1:9"
																}
															]
														},
														{
															"nativeSrc": "20109:16:9",
															"nodeType": "YulAssignment",
															"src": "20109:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20120:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "20120:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20123:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "20123:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20116:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20116:3:9"
																},
																"nativeSrc": "20116:9:9",
																"nodeType": "YulFunctionCall",
																"src": "20116:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "20109:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20109:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20149:22:9",
																"nodeType": "YulBlock",
																"src": "20149:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20151:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "20151:16:9"
																			},
																			"nativeSrc": "20151:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "20151:18:9"
																		},
																		"nativeSrc": "20151:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "20151:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20141:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "20141:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "20144:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20144:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20138:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "20138:2:9"
																},
																"nativeSrc": "20138:10:9",
																"nodeType": "YulFunctionCall",
																"src": "20138:10:9"
															},
															"nativeSrc": "20135:36:9",
															"nodeType": "YulIf",
															"src": "20135:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "19987:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20018:1:9",
														"nodeType": "YulTypedName",
														"src": "20018:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20021:1:9",
														"nodeType": "YulTypedName",
														"src": "20021:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "20027:3:9",
														"nodeType": "YulTypedName",
														"src": "20027:3:9",
														"type": ""
													}
												],
												"src": "19987:191:9"
											},
											{
												"body": {
													"nativeSrc": "20290:75:9",
													"nodeType": "YulBlock",
													"src": "20290:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20312:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20312:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20320:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20320:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20308:3:9"
																		},
																		"nativeSrc": "20308:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20308:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "20324:33:9",
																		"nodeType": "YulLiteral",
																		"src": "20324:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20301:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20301:6:9"
																},
																"nativeSrc": "20301:57:9",
																"nodeType": "YulFunctionCall",
																"src": "20301:57:9"
															},
															"nativeSrc": "20301:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "20301:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "20184:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20282:6:9",
														"nodeType": "YulTypedName",
														"src": "20282:6:9",
														"type": ""
													}
												],
												"src": "20184:181:9"
											},
											{
												"body": {
													"nativeSrc": "20517:220:9",
													"nodeType": "YulBlock",
													"src": "20517:220:9",
													"statements": [
														{
															"nativeSrc": "20527:74:9",
															"nodeType": "YulAssignment",
															"src": "20527:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20593:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20593:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20598:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20598:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20534:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "20534:58:9"
																},
																"nativeSrc": "20534:67:9",
																"nodeType": "YulFunctionCall",
																"src": "20534:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20527:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20527:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20699:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20699:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "20610:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "20610:88:9"
																},
																"nativeSrc": "20610:93:9",
																"nodeType": "YulFunctionCall",
																"src": "20610:93:9"
															},
															"nativeSrc": "20610:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "20610:93:9"
														},
														{
															"nativeSrc": "20712:19:9",
															"nodeType": "YulAssignment",
															"src": "20712:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20723:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20723:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20728:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20728:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20719:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20719:3:9"
																},
																"nativeSrc": "20719:12:9",
																"nodeType": "YulFunctionCall",
																"src": "20719:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20712:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20712:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20371:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20505:3:9",
														"nodeType": "YulTypedName",
														"src": "20505:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20513:3:9",
														"nodeType": "YulTypedName",
														"src": "20513:3:9",
														"type": ""
													}
												],
												"src": "20371:366:9"
											},
											{
												"body": {
													"nativeSrc": "20914:248:9",
													"nodeType": "YulBlock",
													"src": "20914:248:9",
													"statements": [
														{
															"nativeSrc": "20924:26:9",
															"nodeType": "YulAssignment",
															"src": "20924:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20936:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20936:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20947:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20947:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20932:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20932:3:9"
																},
																"nativeSrc": "20932:18:9",
																"nodeType": "YulFunctionCall",
																"src": "20932:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20924:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20924:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20971:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20971:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20982:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20982:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20967:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20967:3:9"
																		},
																		"nativeSrc": "20967:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20967:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20990:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "20990:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20996:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20996:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20986:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20986:3:9"
																		},
																		"nativeSrc": "20986:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20986:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20960:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20960:6:9"
																},
																"nativeSrc": "20960:47:9",
																"nodeType": "YulFunctionCall",
																"src": "20960:47:9"
															},
															"nativeSrc": "20960:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "20960:47:9"
														},
														{
															"nativeSrc": "21016:139:9",
															"nodeType": "YulAssignment",
															"src": "21016:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21150:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21150:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21024:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "21024:124:9"
																},
																"nativeSrc": "21024:131:9",
																"nodeType": "YulFunctionCall",
																"src": "21024:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21016:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21016:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20743:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20894:9:9",
														"nodeType": "YulTypedName",
														"src": "20894:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20909:4:9",
														"nodeType": "YulTypedName",
														"src": "20909:4:9",
														"type": ""
													}
												],
												"src": "20743:419:9"
											},
											{
												"body": {
													"nativeSrc": "21322:288:9",
													"nodeType": "YulBlock",
													"src": "21322:288:9",
													"statements": [
														{
															"nativeSrc": "21332:26:9",
															"nodeType": "YulAssignment",
															"src": "21332:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21344:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "21344:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21355:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21355:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21340:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21340:3:9"
																},
																"nativeSrc": "21340:18:9",
																"nodeType": "YulFunctionCall",
																"src": "21340:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21332:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21332:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21412:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "21412:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21425:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21425:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21436:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21436:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21421:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21421:3:9"
																		},
																		"nativeSrc": "21421:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21421:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21368:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "21368:43:9"
																},
																"nativeSrc": "21368:71:9",
																"nodeType": "YulFunctionCall",
																"src": "21368:71:9"
															},
															"nativeSrc": "21368:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "21368:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21493:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "21493:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21506:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21506:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21517:2:9",
																				"nodeType": "YulLiteral",
																				"src": "21517:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21502:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21502:3:9"
																		},
																		"nativeSrc": "21502:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21502:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21449:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "21449:43:9"
																},
																"nativeSrc": "21449:72:9",
																"nodeType": "YulFunctionCall",
																"src": "21449:72:9"
															},
															"nativeSrc": "21449:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "21449:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21575:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "21575:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21588:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21588:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21599:2:9",
																				"nodeType": "YulLiteral",
																				"src": "21599:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21584:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21584:3:9"
																		},
																		"nativeSrc": "21584:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21584:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21531:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "21531:43:9"
																},
																"nativeSrc": "21531:72:9",
																"nodeType": "YulFunctionCall",
																"src": "21531:72:9"
															},
															"nativeSrc": "21531:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "21531:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "21168:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21278:9:9",
														"nodeType": "YulTypedName",
														"src": "21278:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21290:6:9",
														"nodeType": "YulTypedName",
														"src": "21290:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21298:6:9",
														"nodeType": "YulTypedName",
														"src": "21298:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21306:6:9",
														"nodeType": "YulTypedName",
														"src": "21306:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21317:4:9",
														"nodeType": "YulTypedName",
														"src": "21317:4:9",
														"type": ""
													}
												],
												"src": "21168:442:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trading not enabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer exceeds max amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cooldown active\")\n\n    }\n\n    function abi_encode_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374(memPtr) {\n\n        mstore(add(memPtr, 0), \"Hold time not met\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds max wallet amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid recipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw token itself\")\n\n    }\n\n    function abi_encode_t_stringliteral_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101d8575f3560e01c8063611274c5116101025780639155e083116100a0578063aa4bde281161006f578063aa4bde2814610544578063dd62ed3e14610562578063f2fde38b14610592578063fe575a87146105ae576101d8565b80639155e083146104bc57806395d89b41146104d8578063a9059cbb146104f6578063a9e7572314610526576101d8565b806370a08231116100dc57806370a0823114610448578063715018a6146104785780638da5cb5b146104825780638f70ccf7146104a0576101d8565b8063611274c5146103f257806368f162931461040e5780636ff1c9bc1461042c576101d8565b806323b872dd1161017a578063330671ad11610149578063330671ad1461036a5780633af32abf146103885780634ada218b146103b85780636072e6a8146103d6576101d8565b806323b872dd146102ce578063283af019146102fe578063313ce5671461032e57806332cb6b0c1461034c576101d8565b80630d2d8a31116101b65780630d2d8a31146102465780630d392cd914610276578063158ef93e1461029257806318160ddd146102b0576101d8565b806302cd093d146101dc57806306fdde03146101f8578063095ea7b314610216575b5f5ffd5b6101f660048036038101906101f1919061223f565b6105de565b005b610200610645565b60405161020d9190612313565b60405180910390f35b610230600480360381019061022b919061238d565b6106d5565b60405161023d91906123e5565b60405180910390f35b610260600480360381019061025b91906123fe565b6106f7565b60405161026d9190612438565b60405180910390f35b610290600480360381019061028b919061247b565b61070c565b005b61029a6107ba565b6040516102a791906123e5565b60405180910390f35b6102b86107cc565b6040516102c59190612438565b60405180910390f35b6102e860048036038101906102e391906124b9565b6107d5565b6040516102f591906123e5565b60405180910390f35b610318600480360381019061031391906123fe565b610d79565b6040516103259190612438565b60405180910390f35b610336610d8e565b6040516103439190612524565b60405180910390f35b610354610d96565b6040516103619190612438565b60405180910390f35b610372610da6565b60405161037f9190612438565b60405180910390f35b6103a2600480360381019061039d91906123fe565b610dac565b6040516103af91906123e5565b60405180910390f35b6103c0610dc9565b6040516103cd91906123e5565b60405180910390f35b6103f060048036038101906103eb919061259e565b610ddb565b005b61040c6004803603810190610407919061259e565b610ef6565b005b610416611011565b6040516104239190612438565b60405180910390f35b610446600480360381019061044191906123fe565b611017565b005b610462600480360381019061045d91906123fe565b61118f565b60405161046f9190612438565b60405180910390f35b6104806111d4565b005b61048a6111e7565b604051610497919061260a565b60405180910390f35b6104ba60048036038101906104b59190612623565b61120f565b005b6104d660048036038101906104d1919061247b565b61126a565b005b6104e0611318565b6040516104ed9190612313565b60405180910390f35b610510600480360381019061050b919061238d565b6113a8565b60405161051d91906123e5565b60405180910390f35b61052e61194a565b60405161053b9190612438565b60405180910390f35b61054c611950565b6040516105599190612438565b60405180910390f35b61057c6004803603810190610577919061264e565b611956565b6040516105899190612438565b60405180910390f35b6105ac60048036038101906105a791906123fe565b6119d8565b005b6105c860048036038101906105c391906123fe565b611a5c565b6040516105d591906123e5565b60405180910390f35b6105e6611a79565b8360088190555082600a8190555081600981905550806010819055507fbb5d5c94dff5adb0bc0e043a6c2cf9bb8153231069831102f0e8e53b89924f1f84848484604051610637949392919061268c565b60405180910390a150505050565b606060038054610654906126fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610680906126fc565b80156106cb5780601f106106a2576101008083540402835291602001916106cb565b820191905f5260205f20905b8154815290600101906020018083116106ae57829003601f168201915b5050505050905090565b5f5f6106df611b00565b90506106ec818585611b07565b600191505092915050565b600c602052805f5260405f205f915090505481565b610714611a79565b80600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d826040516107ae91906123e5565b60405180910390a25050565b60075f9054906101000a900460ff1681565b5f600254905090565b5f838383600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156108775750600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b6108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90612776565b60405180910390fd5b600b5f9054906101000a900460ff16806109165750600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b806109675750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b6109a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099d906127de565b60405180910390fd5b600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015610a445750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15610c6057600854811115610a8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8590612846565b60405180910390fd5b610ae0601054600c5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611b1990919063ffffffff16565b421015610b22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b19906128ae565b60405180910390fd5b5f600d5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414610bfb57610bb8600954600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611b1990919063ffffffff16565b421015610bfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf190612916565b60405180910390fd5b5b5f610c1782610c098561118f565b611b1990919063ffffffff16565b9050600a54811115610c5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c559061297e565b60405180910390fd5b505b610c68611b2e565b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd906129e6565b60405180910390fd5b42600d5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600c5f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610d65878787611b7d565b9350610d6f611bab565b5050509392505050565b600d602052805f5260405f205f915090505481565b5f6012905090565b6b204fce5e3e2502611000000081565b60095481565b600f602052805f5260405f205f915054906101000a900460ff1681565b600b5f9054906101000a900460ff1681565b610de3611a79565b5f5f90505b83839050811015610ef05781600e5f868685818110610e0a57610e09612a04565b5b9050602002016020810190610e1f91906123fe565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550838382818110610e8157610e80612a04565b5b9050602002016020810190610e9691906123fe565b73ffffffffffffffffffffffffffffffffffffffff167f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac83604051610edb91906123e5565b60405180910390a28080600101915050610de8565b50505050565b610efe611a79565b5f5f90505b8383905081101561100b5781600f5f868685818110610f2557610f24612a04565b5b9050602002016020810190610f3a91906123fe565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550838382818110610f9c57610f9b612a04565b5b9050602002016020810190610fb191906123fe565b73ffffffffffffffffffffffffffffffffffffffff167ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d83604051610ff691906123e5565b60405180910390a28080600101915050610f03565b50505050565b60105481565b61101f611a79565b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361108d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108490612a7b565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110c7919061260a565b602060405180830381865afa1580156110e2573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111069190612aad565b90508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61112c6111e7565b836040518363ffffffff1660e01b815260040161114a929190612ad8565b6020604051808303815f875af1158015611166573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061118a9190612b13565b505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6111dc611a79565b6111e55f611bb5565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611217611a79565b80600b5f6101000a81548160ff0219169083151502179055507fbeda7dca7bc1b3e80b871f4818129ec73b771581f803d553aeb3484098e5f65a8160405161125f91906123e5565b60405180910390a150565b611272611a79565b80600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac8260405161130c91906123e5565b60405180910390a25050565b606060048054611327906126fc565b80601f0160208091040260200160405190810160405280929190818152602001828054611353906126fc565b801561139e5780601f106113755761010080835404028352916020019161139e565b820191905f5260205f20905b81548152906001019060200180831161138157829003601f168201915b5050505050905090565b5f338383600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615801561144a5750600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b611489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148090612776565b60405180910390fd5b600b5f9054906101000a900460ff16806114e95750600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b8061153a5750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b611579576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611570906127de565b60405180910390fd5b600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156116175750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b1561183357600854811115611661576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165890612846565b60405180910390fd5b6116b3601054600c5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611b1990919063ffffffff16565b4210156116f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ec906128ae565b60405180910390fd5b5f600d5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146117ce5761178b600954600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611b1990919063ffffffff16565b4210156117cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c490612916565b60405180910390fd5b5b5f6117ea826117dc8561118f565b611b1990919063ffffffff16565b9050600a54811115611831576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118289061297e565b60405180910390fd5b505b61183b611b2e565b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036118a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a0906129e6565b60405180910390fd5b42600d5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506119378686611c78565b9350611941611bab565b50505092915050565b60085481565b600a5481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6119e0611a79565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a50575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611a47919061260a565b60405180910390fd5b611a5981611bb5565b50565b600e602052805f5260405f205f915054906101000a900460ff1681565b611a81611b00565b73ffffffffffffffffffffffffffffffffffffffff16611a9f6111e7565b73ffffffffffffffffffffffffffffffffffffffff1614611afe57611ac2611b00565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611af5919061260a565b60405180910390fd5b565b5f33905090565b611b148383836001611c9a565b505050565b5f8183611b269190612b6b565b905092915050565b600260065403611b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6a90612be8565b60405180910390fd5b6002600681905550565b5f5f611b87611b00565b9050611b94858285611e69565b611b9f858585611efb565b60019150509392505050565b6001600681905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f611c82611b00565b9050611c8f818585611efb565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611d0a575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611d01919061260a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d7a575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611d71919061260a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611e63578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611e5a9190612438565b60405180910390a35b50505050565b5f611e748484611956565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611ef55781811015611ee6578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611edd93929190612c06565b60405180910390fd5b611ef484848484035f611c9a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f6b575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611f62919061260a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611fdb575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611fd2919061260a565b60405180910390fd5b611fe6838383611feb565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361203b578060025f82825461202f9190612b6b565b92505081905550612109565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156120c4578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016120bb93929190612c06565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612150578060025f828254039250508190555061219a565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516121f79190612438565b60405180910390a3505050565b5f5ffd5b5f5ffd5b5f819050919050565b61221e8161220c565b8114612228575f5ffd5b50565b5f8135905061223981612215565b92915050565b5f5f5f5f6080858703121561225757612256612204565b5b5f6122648782880161222b565b94505060206122758782880161222b565b93505060406122868782880161222b565b92505060606122978782880161222b565b91505092959194509250565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6122e5826122a3565b6122ef81856122ad565b93506122ff8185602086016122bd565b612308816122cb565b840191505092915050565b5f6020820190508181035f83015261232b81846122db565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61235c82612333565b9050919050565b61236c81612352565b8114612376575f5ffd5b50565b5f8135905061238781612363565b92915050565b5f5f604083850312156123a3576123a2612204565b5b5f6123b085828601612379565b92505060206123c18582860161222b565b9150509250929050565b5f8115159050919050565b6123df816123cb565b82525050565b5f6020820190506123f85f8301846123d6565b92915050565b5f6020828403121561241357612412612204565b5b5f61242084828501612379565b91505092915050565b6124328161220c565b82525050565b5f60208201905061244b5f830184612429565b92915050565b61245a816123cb565b8114612464575f5ffd5b50565b5f8135905061247581612451565b92915050565b5f5f6040838503121561249157612490612204565b5b5f61249e85828601612379565b92505060206124af85828601612467565b9150509250929050565b5f5f5f606084860312156124d0576124cf612204565b5b5f6124dd86828701612379565b93505060206124ee86828701612379565b92505060406124ff8682870161222b565b9150509250925092565b5f60ff82169050919050565b61251e81612509565b82525050565b5f6020820190506125375f830184612515565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261255e5761255d61253d565b5b8235905067ffffffffffffffff81111561257b5761257a612541565b5b60208301915083602082028301111561259757612596612545565b5b9250929050565b5f5f5f604084860312156125b5576125b4612204565b5b5f84013567ffffffffffffffff8111156125d2576125d1612208565b5b6125de86828701612549565b935093505060206125f186828701612467565b9150509250925092565b61260481612352565b82525050565b5f60208201905061261d5f8301846125fb565b92915050565b5f6020828403121561263857612637612204565b5b5f61264584828501612467565b91505092915050565b5f5f6040838503121561266457612663612204565b5b5f61267185828601612379565b925050602061268285828601612379565b9150509250929050565b5f60808201905061269f5f830187612429565b6126ac6020830186612429565b6126b96040830185612429565b6126c66060830184612429565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061271357607f821691505b602082108103612726576127256126cf565b5b50919050565b7f4164647265737320697320626c61636b6c6973746564000000000000000000005f82015250565b5f6127606016836122ad565b915061276b8261272c565b602082019050919050565b5f6020820190508181035f83015261278d81612754565b9050919050565b7f54726164696e67206e6f7420656e61626c6564000000000000000000000000005f82015250565b5f6127c86013836122ad565b91506127d382612794565b602082019050919050565b5f6020820190508181035f8301526127f5816127bc565b9050919050565b7f5472616e736665722065786365656473206d617820616d6f756e7400000000005f82015250565b5f612830601b836122ad565b915061283b826127fc565b602082019050919050565b5f6020820190508181035f83015261285d81612824565b9050919050565b7f436f6f6c646f776e2061637469766500000000000000000000000000000000005f82015250565b5f612898600f836122ad565b91506128a382612864565b602082019050919050565b5f6020820190508181035f8301526128c58161288c565b9050919050565b7f486f6c642074696d65206e6f74206d65740000000000000000000000000000005f82015250565b5f6129006011836122ad565b915061290b826128cc565b602082019050919050565b5f6020820190508181035f83015261292d816128f4565b9050919050565b7f45786365656473206d61782077616c6c657420616d6f756e74000000000000005f82015250565b5f6129686019836122ad565b915061297382612934565b602082019050919050565b5f6020820190508181035f8301526129958161295c565b9050919050565b7f496e76616c696420726563697069656e740000000000000000000000000000005f82015250565b5f6129d06011836122ad565b91506129db8261299c565b602082019050919050565b5f6020820190508181035f8301526129fd816129c4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f43616e6e6f7420776974686472617720746f6b656e20697473656c66000000005f82015250565b5f612a65601c836122ad565b9150612a7082612a31565b602082019050919050565b5f6020820190508181035f830152612a9281612a59565b9050919050565b5f81519050612aa781612215565b92915050565b5f60208284031215612ac257612ac1612204565b5b5f612acf84828501612a99565b91505092915050565b5f604082019050612aeb5f8301856125fb565b612af86020830184612429565b9392505050565b5f81519050612b0d81612451565b92915050565b5f60208284031215612b2857612b27612204565b5b5f612b3584828501612aff565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612b758261220c565b9150612b808361220c565b9250828201905080821115612b9857612b97612b3e565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612bd2601f836122ad565b9150612bdd82612b9e565b602082019050919050565b5f6020820190508181035f830152612bff81612bc6565b9050919050565b5f606082019050612c195f8301866125fb565b612c266020830185612429565b612c336040830184612429565b94935050505056fea2646970667358221220046c762e4feec9060ada05bb5c89f5409dfd61bcfe662247a648c69cc259d9cd64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x611274C5 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0x9155E083 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xAA4BDE28 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAA4BDE28 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x5AE JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x9155E083 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xA9E75723 EQ PUSH2 0x526 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x8F70CCF7 EQ PUSH2 0x4A0 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x611274C5 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x68F16293 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x42C JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x330671AD GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x330671AD EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x6072E6A8 EQ PUSH2 0x3D6 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x283AF019 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x34C JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xD2D8A31 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xD2D8A31 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xD392CD9 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2B0 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2CD093D EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x216 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x238D JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x2524 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x354 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C0 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x259E JUMP JUMPDEST PUSH2 0xDDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x259E JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x416 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x446 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x480 PUSH2 0x11D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48A PUSH2 0x11E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH2 0x120F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH2 0x126A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E0 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x510 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x238D JUMP JUMPDEST PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52E PUSH2 0x194A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x264E JUMP JUMPDEST PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x19D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E6 PUSH2 0x1A79 JUMP JUMPDEST DUP4 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x10 DUP2 SWAP1 SSTORE POP PUSH32 0xBB5D5C94DFF5ADB0BC0E043A6C2CF9BB8153231069831102F0E8E53B89924F1F DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x637 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x268C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x654 SWAP1 PUSH2 0x26FC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x680 SWAP1 PUSH2 0x26FC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6DF PUSH2 0x1B00 JUMP JUMPDEST SWAP1 POP PUSH2 0x6EC DUP2 DUP6 DUP6 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x714 PUSH2 0x1A79 JUMP JUMPDEST DUP1 PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D DUP3 PUSH1 0x40 MLOAD PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP4 DUP4 DUP4 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI POP PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x8B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AD SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x916 JUMPI POP PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x967 JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA44 JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xC60 JUMPI PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA85 SWAP1 PUSH2 0x2846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE0 PUSH1 0x10 SLOAD PUSH1 0xC PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1B19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB19 SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0xBFB JUMPI PUSH2 0xBB8 PUSH1 0x9 SLOAD PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1B19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xBFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF1 SWAP1 PUSH2 0x2916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 PUSH2 0xC17 DUP3 PUSH2 0xC09 DUP6 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x1B19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 GT ISZERO PUSH2 0xC5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC55 SWAP1 PUSH2 0x297E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0xC68 PUSH2 0x1B2E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP1 PUSH2 0x29E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xD PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD65 DUP8 DUP8 DUP8 PUSH2 0x1B7D JUMP JUMPDEST SWAP4 POP PUSH2 0xD6F PUSH2 0x1BAB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH12 0x204FCE5E3E25026110000000 DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xDE3 PUSH2 0x1A79 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xEF0 JUMPI DUP2 PUSH1 0xE PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xE0A JUMPI PUSH2 0xE09 PUSH2 0x2A04 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE1F SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xE81 JUMPI PUSH2 0xE80 PUSH2 0x2A04 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC DUP4 PUSH1 0x40 MLOAD PUSH2 0xEDB SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xDE8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xEFE PUSH2 0x1A79 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x100B JUMPI DUP2 PUSH1 0xF PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xF25 JUMPI PUSH2 0xF24 PUSH2 0x2A04 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0x2A04 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFB1 SWAP2 SWAP1 PUSH2 0x23FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF03 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x101F PUSH2 0x1A79 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1084 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1106 SWAP2 SWAP1 PUSH2 0x2AAD JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x112C PUSH2 0x11E7 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114A SWAP3 SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1166 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118A SWAP2 SWAP1 PUSH2 0x2B13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11DC PUSH2 0x1A79 JUMP JUMPDEST PUSH2 0x11E5 PUSH0 PUSH2 0x1BB5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1217 PUSH2 0x1A79 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xBEDA7DCA7BC1B3E80B871F4818129EC73B771581F803D553AEB3484098E5F65A DUP2 PUSH1 0x40 MLOAD PUSH2 0x125F SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1272 PUSH2 0x1A79 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC DUP3 PUSH1 0x40 MLOAD PUSH2 0x130C SWAP2 SWAP1 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1327 SWAP1 PUSH2 0x26FC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1353 SWAP1 PUSH2 0x26FC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x139E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1375 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x139E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1381 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER DUP4 DUP4 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x144A JUMPI POP PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1489 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1480 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x14E9 JUMPI POP PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x153A JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x1579 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1570 SWAP1 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1617 JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1833 JUMPI PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0x1661 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1658 SWAP1 PUSH2 0x2846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B3 PUSH1 0x10 SLOAD PUSH1 0xC PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1B19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x16F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16EC SWAP1 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x17CE JUMPI PUSH2 0x178B PUSH1 0x9 SLOAD PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1B19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x17CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C4 SWAP1 PUSH2 0x2916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 PUSH2 0x17EA DUP3 PUSH2 0x17DC DUP6 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x1B19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 GT ISZERO PUSH2 0x1831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1828 SWAP1 PUSH2 0x297E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x183B PUSH2 0x1B2E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A0 SWAP1 PUSH2 0x29E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xD PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1937 DUP7 DUP7 PUSH2 0x1C78 JUMP JUMPDEST SWAP4 POP PUSH2 0x1941 PUSH2 0x1BAB JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19E0 PUSH2 0x1A79 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A50 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A59 DUP2 PUSH2 0x1BB5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1A81 PUSH2 0x1B00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A9F PUSH2 0x11E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AFE JUMPI PUSH2 0x1AC2 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF5 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B14 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1B26 SWAP2 SWAP1 PUSH2 0x2B6B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1B73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6A SWAP1 PUSH2 0x2BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1B87 PUSH2 0x1B00 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B94 DUP6 DUP3 DUP6 PUSH2 0x1E69 JUMP JUMPDEST PUSH2 0x1B9F DUP6 DUP6 DUP6 PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1C82 PUSH2 0x1B00 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C8F DUP2 DUP6 DUP6 PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D0A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D01 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D7A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D71 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1E63 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1E5A SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E74 DUP5 DUP5 PUSH2 0x1956 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1EF5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1EE6 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EDD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EF4 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F6B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F62 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FDB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD2 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FE6 DUP4 DUP4 DUP4 PUSH2 0x1FEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x203B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x202F SWAP2 SWAP1 PUSH2 0x2B6B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2109 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x20C4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2150 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x219A JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x21F7 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x221E DUP2 PUSH2 0x220C JUMP JUMPDEST DUP2 EQ PUSH2 0x2228 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2239 DUP2 PUSH2 0x2215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2264 DUP8 DUP3 DUP9 ADD PUSH2 0x222B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2275 DUP8 DUP3 DUP9 ADD PUSH2 0x222B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2286 DUP8 DUP3 DUP9 ADD PUSH2 0x222B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2297 DUP8 DUP3 DUP9 ADD PUSH2 0x222B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22E5 DUP3 PUSH2 0x22A3 JUMP JUMPDEST PUSH2 0x22EF DUP2 DUP6 PUSH2 0x22AD JUMP JUMPDEST SWAP4 POP PUSH2 0x22FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x2308 DUP2 PUSH2 0x22CB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x232B DUP2 DUP5 PUSH2 0x22DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x235C DUP3 PUSH2 0x2333 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236C DUP2 PUSH2 0x2352 JUMP JUMPDEST DUP2 EQ PUSH2 0x2376 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2387 DUP2 PUSH2 0x2363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23A3 JUMPI PUSH2 0x23A2 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23B0 DUP6 DUP3 DUP7 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23C1 DUP6 DUP3 DUP7 ADD PUSH2 0x222B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23DF DUP2 PUSH2 0x23CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x23D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2413 JUMPI PUSH2 0x2412 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2420 DUP5 DUP3 DUP6 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2432 DUP2 PUSH2 0x220C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x244B PUSH0 DUP4 ADD DUP5 PUSH2 0x2429 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x245A DUP2 PUSH2 0x23CB JUMP JUMPDEST DUP2 EQ PUSH2 0x2464 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2475 DUP2 PUSH2 0x2451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2491 JUMPI PUSH2 0x2490 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x249E DUP6 DUP3 DUP7 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24AF DUP6 DUP3 DUP7 ADD PUSH2 0x2467 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24D0 JUMPI PUSH2 0x24CF PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24DD DUP7 DUP3 DUP8 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x24EE DUP7 DUP3 DUP8 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x24FF DUP7 DUP3 DUP8 ADD PUSH2 0x222B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x251E DUP2 PUSH2 0x2509 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2537 PUSH0 DUP4 ADD DUP5 PUSH2 0x2515 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x255E JUMPI PUSH2 0x255D PUSH2 0x253D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x257B JUMPI PUSH2 0x257A PUSH2 0x2541 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2597 JUMPI PUSH2 0x2596 PUSH2 0x2545 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25B5 JUMPI PUSH2 0x25B4 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25D2 JUMPI PUSH2 0x25D1 PUSH2 0x2208 JUMP JUMPDEST JUMPDEST PUSH2 0x25DE DUP7 DUP3 DUP8 ADD PUSH2 0x2549 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x25F1 DUP7 DUP3 DUP8 ADD PUSH2 0x2467 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2604 DUP2 PUSH2 0x2352 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x261D PUSH0 DUP4 ADD DUP5 PUSH2 0x25FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2638 JUMPI PUSH2 0x2637 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2645 DUP5 DUP3 DUP6 ADD PUSH2 0x2467 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2664 JUMPI PUSH2 0x2663 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2671 DUP6 DUP3 DUP7 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2682 DUP6 DUP3 DUP7 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x269F PUSH0 DUP4 ADD DUP8 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x26AC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x26B9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x26C6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2429 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2713 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2726 JUMPI PUSH2 0x2725 PUSH2 0x26CF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320697320626C61636B6C697374656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2760 PUSH1 0x16 DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x276B DUP3 PUSH2 0x272C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x278D DUP2 PUSH2 0x2754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54726164696E67206E6F7420656E61626C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27C8 PUSH1 0x13 DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x27D3 DUP3 PUSH2 0x2794 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27F5 DUP2 PUSH2 0x27BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E736665722065786365656473206D617820616D6F756E740000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2830 PUSH1 0x1B DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x283B DUP3 PUSH2 0x27FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x285D DUP2 PUSH2 0x2824 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E206163746976650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2898 PUSH1 0xF DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x28A3 DUP3 PUSH2 0x2864 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28C5 DUP2 PUSH2 0x288C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x486F6C642074696D65206E6F74206D6574000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2900 PUSH1 0x11 DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x290B DUP3 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x292D DUP2 PUSH2 0x28F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D61782077616C6C657420616D6F756E7400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2968 PUSH1 0x19 DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2973 DUP3 PUSH2 0x2934 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2995 DUP2 PUSH2 0x295C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29D0 PUSH1 0x11 DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x29DB DUP3 PUSH2 0x299C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29FD DUP2 PUSH2 0x29C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x43616E6E6F7420776974686472617720746F6B656E20697473656C6600000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A65 PUSH1 0x1C DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2A70 DUP3 PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A92 DUP2 PUSH2 0x2A59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AA7 DUP2 PUSH2 0x2215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AC2 JUMPI PUSH2 0x2AC1 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2ACF DUP5 DUP3 DUP6 ADD PUSH2 0x2A99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2AEB PUSH0 DUP4 ADD DUP6 PUSH2 0x25FB JUMP JUMPDEST PUSH2 0x2AF8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2429 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B0D DUP2 PUSH2 0x2451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B28 JUMPI PUSH2 0x2B27 PUSH2 0x2204 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B35 DUP5 DUP3 DUP6 ADD PUSH2 0x2AFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2B75 DUP3 PUSH2 0x220C JUMP JUMPDEST SWAP2 POP PUSH2 0x2B80 DUP4 PUSH2 0x220C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B98 JUMPI PUSH2 0x2B97 PUSH2 0x2B3E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BD2 PUSH1 0x1F DUP4 PUSH2 0x22AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDD DUP3 PUSH2 0x2B9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BFF DUP2 PUSH2 0x2BC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C19 PUSH0 DUP4 ADD DUP7 PUSH2 0x25FB JUMP JUMPDEST PUSH2 0x2C26 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x2C33 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2429 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV PUSH13 0x762E4FEEC9060ADA05BB5C89F5 BLOCKHASH SWAP14 REVERT PUSH2 0xBCFE PUSH7 0x2247A648C69CC2 MSIZE 0xD9 0xCD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "297:5970:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4870:493;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;820:51:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4689:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;480:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:414:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;878:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;413:60:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;599:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1052:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;756:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5710:273;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5991;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1132:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5399:259;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4362:138:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4508:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3490:404:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;510:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;681:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;972:45:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4870:493;1531:13:0;:11;:13::i;:::-;5073:12:8::1;5053:17;:32;;;;5114:10;5096:15;:28;;;;5149:9;5135:11;:23;;;;5188:9;5169:16;:28;;;;5223:132;5259:12;5286:10;5311:9;5335;5223:132;;;;;;;;;:::i;:::-;;;;;;;;4870:493:::0;;;;:::o;1779:89:3:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;820:51:8:-;;;;;;;;;;;;;;;;;:::o;4689:173::-;1531:13:0;:11;:13::i;:::-;4799:6:8::1;4774:13;:22;4788:7;4774:22;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;4838:7;4821:33;;;4847:6;4821:33;;;;;;:::i;:::-;;;;;;;;4689:173:::0;;:::o;480:23::-;;;;;;;;;;;;;:::o;2849:97:3:-;2901:7;2927:12;;2920:19;;2849:97;:::o;3902:414:8:-;4086:4;4028;4034:2;4038:6;2550:13;:19;2564:4;2550:19;;;;;;;;;;;;;;;;;;;;;;;;;2549:20;:42;;;;;2574:13;:17;2588:2;2574:17;;;;;;;;;;;;;;;;;;;;;;;;;2573:18;2549:42;2541:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2637:14;;;;;;;;;;;:37;;;;2655:13;:19;2669:4;2655:19;;;;;;;;;;;;;;;;;;;;;;;;;2637:37;:58;;;;2678:13;:17;2692:2;2678:17;;;;;;;;;;;;;;;;;;;;;;;;;2637:58;2629:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;2745:13;:19;2759:4;2745:19;;;;;;;;;;;;;;;;;;;;;;;;;2744:20;:42;;;;;2769:13;:17;2783:2;2769:17;;;;;;;;;;;;;;;;;;;;;;;;;2768:18;2744:42;2740:687;;;2821:17;;2811:6;:27;;2803:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2912:44;2939:16;;2912;:22;2929:4;2912:22;;;;;;;;;;;;;;;;:26;;:44;;;;:::i;:::-;2893:15;:63;;2885:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;3067:1;3041:16;:22;3058:4;3041:22;;;;;;;;;;;;;;;;:27;3037:156;;3116:39;3143:11;;3116:16;:22;3133:4;3116:22;;;;;;;;;;;;;;;;:26;;:39;;;;:::i;:::-;3097:15;:58;;3089:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;3037:156;3275:24;3302:25;3320:6;3302:13;3312:2;3302:9;:13::i;:::-;:17;;:25;;;;:::i;:::-;3275:52;;3370:15;;3350:16;:35;;3342:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2788:639;2740:687;2261:21:2::1;:19;:21::i;:::-;4130:1:8::2;4116:16;;:2;:16;;::::0;4108:46:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;4188:15;4165:16;:20;4182:2;4165:20;;;;;;;;;;;;;;;:38;;;;4239:15;4214:16;:22;4231:4;4214:22;;;;;;;;;;;;;;;:40;;;;4272:36;4291:4;4297:2;4301:6;4272:18;:36::i;:::-;4265:43;;2303:20:2::1;:18;:20::i;:::-;3902:414:8::0;;;;;;;;:::o;878:51::-;;;;;;;;;;;;;;;;;:::o;2707:82:3:-;2756:5;2780:2;2773:9;;2707:82;:::o;413:60:8:-;450:23;413:60;:::o;599:26::-;;;;:::o;1052:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;756:26::-;;;;;;;;;;;;;:::o;5710:273::-;1531:13:0;:11;:13::i;:::-;5816:9:8::1;5828:1;5816:13;;5812:164;5835:8;;:15;;5831:1;:19;5812:164;;;5901:6;5872:13;:26;5886:8;;5895:1;5886:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5872:26;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;5944:8;;5953:1;5944:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5927:37;;;5957:6;5927:37;;;;;;:::i;:::-;;;;;;;;5852:3;;;;;;;5812:164;;;;5710:273:::0;;;:::o;5991:::-;1531:13:0;:11;:13::i;:::-;6097:9:8::1;6109:1;6097:13;;6093:164;6116:8;;:15;;6112:1;:19;6093:164;;;6182:6;6153:13;:26;6167:8;;6176:1;6167:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6153:26;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;6225:8;;6234:1;6225:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6208:37;;;6238:6;6208:37;;;;;;:::i;:::-;;;;;;;;6133:3;;;;;;;6093:164;;;;5991:273:::0;;;:::o;1132:31::-;;;;:::o;5399:259::-;1531:13:0;:11;:13::i;:::-;5496:4:8::1;5479:22;;:5;:22;;::::0;5471:63:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5545:14;5569:5;5562:23;;;5594:4;5562:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5545:55;;5618:5;5611:22;;;5634:7;:5;:7::i;:::-;5643:6;5611:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5460:198;5399:259:::0;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4362:138:8:-;1531:13:0;:11;:13::i;:::-;4444:8:8::1;4427:14;;:25;;;;;;;;;;;;;;;;;;4468:24;4483:8;4468:24;;;;;;:::i;:::-;;;;;;;;4362:138:::0;:::o;4508:173::-;1531:13:0;:11;:13::i;:::-;4618:6:8::1;4593:13;:22;4607:7;4593:22;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;4657:7;4640:33;;;4666:6;4640:33;;;;;;:::i;:::-;;;;;;;;4508:173:::0;;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3490:404:8:-;3667:4;3601:10;3613:2;3617:6;2550:13;:19;2564:4;2550:19;;;;;;;;;;;;;;;;;;;;;;;;;2549:20;:42;;;;;2574:13;:17;2588:2;2574:17;;;;;;;;;;;;;;;;;;;;;;;;;2573:18;2549:42;2541:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2637:14;;;;;;;;;;;:37;;;;2655:13;:19;2669:4;2655:19;;;;;;;;;;;;;;;;;;;;;;;;;2637:37;:58;;;;2678:13;:17;2692:2;2678:17;;;;;;;;;;;;;;;;;;;;;;;;;2637:58;2629:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;2745:13;:19;2759:4;2745:19;;;;;;;;;;;;;;;;;;;;;;;;;2744:20;:42;;;;;2769:13;:17;2783:2;2769:17;;;;;;;;;;;;;;;;;;;;;;;;;2768:18;2744:42;2740:687;;;2821:17;;2811:6;:27;;2803:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2912:44;2939:16;;2912;:22;2929:4;2912:22;;;;;;;;;;;;;;;;:26;;:44;;;;:::i;:::-;2893:15;:63;;2885:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;3067:1;3041:16;:22;3058:4;3041:22;;;;;;;;;;;;;;;;:27;3037:156;;3116:39;3143:11;;3116:16;:22;3133:4;3116:22;;;;;;;;;;;;;;;;:26;;:39;;;;:::i;:::-;3097:15;:58;;3089:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;3037:156;3275:24;3302:25;3320:6;3302:13;3312:2;3302:9;:13::i;:::-;:17;;:25;;;;:::i;:::-;3275:52;;3370:15;;3350:16;:35;;3342:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2788:639;2740:687;2261:21:2::1;:19;:21::i;:::-;3712:1:8::2;3698:16;;:2;:16;;::::0;3690:46:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;3770:15;3747:16;:20;3764:2;3747:20;;;;;;;;;;;;;;;:38;;;;3827:15;3796:16;:28;3813:10;3796:28;;;;;;;;;;;;;;;:46;;;;3860:26;3875:2;3879:6;3860:14;:26::i;:::-;3853:33;;2303:20:2::1;:18;:20::i;:::-;3490:404:8::0;;;;;;;:::o;510:32::-;;;;:::o;681:30::-;;;;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;972:45:8:-;;;;;;;;;;;;;;;;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;2755:96:7:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;4776:244:3:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3315:178:3:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:9:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:765::-;776:6;784;792;800;849:3;837:9;828:7;824:23;820:33;817:120;;;856:79;;:::i;:::-;817:120;976:1;1001:53;1046:7;1037:6;1026:9;1022:22;1001:53;:::i;:::-;991:63;;947:117;1103:2;1129:53;1174:7;1165:6;1154:9;1150:22;1129:53;:::i;:::-;1119:63;;1074:118;1231:2;1257:53;1302:7;1293:6;1282:9;1278:22;1257:53;:::i;:::-;1247:63;;1202:118;1359:2;1385:53;1430:7;1421:6;1410:9;1406:22;1385:53;:::i;:::-;1375:63;;1330:118;690:765;;;;;;;:::o;1461:99::-;1513:6;1547:5;1541:12;1531:22;;1461:99;;;:::o;1566:169::-;1650:11;1684:6;1679:3;1672:19;1724:4;1719:3;1715:14;1700:29;;1566:169;;;;:::o;1741:139::-;1830:6;1825:3;1820;1814:23;1871:1;1862:6;1857:3;1853:16;1846:27;1741:139;;;:::o;1886:102::-;1927:6;1978:2;1974:7;1969:2;1962:5;1958:14;1954:28;1944:38;;1886:102;;;:::o;1994:377::-;2082:3;2110:39;2143:5;2110:39;:::i;:::-;2165:71;2229:6;2224:3;2165:71;:::i;:::-;2158:78;;2245:65;2303:6;2298:3;2291:4;2284:5;2280:16;2245:65;:::i;:::-;2335:29;2357:6;2335:29;:::i;:::-;2330:3;2326:39;2319:46;;2086:285;1994:377;;;;:::o;2377:313::-;2490:4;2528:2;2517:9;2513:18;2505:26;;2577:9;2571:4;2567:20;2563:1;2552:9;2548:17;2541:47;2605:78;2678:4;2669:6;2605:78;:::i;:::-;2597:86;;2377:313;;;;:::o;2696:126::-;2733:7;2773:42;2766:5;2762:54;2751:65;;2696:126;;;:::o;2828:96::-;2865:7;2894:24;2912:5;2894:24;:::i;:::-;2883:35;;2828:96;;;:::o;2930:122::-;3003:24;3021:5;3003:24;:::i;:::-;2996:5;2993:35;2983:63;;3042:1;3039;3032:12;2983:63;2930:122;:::o;3058:139::-;3104:5;3142:6;3129:20;3120:29;;3158:33;3185:5;3158:33;:::i;:::-;3058:139;;;;:::o;3203:474::-;3271:6;3279;3328:2;3316:9;3307:7;3303:23;3299:32;3296:119;;;3334:79;;:::i;:::-;3296:119;3454:1;3479:53;3524:7;3515:6;3504:9;3500:22;3479:53;:::i;:::-;3469:63;;3425:117;3581:2;3607:53;3652:7;3643:6;3632:9;3628:22;3607:53;:::i;:::-;3597:63;;3552:118;3203:474;;;;;:::o;3683:90::-;3717:7;3760:5;3753:13;3746:21;3735:32;;3683:90;;;:::o;3779:109::-;3860:21;3875:5;3860:21;:::i;:::-;3855:3;3848:34;3779:109;;:::o;3894:210::-;3981:4;4019:2;4008:9;4004:18;3996:26;;4032:65;4094:1;4083:9;4079:17;4070:6;4032:65;:::i;:::-;3894:210;;;;:::o;4110:329::-;4169:6;4218:2;4206:9;4197:7;4193:23;4189:32;4186:119;;;4224:79;;:::i;:::-;4186:119;4344:1;4369:53;4414:7;4405:6;4394:9;4390:22;4369:53;:::i;:::-;4359:63;;4315:117;4110:329;;;;:::o;4445:118::-;4532:24;4550:5;4532:24;:::i;:::-;4527:3;4520:37;4445:118;;:::o;4569:222::-;4662:4;4700:2;4689:9;4685:18;4677:26;;4713:71;4781:1;4770:9;4766:17;4757:6;4713:71;:::i;:::-;4569:222;;;;:::o;4797:116::-;4867:21;4882:5;4867:21;:::i;:::-;4860:5;4857:32;4847:60;;4903:1;4900;4893:12;4847:60;4797:116;:::o;4919:133::-;4962:5;5000:6;4987:20;4978:29;;5016:30;5040:5;5016:30;:::i;:::-;4919:133;;;;:::o;5058:468::-;5123:6;5131;5180:2;5168:9;5159:7;5155:23;5151:32;5148:119;;;5186:79;;:::i;:::-;5148:119;5306:1;5331:53;5376:7;5367:6;5356:9;5352:22;5331:53;:::i;:::-;5321:63;;5277:117;5433:2;5459:50;5501:7;5492:6;5481:9;5477:22;5459:50;:::i;:::-;5449:60;;5404:115;5058:468;;;;;:::o;5532:619::-;5609:6;5617;5625;5674:2;5662:9;5653:7;5649:23;5645:32;5642:119;;;5680:79;;:::i;:::-;5642:119;5800:1;5825:53;5870:7;5861:6;5850:9;5846:22;5825:53;:::i;:::-;5815:63;;5771:117;5927:2;5953:53;5998:7;5989:6;5978:9;5974:22;5953:53;:::i;:::-;5943:63;;5898:118;6055:2;6081:53;6126:7;6117:6;6106:9;6102:22;6081:53;:::i;:::-;6071:63;;6026:118;5532:619;;;;;:::o;6157:86::-;6192:7;6232:4;6225:5;6221:16;6210:27;;6157:86;;;:::o;6249:112::-;6332:22;6348:5;6332:22;:::i;:::-;6327:3;6320:35;6249:112;;:::o;6367:214::-;6456:4;6494:2;6483:9;6479:18;6471:26;;6507:67;6571:1;6560:9;6556:17;6547:6;6507:67;:::i;:::-;6367:214;;;;:::o;6587:117::-;6696:1;6693;6686:12;6710:117;6819:1;6816;6809:12;6833:117;6942:1;6939;6932:12;6973:568;7046:8;7056:6;7106:3;7099:4;7091:6;7087:17;7083:27;7073:122;;7114:79;;:::i;:::-;7073:122;7227:6;7214:20;7204:30;;7257:18;7249:6;7246:30;7243:117;;;7279:79;;:::i;:::-;7243:117;7393:4;7385:6;7381:17;7369:29;;7447:3;7439:4;7431:6;7427:17;7417:8;7413:32;7410:41;7407:128;;;7454:79;;:::i;:::-;7407:128;6973:568;;;;;:::o;7547:698::-;7639:6;7647;7655;7704:2;7692:9;7683:7;7679:23;7675:32;7672:119;;;7710:79;;:::i;:::-;7672:119;7858:1;7847:9;7843:17;7830:31;7888:18;7880:6;7877:30;7874:117;;;7910:79;;:::i;:::-;7874:117;8023:80;8095:7;8086:6;8075:9;8071:22;8023:80;:::i;:::-;8005:98;;;;7801:312;8152:2;8178:50;8220:7;8211:6;8200:9;8196:22;8178:50;:::i;:::-;8168:60;;8123:115;7547:698;;;;;:::o;8251:118::-;8338:24;8356:5;8338:24;:::i;:::-;8333:3;8326:37;8251:118;;:::o;8375:222::-;8468:4;8506:2;8495:9;8491:18;8483:26;;8519:71;8587:1;8576:9;8572:17;8563:6;8519:71;:::i;:::-;8375:222;;;;:::o;8603:323::-;8659:6;8708:2;8696:9;8687:7;8683:23;8679:32;8676:119;;;8714:79;;:::i;:::-;8676:119;8834:1;8859:50;8901:7;8892:6;8881:9;8877:22;8859:50;:::i;:::-;8849:60;;8805:114;8603:323;;;;:::o;8932:474::-;9000:6;9008;9057:2;9045:9;9036:7;9032:23;9028:32;9025:119;;;9063:79;;:::i;:::-;9025:119;9183:1;9208:53;9253:7;9244:6;9233:9;9229:22;9208:53;:::i;:::-;9198:63;;9154:117;9310:2;9336:53;9381:7;9372:6;9361:9;9357:22;9336:53;:::i;:::-;9326:63;;9281:118;8932:474;;;;;:::o;9412:553::-;9589:4;9627:3;9616:9;9612:19;9604:27;;9641:71;9709:1;9698:9;9694:17;9685:6;9641:71;:::i;:::-;9722:72;9790:2;9779:9;9775:18;9766:6;9722:72;:::i;:::-;9804;9872:2;9861:9;9857:18;9848:6;9804:72;:::i;:::-;9886;9954:2;9943:9;9939:18;9930:6;9886:72;:::i;:::-;9412:553;;;;;;;:::o;9971:180::-;10019:77;10016:1;10009:88;10116:4;10113:1;10106:15;10140:4;10137:1;10130:15;10157:320;10201:6;10238:1;10232:4;10228:12;10218:22;;10285:1;10279:4;10275:12;10306:18;10296:81;;10362:4;10354:6;10350:17;10340:27;;10296:81;10424:2;10416:6;10413:14;10393:18;10390:38;10387:84;;10443:18;;:::i;:::-;10387:84;10208:269;10157:320;;;:::o;10483:172::-;10623:24;10619:1;10611:6;10607:14;10600:48;10483:172;:::o;10661:366::-;10803:3;10824:67;10888:2;10883:3;10824:67;:::i;:::-;10817:74;;10900:93;10989:3;10900:93;:::i;:::-;11018:2;11013:3;11009:12;11002:19;;10661:366;;;:::o;11033:419::-;11199:4;11237:2;11226:9;11222:18;11214:26;;11286:9;11280:4;11276:20;11272:1;11261:9;11257:17;11250:47;11314:131;11440:4;11314:131;:::i;:::-;11306:139;;11033:419;;;:::o;11458:169::-;11598:21;11594:1;11586:6;11582:14;11575:45;11458:169;:::o;11633:366::-;11775:3;11796:67;11860:2;11855:3;11796:67;:::i;:::-;11789:74;;11872:93;11961:3;11872:93;:::i;:::-;11990:2;11985:3;11981:12;11974:19;;11633:366;;;:::o;12005:419::-;12171:4;12209:2;12198:9;12194:18;12186:26;;12258:9;12252:4;12248:20;12244:1;12233:9;12229:17;12222:47;12286:131;12412:4;12286:131;:::i;:::-;12278:139;;12005:419;;;:::o;12430:177::-;12570:29;12566:1;12558:6;12554:14;12547:53;12430:177;:::o;12613:366::-;12755:3;12776:67;12840:2;12835:3;12776:67;:::i;:::-;12769:74;;12852:93;12941:3;12852:93;:::i;:::-;12970:2;12965:3;12961:12;12954:19;;12613:366;;;:::o;12985:419::-;13151:4;13189:2;13178:9;13174:18;13166:26;;13238:9;13232:4;13228:20;13224:1;13213:9;13209:17;13202:47;13266:131;13392:4;13266:131;:::i;:::-;13258:139;;12985:419;;;:::o;13410:165::-;13550:17;13546:1;13538:6;13534:14;13527:41;13410:165;:::o;13581:366::-;13723:3;13744:67;13808:2;13803:3;13744:67;:::i;:::-;13737:74;;13820:93;13909:3;13820:93;:::i;:::-;13938:2;13933:3;13929:12;13922:19;;13581:366;;;:::o;13953:419::-;14119:4;14157:2;14146:9;14142:18;14134:26;;14206:9;14200:4;14196:20;14192:1;14181:9;14177:17;14170:47;14234:131;14360:4;14234:131;:::i;:::-;14226:139;;13953:419;;;:::o;14378:167::-;14518:19;14514:1;14506:6;14502:14;14495:43;14378:167;:::o;14551:366::-;14693:3;14714:67;14778:2;14773:3;14714:67;:::i;:::-;14707:74;;14790:93;14879:3;14790:93;:::i;:::-;14908:2;14903:3;14899:12;14892:19;;14551:366;;;:::o;14923:419::-;15089:4;15127:2;15116:9;15112:18;15104:26;;15176:9;15170:4;15166:20;15162:1;15151:9;15147:17;15140:47;15204:131;15330:4;15204:131;:::i;:::-;15196:139;;14923:419;;;:::o;15348:175::-;15488:27;15484:1;15476:6;15472:14;15465:51;15348:175;:::o;15529:366::-;15671:3;15692:67;15756:2;15751:3;15692:67;:::i;:::-;15685:74;;15768:93;15857:3;15768:93;:::i;:::-;15886:2;15881:3;15877:12;15870:19;;15529:366;;;:::o;15901:419::-;16067:4;16105:2;16094:9;16090:18;16082:26;;16154:9;16148:4;16144:20;16140:1;16129:9;16125:17;16118:47;16182:131;16308:4;16182:131;:::i;:::-;16174:139;;15901:419;;;:::o;16326:167::-;16466:19;16462:1;16454:6;16450:14;16443:43;16326:167;:::o;16499:366::-;16641:3;16662:67;16726:2;16721:3;16662:67;:::i;:::-;16655:74;;16738:93;16827:3;16738:93;:::i;:::-;16856:2;16851:3;16847:12;16840:19;;16499:366;;;:::o;16871:419::-;17037:4;17075:2;17064:9;17060:18;17052:26;;17124:9;17118:4;17114:20;17110:1;17099:9;17095:17;17088:47;17152:131;17278:4;17152:131;:::i;:::-;17144:139;;16871:419;;;:::o;17296:180::-;17344:77;17341:1;17334:88;17441:4;17438:1;17431:15;17465:4;17462:1;17455:15;17482:178;17622:30;17618:1;17610:6;17606:14;17599:54;17482:178;:::o;17666:366::-;17808:3;17829:67;17893:2;17888:3;17829:67;:::i;:::-;17822:74;;17905:93;17994:3;17905:93;:::i;:::-;18023:2;18018:3;18014:12;18007:19;;17666:366;;;:::o;18038:419::-;18204:4;18242:2;18231:9;18227:18;18219:26;;18291:9;18285:4;18281:20;18277:1;18266:9;18262:17;18255:47;18319:131;18445:4;18319:131;:::i;:::-;18311:139;;18038:419;;;:::o;18463:143::-;18520:5;18551:6;18545:13;18536:22;;18567:33;18594:5;18567:33;:::i;:::-;18463:143;;;;:::o;18612:351::-;18682:6;18731:2;18719:9;18710:7;18706:23;18702:32;18699:119;;;18737:79;;:::i;:::-;18699:119;18857:1;18882:64;18938:7;18929:6;18918:9;18914:22;18882:64;:::i;:::-;18872:74;;18828:128;18612:351;;;;:::o;18969:332::-;19090:4;19128:2;19117:9;19113:18;19105:26;;19141:71;19209:1;19198:9;19194:17;19185:6;19141:71;:::i;:::-;19222:72;19290:2;19279:9;19275:18;19266:6;19222:72;:::i;:::-;18969:332;;;;;:::o;19307:137::-;19361:5;19392:6;19386:13;19377:22;;19408:30;19432:5;19408:30;:::i;:::-;19307:137;;;;:::o;19450:345::-;19517:6;19566:2;19554:9;19545:7;19541:23;19537:32;19534:119;;;19572:79;;:::i;:::-;19534:119;19692:1;19717:61;19770:7;19761:6;19750:9;19746:22;19717:61;:::i;:::-;19707:71;;19663:125;19450:345;;;;:::o;19801:180::-;19849:77;19846:1;19839:88;19946:4;19943:1;19936:15;19970:4;19967:1;19960:15;19987:191;20027:3;20046:20;20064:1;20046:20;:::i;:::-;20041:25;;20080:20;20098:1;20080:20;:::i;:::-;20075:25;;20123:1;20120;20116:9;20109:16;;20144:3;20141:1;20138:10;20135:36;;;20151:18;;:::i;:::-;20135:36;19987:191;;;;:::o;20184:181::-;20324:33;20320:1;20312:6;20308:14;20301:57;20184:181;:::o;20371:366::-;20513:3;20534:67;20598:2;20593:3;20534:67;:::i;:::-;20527:74;;20610:93;20699:3;20610:93;:::i;:::-;20728:2;20723:3;20719:12;20712:19;;20371:366;;;:::o;20743:419::-;20909:4;20947:2;20936:9;20932:18;20924:26;;20996:9;20990:4;20986:20;20982:1;20971:9;20967:17;20960:47;21024:131;21150:4;21024:131;:::i;:::-;21016:139;;20743:419;;;:::o;21168:442::-;21317:4;21355:2;21344:9;21340:18;21332:26;;21368:71;21436:1;21425:9;21421:17;21412:6;21368:71;:::i;:::-;21449:72;21517:2;21506:9;21502:18;21493:6;21449:72;:::i;:::-;21531;21599:2;21588:9;21584:18;21575:6;21531:72;:::i;:::-;21168:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2275400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_SUPPLY()": "437",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2873",
								"batchUpdateBlacklist(address[],bool)": "infinite",
								"batchUpdateWhitelist(address[],bool)": "infinite",
								"decimals()": "428",
								"emergencyWithdraw(address)": "infinite",
								"initialized()": "2556",
								"isBlacklisted(address)": "2943",
								"isWhitelisted(address)": "2900",
								"lastTransferTime(address)": "2848",
								"maxTransferAmount()": "2536",
								"maxWalletAmount()": "2469",
								"minHoldTime()": "2470",
								"name()": "infinite",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"setTrading(bool)": "infinite",
								"symbol()": "infinite",
								"tokenReceiveTime(address)": "2870",
								"totalSupply()": "2544",
								"tradingEnabled()": "2555",
								"transfer(address,uint256)": "infinite",
								"transferCooldown()": "2493",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateBlacklist(address,bool)": "infinite",
								"updateSecurityParams(uint256,uint256,uint256,uint256)": "infinite",
								"updateWhitelist(address,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 6267,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1606,
									"end": 2413,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1606,
									"end": 2413,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1606,
									"end": 2413,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1606,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1606,
									"end": 2413,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1606,
									"end": 2413,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1606,
									"end": 2413,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1606,
									"end": 2413,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1606,
									"end": 2413,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1606,
									"end": 2413,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1606,
									"end": 2413,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 342,
									"end": 352,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "50726F7068656379204A696D70736F6E73000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "4A696D7000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1686,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1675,
									"end": 1686,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1675,
									"end": 1686,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1675,
									"end": 1686,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1675,
									"end": 1686,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1675,
									"end": 1686,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1675,
									"end": 1686,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1675,
									"end": 1686,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1675,
									"end": 1686,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1675,
									"end": 1686,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1675,
									"end": 1686,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 1686,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1666,
									"end": 1710,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1666,
									"end": 1710,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1803,
									"end": 1832,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1809,
									"end": 1819,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 450,
									"end": 473,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "204FCE5E3E25026110000000"
								},
								{
									"begin": 1803,
									"end": 1808,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1803,
									"end": 1808,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1803,
									"end": 1808,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1803,
									"end": 1832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1803,
									"end": 1832,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1803,
									"end": 1832,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1803,
									"end": 1832,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1803,
									"end": 1832,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1913,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1913,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1958,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "3635C9ADC5DEA00000"
								},
								{
									"begin": 1924,
									"end": 1941,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1924,
									"end": 1958,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1924,
									"end": 1958,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1924,
									"end": 1958,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1924,
									"end": 1958,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1987,
									"end": 2003,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "152D02C7E14AF6800000"
								},
								{
									"begin": 1969,
									"end": 1984,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1969,
									"end": 2003,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1969,
									"end": 2003,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1969,
									"end": 2003,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1969,
									"end": 2003,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2051,
									"end": 2057,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "15180"
								},
								{
									"begin": 2037,
									"end": 2048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2037,
									"end": 2057,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2037,
									"end": 2057,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2037,
									"end": 2057,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2037,
									"end": 2057,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2129,
									"end": 2131,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "3C"
								},
								{
									"begin": 2110,
									"end": 2126,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 2110,
									"end": 2131,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2110,
									"end": 2131,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2110,
									"end": 2131,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2110,
									"end": 2131,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2201,
									"end": 2206,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2184,
									"end": 2198,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 2184,
									"end": 2198,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2206,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2296,
									"end": 2300,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2268,
									"end": 2281,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2282,
									"end": 2292,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2300,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2382,
									"end": 2392,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "9D5570C03A71AF73640DA09C132D73BB3EFE7CA4F55516A1AFC2597CBDFD620C"
								},
								{
									"begin": 450,
									"end": 473,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "204FCE5E3E25026110000000"
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2364,
									"end": 2405,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2405,
									"modifierDepth": 1,
									"name": "LOG2",
									"source": 8
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 5989,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 5820,
									"end": 5989,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5904,
									"end": 5915,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5938,
									"end": 5944,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5933,
									"end": 5936,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5926,
									"end": 5945,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5978,
									"end": 5982,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5973,
									"end": 5976,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5969,
									"end": 5983,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5954,
									"end": 5983,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5954,
									"end": 5983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 5989,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 5989,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 5989,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 5989,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 5989,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5995,
									"end": 6164,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 5995,
									"end": 6164,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6135,
									"end": 6156,
									"name": "PUSH",
									"source": 9,
									"value": "416C726561647920696E697469616C697A656400000000000000000000000000"
								},
								{
									"begin": 6131,
									"end": 6132,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6123,
									"end": 6129,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6119,
									"end": 6133,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6112,
									"end": 6157,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5995,
									"end": 6164,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5995,
									"end": 6164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6536,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 6170,
									"end": 6536,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6312,
									"end": 6315,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6333,
									"end": 6400,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 6397,
									"end": 6399,
									"name": "PUSH",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 6392,
									"end": 6395,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6333,
									"end": 6400,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 6333,
									"end": 6400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6333,
									"end": 6400,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 6333,
									"end": 6400,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6326,
									"end": 6400,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6326,
									"end": 6400,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6409,
									"end": 6502,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 6498,
									"end": 6501,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6409,
									"end": 6502,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 6409,
									"end": 6502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6409,
									"end": 6502,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 6409,
									"end": 6502,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6527,
									"end": 6529,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6522,
									"end": 6525,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6518,
									"end": 6530,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6511,
									"end": 6530,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6511,
									"end": 6530,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6536,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6536,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6536,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6536,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6542,
									"end": 6961,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6542,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6708,
									"end": 6712,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6746,
									"end": 6748,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6735,
									"end": 6744,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6731,
									"end": 6749,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6723,
									"end": 6749,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6723,
									"end": 6749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6795,
									"end": 6804,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6789,
									"end": 6793,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6785,
									"end": 6805,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 6781,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6770,
									"end": 6779,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6766,
									"end": 6783,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6759,
									"end": 6806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6823,
									"end": 6954,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 6949,
									"end": 6953,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6823,
									"end": 6954,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 6823,
									"end": 6954,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6823,
									"end": 6954,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 6823,
									"end": 6954,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6815,
									"end": 6954,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6815,
									"end": 6954,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6542,
									"end": 6961,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6542,
									"end": 6961,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6542,
									"end": 6961,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6542,
									"end": 6961,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7085,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 6967,
									"end": 7085,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7054,
									"end": 7078,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 7072,
									"end": 7077,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7054,
									"end": 7078,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 7054,
									"end": 7078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7054,
									"end": 7078,
									"name": "tag",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 7054,
									"end": 7078,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7049,
									"end": 7052,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7042,
									"end": 7079,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7085,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7085,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7085,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7091,
									"end": 7313,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 7091,
									"end": 7313,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7184,
									"end": 7188,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7222,
									"end": 7224,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7211,
									"end": 7220,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7207,
									"end": 7225,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7199,
									"end": 7225,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7199,
									"end": 7225,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7235,
									"end": 7306,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 7303,
									"end": 7304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7292,
									"end": 7301,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7288,
									"end": 7305,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7279,
									"end": 7285,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7235,
									"end": 7306,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 7235,
									"end": 7306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7235,
									"end": 7306,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 7235,
									"end": 7306,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7091,
									"end": 7313,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7091,
									"end": 7313,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7091,
									"end": 7313,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7091,
									"end": 7313,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7091,
									"end": 7313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7319,
									"end": 7499,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 7319,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7367,
									"end": 7444,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7364,
									"end": 7365,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7357,
									"end": 7445,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7464,
									"end": 7468,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 7461,
									"end": 7462,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 7454,
									"end": 7469,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7488,
									"end": 7492,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 7485,
									"end": 7486,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7478,
									"end": 7493,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 7505,
									"end": 7696,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 7505,
									"end": 7696,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7545,
									"end": 7548,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7564,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7564,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 7564,
									"end": 7584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7564,
									"end": 7584,
									"name": "tag",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 7564,
									"end": 7584,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7559,
									"end": 7584,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7559,
									"end": 7584,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7598,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 7616,
									"end": 7617,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7598,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 7598,
									"end": 7618,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7598,
									"end": 7618,
									"name": "tag",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 7598,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7593,
									"end": 7618,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7593,
									"end": 7618,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7641,
									"end": 7642,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7638,
									"end": 7639,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7634,
									"end": 7643,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7627,
									"end": 7643,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7627,
									"end": 7643,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7662,
									"end": 7665,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7659,
									"end": 7660,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7656,
									"end": 7666,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7653,
									"end": 7689,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7653,
									"end": 7689,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 7653,
									"end": 7689,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7669,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 7669,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 7669,
									"end": 7687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7669,
									"end": 7687,
									"name": "tag",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 7669,
									"end": 7687,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7653,
									"end": 7689,
									"name": "tag",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 7653,
									"end": 7689,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7505,
									"end": 7696,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7505,
									"end": 7696,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7505,
									"end": 7696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7505,
									"end": 7696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7505,
									"end": 7696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7851,
									"end": 7855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7889,
									"end": 7891,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 7878,
									"end": 7887,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7874,
									"end": 7892,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7866,
									"end": 7892,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7866,
									"end": 7892,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7902,
									"end": 7973,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 7970,
									"end": 7971,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7959,
									"end": 7968,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7955,
									"end": 7972,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7946,
									"end": 7952,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7902,
									"end": 7973,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 7902,
									"end": 7973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7902,
									"end": 7973,
									"name": "tag",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 7902,
									"end": 7973,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7983,
									"end": 8055,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 8051,
									"end": 8053,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8040,
									"end": 8049,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8036,
									"end": 8054,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8027,
									"end": 8033,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7983,
									"end": 8055,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 7983,
									"end": 8055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7983,
									"end": 8055,
									"name": "tag",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 7983,
									"end": 8055,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8065,
									"end": 8137,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 8133,
									"end": 8135,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 8122,
									"end": 8131,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8109,
									"end": 8115,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8065,
									"end": 8137,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 8065,
									"end": 8137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8065,
									"end": 8137,
									"name": "tag",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 8065,
									"end": 8137,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 6267,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220046c762e4feec9060ada05bb5c89f5409dfd61bcfe662247a648c69cc259d9cd64736f6c634300081c0033",
									".code": [
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "611274C5"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "9155E083"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "AA4BDE28"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "AA4BDE28"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "FE575A87"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "9155E083"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "A9E75723"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "8F70CCF7"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "611274C5"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "68F16293"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "6FF1C9BC"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "330671AD"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "330671AD"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "3AF32ABF"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "4ADA218B"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "6072E6A8"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "283AF019"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "32CB6B0C"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "D2D8A31"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "D2D8A31"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "D392CD9"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "158EF93E"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "2CD093D"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 6267,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4870,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 4870,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 820,
											"end": 871,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 820,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 820,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 820,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4689,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4689,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 480,
											"end": 503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 480,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 480,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 480,
											"end": 503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 503,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 480,
											"end": 503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 480,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 480,
											"end": 503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 503,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 3902,
											"end": 4316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 3902,
											"end": 4316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 3902,
											"end": 4316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 878,
											"end": 929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 878,
											"end": 929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 878,
											"end": 929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 413,
											"end": 473,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 413,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 413,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 599,
											"end": 625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 599,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 599,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 599,
											"end": 625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 625,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 599,
											"end": 625,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 599,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 599,
											"end": 625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 625,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1052,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1052,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1052,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 756,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 756,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 756,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 756,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 782,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 756,
											"end": 782,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 756,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 756,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 782,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5710,
											"end": 5983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5710,
											"end": 5983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5991,
											"end": 6264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5991,
											"end": 6264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1132,
											"end": 1163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1132,
											"end": 1163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 5399,
											"end": 5658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5399,
											"end": 5658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 4362,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 4362,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4508,
											"end": 4681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 4508,
											"end": 4681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3490,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3490,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 3490,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 510,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 510,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 681,
											"end": 711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 681,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 681,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 681,
											"end": 711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 711,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 681,
											"end": 711,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 681,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 681,
											"end": 711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 711,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 972,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 972,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 972,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5073,
											"end": 5085,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5053,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5053,
											"end": 5085,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5053,
											"end": 5085,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5053,
											"end": 5085,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5053,
											"end": 5085,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5124,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5149,
											"end": 5158,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 5146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5135,
											"end": 5158,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 5158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 5158,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5135,
											"end": 5158,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5197,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5169,
											"end": 5185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 5169,
											"end": 5197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5169,
											"end": 5197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5169,
											"end": 5197,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5169,
											"end": 5197,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "BB5D5C94DFF5ADB0BC0E043A6C2CF9BB8153231069831102F0E8E53B89924F1F"
										},
										{
											"begin": 5259,
											"end": 5271,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5286,
											"end": 5296,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5320,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5344,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 5223,
											"end": 5355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5355,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 871,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 871,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 820,
											"end": 871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4805,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4795,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4805,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4838,
											"end": 4845,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D"
										},
										{
											"begin": 4847,
											"end": 4853,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 4821,
											"end": 4854,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4854,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 480,
											"end": 503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 480,
											"end": 503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 480,
											"end": 503,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 480,
											"end": 503,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 480,
											"end": 503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4032,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4036,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4038,
											"end": 4044,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2563,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2568,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2569,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2590,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2541,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2674,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 2637,
											"end": 2674,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2673,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2674,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 2637,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2637,
											"end": 2695,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2691,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2695,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2637,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2629,
											"end": 2719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2758,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2763,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2782,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2785,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 3427,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2740,
											"end": 3427,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2821,
											"end": 2838,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2821,
											"end": 2838,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2803,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2939,
											"end": 2955,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2939,
											"end": 2955,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2928,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2933,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2912,
											"end": 2938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2908,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2956,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2956,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2885,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3067,
											"end": 3068,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3057,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3062,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3068,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3037,
											"end": 3193,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3143,
											"end": 3154,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3143,
											"end": 3154,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3132,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3137,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 3116,
											"end": 3142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3097,
											"end": 3155,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3097,
											"end": 3155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3089,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3193,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3037,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3320,
											"end": 3326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 3302,
											"end": 3315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 3302,
											"end": 3319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3366,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3385,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3385,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3342,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2788,
											"end": 3427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 3427,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2740,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4130,
											"end": 4131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4132,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4132,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4118,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4132,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4132,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4132,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 4108,
											"end": 4154,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 4108,
											"end": 4154,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4182,
											"end": 4184,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4185,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4203,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4203,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4203,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4203,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4239,
											"end": 4254,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4230,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4235,
											"modifierDepth": 2,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4236,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4254,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4254,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4254,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4254,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4308,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 4291,
											"end": 4295,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4299,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4301,
											"end": 4307,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4290,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 4272,
											"end": 4308,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4308,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 4272,
											"end": 4308,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4308,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4308,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 929,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 878,
											"end": 929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 413,
											"end": 473,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 450,
											"end": 473,
											"name": "PUSH",
											"source": 8,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 599,
											"end": 625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 599,
											"end": 625,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 599,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 756,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 756,
											"end": 782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 756,
											"end": 782,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 756,
											"end": 782,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 756,
											"end": 782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 5829,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5812,
											"end": 5976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5843,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5843,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5850,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5831,
											"end": 5832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5831,
											"end": 5850,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5976,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5812,
											"end": 5976,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5901,
											"end": 5907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5894,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5894,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5896,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 5886,
											"end": 5897,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 5886,
											"end": 5897,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5886,
											"end": 5897,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5952,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5952,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 5954,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 5944,
											"end": 5955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 5944,
											"end": 5955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5944,
											"end": 5955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC"
										},
										{
											"begin": 5957,
											"end": 5963,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 5927,
											"end": 5964,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5964,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 5852,
											"end": 5855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5852,
											"end": 5855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5852,
											"end": 5855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5852,
											"end": 5855,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5852,
											"end": 5855,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5852,
											"end": 5855,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5852,
											"end": 5855,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5812,
											"end": 5976,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5812,
											"end": 5976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6097,
											"end": 6110,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6093,
											"end": 6257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6093,
											"end": 6257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6124,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6124,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6112,
											"end": 6113,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6112,
											"end": 6131,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6093,
											"end": 6257,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6093,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6093,
											"end": 6257,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6182,
											"end": 6188,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6167,
											"end": 6175,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6175,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6177,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6167,
											"end": 6178,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 6167,
											"end": 6178,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6167,
											"end": 6178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6153,
											"end": 6188,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6233,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6233,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6234,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6225,
											"end": 6236,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 6225,
											"end": 6236,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6225,
											"end": 6236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D"
										},
										{
											"begin": 6238,
											"end": 6244,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 6208,
											"end": 6245,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6245,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 6133,
											"end": 6136,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6133,
											"end": 6136,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6133,
											"end": 6136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6133,
											"end": 6136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6133,
											"end": 6136,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6133,
											"end": 6136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6133,
											"end": 6136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6093,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6093,
											"end": 6257,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6093,
											"end": 6257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6093,
											"end": 6257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6093,
											"end": 6257,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5496,
											"end": 5500,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 5479,
											"end": 5501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5479,
											"end": 5501,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5479,
											"end": 5484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5479,
											"end": 5501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5479,
											"end": 5501,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5479,
											"end": 5501,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 5471,
											"end": 5534,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 5471,
											"end": 5534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5569,
											"end": 5574,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5562,
											"end": 5585,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 5594,
											"end": 5598,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 5562,
											"end": 5600,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 5562,
											"end": 5600,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5562,
											"end": 5600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5618,
											"end": 5623,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5611,
											"end": 5633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 5634,
											"end": 5641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 5634,
											"end": 5639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 5634,
											"end": 5641,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5641,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 5634,
											"end": 5641,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5649,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5611,
											"end": 5650,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 5611,
											"end": 5650,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5650,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4452,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 4427,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4452,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "BEDA7DCA7BC1B3E80B871F4818129EC73B771581F803D553AEB3484098E5F65A"
										},
										{
											"begin": 4483,
											"end": 4491,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 4468,
											"end": 4492,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4492,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4614,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4664,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC"
										},
										{
											"begin": 4666,
											"end": 4672,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 4640,
											"end": 4673,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4673,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3667,
											"end": 3671,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3613,
											"end": 3615,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3623,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2563,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2568,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2569,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2590,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2574,
											"end": 2591,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2549,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2541,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2541,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2674,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2637,
											"end": 2674,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2673,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2674,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2637,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 2637,
											"end": 2695,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2691,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2695,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 2637,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2629,
											"end": 2719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2629,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2758,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2763,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2782,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2785,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 3427,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2740,
											"end": 3427,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2821,
											"end": 2838,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2821,
											"end": 2838,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2803,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 2803,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2939,
											"end": 2955,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2939,
											"end": 2955,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2928,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2933,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2912,
											"end": 2938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2912,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2908,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2956,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2956,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2885,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 2885,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3067,
											"end": 3068,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3057,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3062,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3068,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3037,
											"end": 3193,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3143,
											"end": 3154,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3143,
											"end": 3154,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3132,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3137,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 3116,
											"end": 3142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3116,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3097,
											"end": 3155,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3097,
											"end": 3155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3089,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3193,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3037,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 3320,
											"end": 3326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 3302,
											"end": 3315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 3302,
											"end": 3319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 3302,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3366,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3385,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3385,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3342,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3342,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2788,
											"end": 3427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 3427,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2740,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3712,
											"end": 3713,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3714,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3698,
											"end": 3714,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3698,
											"end": 3700,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3698,
											"end": 3714,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3698,
											"end": 3714,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3698,
											"end": 3714,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3690,
											"end": 3736,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3690,
											"end": 3736,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3770,
											"end": 3785,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3763,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3766,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3785,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3785,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3785,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3785,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 3842,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3823,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3824,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3842,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3842,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3842,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3842,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3860,
											"end": 3886,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3875,
											"end": 3877,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3879,
											"end": 3885,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3860,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 3860,
											"end": 3886,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3860,
											"end": 3886,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3860,
											"end": 3886,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3886,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3886,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 510,
											"end": 542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 681,
											"end": 711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 681,
											"end": 711,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 681,
											"end": 711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1455,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 690,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 776,
											"end": 782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 852,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 837,
											"end": 846,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 828,
											"end": 835,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 824,
											"end": 847,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 820,
											"end": 853,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 937,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 817,
											"end": 937,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 856,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 856,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 856,
											"end": 935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 856,
											"end": 935,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 856,
											"end": 935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 937,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 817,
											"end": 937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 976,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 1046,
											"end": 1053,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1037,
											"end": 1043,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1035,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1022,
											"end": 1044,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 1001,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1054,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 1001,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 991,
											"end": 1054,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 991,
											"end": 1054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 947,
											"end": 1064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1103,
											"end": 1105,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 1174,
											"end": 1181,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1163,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 1129,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 1129,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1182,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1233,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1291,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1278,
											"end": 1300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 1257,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1310,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 1257,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 1430,
											"end": 1437,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 1385,
											"end": 1438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1455,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1455,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1455,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1455,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1461,
											"end": 1560,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 1461,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1552,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1553,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1461,
											"end": 1560,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1461,
											"end": 1560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1461,
											"end": 1560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1461,
											"end": 1560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1566,
											"end": 1735,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 1566,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1682,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1672,
											"end": 1691,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 1728,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1719,
											"end": 1722,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1566,
											"end": 1735,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1566,
											"end": 1735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1566,
											"end": 1735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1566,
											"end": 1735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1566,
											"end": 1735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1741,
											"end": 1880,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 1741,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 1837,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 1871,
											"end": 1872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1857,
											"end": 1860,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1869,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1873,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1741,
											"end": 1880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1741,
											"end": 1880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1741,
											"end": 1880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1741,
											"end": 1880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 1988,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 1886,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1980,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1974,
											"end": 1981,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1971,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1962,
											"end": 1967,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1958,
											"end": 1972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1982,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 1988,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 1988,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 1988,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2371,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 1994,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2082,
											"end": 2085,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 2110,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2149,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 2110,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 2229,
											"end": 2235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2227,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 2165,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2236,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 2165,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2236,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 2303,
											"end": 2309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2301,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2291,
											"end": 2295,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2289,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2280,
											"end": 2296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 2245,
											"end": 2310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2310,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 2245,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2335,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2335,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 2335,
											"end": 2364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2335,
											"end": 2364,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 2335,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2333,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2326,
											"end": 2365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2365,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2371,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2690,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2377,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2490,
											"end": 2494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2530,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2526,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2531,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2531,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2577,
											"end": 2586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2561,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2548,
											"end": 2565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 2678,
											"end": 2682,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2669,
											"end": 2675,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2605,
											"end": 2683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2683,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 2605,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2690,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2822,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 2696,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2815,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2762,
											"end": 2816,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2751,
											"end": 2816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2751,
											"end": 2816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2822,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2822,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2924,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2828,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2865,
											"end": 2872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 2894,
											"end": 2918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 2918,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 2894,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2924,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3052,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 2930,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3003,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 3021,
											"end": 3026,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3003,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 3003,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3003,
											"end": 3027,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 3003,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2993,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 2983,
											"end": 3046,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3046,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 2983,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3197,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 3058,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3149,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 3158,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3197,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3197,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3677,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3203,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3277,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3330,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3316,
											"end": 3325,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3303,
											"end": 3326,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3296,
											"end": 3415,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3296,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 3296,
											"end": 3415,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 3334,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 3334,
											"end": 3413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3413,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 3334,
											"end": 3413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3296,
											"end": 3415,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 3296,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3454,
											"end": 3455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 3524,
											"end": 3531,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3513,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 3479,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 3532,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 3479,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3532,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3532,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3583,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 3652,
											"end": 3659,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3649,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3632,
											"end": 3641,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3628,
											"end": 3650,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 3607,
											"end": 3660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3660,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 3607,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3660,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3677,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3677,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3683,
											"end": 3773,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 3683,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3717,
											"end": 3724,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3765,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3753,
											"end": 3766,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3735,
											"end": 3767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3735,
											"end": 3767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3683,
											"end": 3773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3683,
											"end": 3773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3683,
											"end": 3773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3683,
											"end": 3773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3888,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 3779,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 3875,
											"end": 3880,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 3860,
											"end": 3881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 3881,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 3860,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3848,
											"end": 3882,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 4104,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3894,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4021,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4017,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3996,
											"end": 4022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3996,
											"end": 4022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 4094,
											"end": 4095,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 4032,
											"end": 4097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4097,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 4032,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 4104,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 4104,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 4104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 4104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 4104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4439,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4110,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4220,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4206,
											"end": 4215,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4204,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4216,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4189,
											"end": 4221,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4186,
											"end": 4305,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4186,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 4186,
											"end": 4305,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 4224,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 4224,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4303,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 4224,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4186,
											"end": 4305,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 4186,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4344,
											"end": 4345,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 4414,
											"end": 4421,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4411,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4394,
											"end": 4403,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4390,
											"end": 4412,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 4369,
											"end": 4422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4422,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 4369,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4315,
											"end": 4432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4439,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4563,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 4445,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4532,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 4550,
											"end": 4555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4532,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 4532,
											"end": 4556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4532,
											"end": 4556,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 4532,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4527,
											"end": 4530,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4791,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4569,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4666,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4700,
											"end": 4702,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4689,
											"end": 4698,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4685,
											"end": 4703,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4703,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 4781,
											"end": 4782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4779,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4766,
											"end": 4783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4757,
											"end": 4763,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 4713,
											"end": 4784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4784,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 4713,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4791,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4791,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4913,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 4797,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 4882,
											"end": 4887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 4867,
											"end": 4888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4888,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 4867,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4865,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4889,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 4847,
											"end": 4907,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4907,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 4847,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4919,
											"end": 5052,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 4919,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 4967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4987,
											"end": 5007,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4978,
											"end": 5007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4978,
											"end": 5007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5016,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 5040,
											"end": 5045,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5016,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 5016,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5016,
											"end": 5046,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 5016,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4919,
											"end": 5052,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4919,
											"end": 5052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4919,
											"end": 5052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4919,
											"end": 5052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4919,
											"end": 5052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5526,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 5058,
											"end": 5526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5123,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5131,
											"end": 5137,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5182,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5177,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5166,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5178,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5183,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 5186,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 5186,
											"end": 5265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5265,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 5186,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5331,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 5376,
											"end": 5383,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5352,
											"end": 5374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5331,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 5331,
											"end": 5384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5331,
											"end": 5384,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 5331,
											"end": 5384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5321,
											"end": 5384,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5321,
											"end": 5384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 5501,
											"end": 5508,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5481,
											"end": 5490,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5477,
											"end": 5499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5459,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 5459,
											"end": 5509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5459,
											"end": 5509,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 5459,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5526,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5526,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5532,
											"end": 6151,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5532,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5609,
											"end": 5615,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5662,
											"end": 5671,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5660,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5649,
											"end": 5672,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5677,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5642,
											"end": 5761,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5642,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 5642,
											"end": 5761,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5680,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 5680,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 5680,
											"end": 5759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5680,
											"end": 5759,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 5680,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5642,
											"end": 5761,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 5642,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5800,
											"end": 5801,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5825,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 5870,
											"end": 5877,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5867,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5859,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5846,
											"end": 5868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 5825,
											"end": 5878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5878,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 5825,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5815,
											"end": 5878,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5815,
											"end": 5878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5771,
											"end": 5888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5929,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5953,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 5998,
											"end": 6005,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 5995,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5978,
											"end": 5987,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 5996,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 5953,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 6006,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 5953,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5943,
											"end": 6006,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5943,
											"end": 6006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6055,
											"end": 6057,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6081,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 6126,
											"end": 6133,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6106,
											"end": 6115,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6102,
											"end": 6124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 6081,
											"end": 6134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6134,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 6081,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6134,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5532,
											"end": 6151,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5532,
											"end": 6151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5532,
											"end": 6151,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5532,
											"end": 6151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5532,
											"end": 6151,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5532,
											"end": 6151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6157,
											"end": 6243,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 6157,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6192,
											"end": 6199,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6225,
											"end": 6230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6221,
											"end": 6237,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6157,
											"end": 6243,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6157,
											"end": 6243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6157,
											"end": 6243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6157,
											"end": 6243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6361,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 6249,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 6348,
											"end": 6353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 6332,
											"end": 6354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6354,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 6332,
											"end": 6354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6327,
											"end": 6330,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6367,
											"end": 6581,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6367,
											"end": 6581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6471,
											"end": 6497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6471,
											"end": 6497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 6571,
											"end": 6572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6560,
											"end": 6569,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6556,
											"end": 6573,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6547,
											"end": 6553,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 6507,
											"end": 6574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6367,
											"end": 6581,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6367,
											"end": 6581,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6367,
											"end": 6581,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6367,
											"end": 6581,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6367,
											"end": 6581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6587,
											"end": 6704,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 6587,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6696,
											"end": 6697,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6693,
											"end": 6694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6698,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6710,
											"end": 6827,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6710,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6819,
											"end": 6820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6816,
											"end": 6817,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6809,
											"end": 6821,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6833,
											"end": 6950,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 6833,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6942,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6932,
											"end": 6944,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7541,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 6973,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7046,
											"end": 7054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7109,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7099,
											"end": 7103,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7091,
											"end": 7097,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7083,
											"end": 7110,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7073,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 7073,
											"end": 7195,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7114,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 7114,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 7114,
											"end": 7193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7114,
											"end": 7193,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 7114,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7073,
											"end": 7195,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 7073,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7227,
											"end": 7233,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7214,
											"end": 7234,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7204,
											"end": 7234,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7204,
											"end": 7234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7257,
											"end": 7275,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7246,
											"end": 7276,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7243,
											"end": 7360,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7243,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 7243,
											"end": 7360,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 7279,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 7279,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7358,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 7279,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7243,
											"end": 7360,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 7243,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7393,
											"end": 7397,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7385,
											"end": 7391,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7398,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7369,
											"end": 7398,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7369,
											"end": 7398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7450,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7443,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7431,
											"end": 7437,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7427,
											"end": 7444,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7417,
											"end": 7425,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7413,
											"end": 7445,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7410,
											"end": 7451,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7407,
											"end": 7535,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7407,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 7407,
											"end": 7535,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 7454,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 7454,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7533,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 7454,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7407,
											"end": 7535,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 7407,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7541,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7541,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 8245,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 7547,
											"end": 8245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7639,
											"end": 7645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7647,
											"end": 7653,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7655,
											"end": 7661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7706,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7692,
											"end": 7701,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7690,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7702,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7675,
											"end": 7707,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7672,
											"end": 7791,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7672,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 7672,
											"end": 7791,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7710,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 7710,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 7710,
											"end": 7789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7710,
											"end": 7789,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 7710,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7672,
											"end": 7791,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 7672,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7858,
											"end": 7859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7843,
											"end": 7860,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7830,
											"end": 7861,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7888,
											"end": 7906,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7877,
											"end": 7907,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 7991,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 7991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 7874,
											"end": 7991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7910,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 7910,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 7910,
											"end": 7989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7910,
											"end": 7989,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 7910,
											"end": 7989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 7991,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 7874,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8023,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 8095,
											"end": 8102,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8086,
											"end": 8092,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8075,
											"end": 8084,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8093,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8023,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 8023,
											"end": 8103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8023,
											"end": 8103,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 8023,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8005,
											"end": 8103,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8005,
											"end": 8103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8005,
											"end": 8103,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8005,
											"end": 8103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7801,
											"end": 8113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8152,
											"end": 8154,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8178,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 8220,
											"end": 8227,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8200,
											"end": 8209,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8178,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 8178,
											"end": 8228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8178,
											"end": 8228,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 8178,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8168,
											"end": 8228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8168,
											"end": 8228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 8245,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 8245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 8245,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 8245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 8245,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 8245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8251,
											"end": 8369,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 8251,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 8356,
											"end": 8361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 8338,
											"end": 8362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8362,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 8338,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8326,
											"end": 8363,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8251,
											"end": 8369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8251,
											"end": 8369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8251,
											"end": 8369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8375,
											"end": 8597,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 8375,
											"end": 8597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8472,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8508,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8495,
											"end": 8504,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8483,
											"end": 8509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8483,
											"end": 8509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 8587,
											"end": 8588,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8576,
											"end": 8585,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8572,
											"end": 8589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 8519,
											"end": 8590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8590,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 8519,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8375,
											"end": 8597,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8375,
											"end": 8597,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8375,
											"end": 8597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8375,
											"end": 8597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8375,
											"end": 8597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8603,
											"end": 8926,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 8603,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8659,
											"end": 8665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8708,
											"end": 8710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8696,
											"end": 8705,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8687,
											"end": 8694,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8706,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8679,
											"end": 8711,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8676,
											"end": 8795,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8676,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 8676,
											"end": 8795,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 8714,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 8714,
											"end": 8793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8793,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 8714,
											"end": 8793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8676,
											"end": 8795,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 8676,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8834,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8892,
											"end": 8898,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8890,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8877,
											"end": 8899,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8859,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 8859,
											"end": 8909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8859,
											"end": 8909,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 8859,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8849,
											"end": 8909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8849,
											"end": 8909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 8919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8603,
											"end": 8926,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8603,
											"end": 8926,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8603,
											"end": 8926,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8603,
											"end": 8926,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8603,
											"end": 8926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9406,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 8932,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9000,
											"end": 9006,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9008,
											"end": 9014,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9057,
											"end": 9059,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9043,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9032,
											"end": 9055,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9028,
											"end": 9060,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9144,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 9025,
											"end": 9144,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9063,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 9063,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 9063,
											"end": 9142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9063,
											"end": 9142,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 9063,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9144,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 9025,
											"end": 9144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9183,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 9253,
											"end": 9260,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9244,
											"end": 9250,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9233,
											"end": 9242,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9229,
											"end": 9251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9208,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 9208,
											"end": 9261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9208,
											"end": 9261,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 9208,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9261,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9154,
											"end": 9271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9310,
											"end": 9312,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9336,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 9381,
											"end": 9388,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9372,
											"end": 9378,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9361,
											"end": 9370,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9379,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9336,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 9336,
											"end": 9389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9336,
											"end": 9389,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 9336,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9281,
											"end": 9399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9406,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9406,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9965,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 9412,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9589,
											"end": 9593,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9627,
											"end": 9630,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9616,
											"end": 9625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9612,
											"end": 9631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9604,
											"end": 9631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9604,
											"end": 9631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 9709,
											"end": 9710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9698,
											"end": 9707,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9694,
											"end": 9711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9685,
											"end": 9691,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 9641,
											"end": 9712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 9790,
											"end": 9792,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9779,
											"end": 9788,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9775,
											"end": 9793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9766,
											"end": 9772,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 9722,
											"end": 9794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9794,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 9722,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 9872,
											"end": 9874,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9861,
											"end": 9870,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9848,
											"end": 9854,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 9804,
											"end": 9876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 9804,
											"end": 9876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 9954,
											"end": 9956,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9943,
											"end": 9952,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9939,
											"end": 9957,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9930,
											"end": 9936,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 9886,
											"end": 9958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 9958,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 9886,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9965,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9965,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9971,
											"end": 10151,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 9971,
											"end": 10151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10019,
											"end": 10096,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10016,
											"end": 10017,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10009,
											"end": 10097,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10116,
											"end": 10120,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10113,
											"end": 10114,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10106,
											"end": 10121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10140,
											"end": 10144,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10130,
											"end": 10145,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10477,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 10157,
											"end": 10477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10201,
											"end": 10207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10239,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10232,
											"end": 10236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10228,
											"end": 10240,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10218,
											"end": 10240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10218,
											"end": 10240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10279,
											"end": 10283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10287,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10306,
											"end": 10324,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10296,
											"end": 10377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 10296,
											"end": 10377,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10362,
											"end": 10366,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 10354,
											"end": 10360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10350,
											"end": 10367,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10340,
											"end": 10367,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10340,
											"end": 10367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10296,
											"end": 10377,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 10296,
											"end": 10377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10424,
											"end": 10426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10416,
											"end": 10422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10413,
											"end": 10427,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10390,
											"end": 10428,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10387,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 10387,
											"end": 10471,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10443,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 10443,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 10443,
											"end": 10461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10443,
											"end": 10461,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 10443,
											"end": 10461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10387,
											"end": 10471,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 10387,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10208,
											"end": 10477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10477,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10483,
											"end": 10655,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 10483,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10623,
											"end": 10647,
											"name": "PUSH",
											"source": 9,
											"value": "4164647265737320697320626C61636B6C697374656400000000000000000000"
										},
										{
											"begin": 10619,
											"end": 10620,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10611,
											"end": 10617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10607,
											"end": 10621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10600,
											"end": 10648,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10483,
											"end": 10655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10483,
											"end": 10655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10661,
											"end": 11027,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 10661,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10803,
											"end": 10806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10824,
											"end": 10891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 10888,
											"end": 10890,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 10883,
											"end": 10886,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10824,
											"end": 10891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 10824,
											"end": 10891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10824,
											"end": 10891,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 10824,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10817,
											"end": 10891,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10817,
											"end": 10891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10900,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 10989,
											"end": 10992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10900,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 10900,
											"end": 10993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10900,
											"end": 10993,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 10900,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11018,
											"end": 11020,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11013,
											"end": 11016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11009,
											"end": 11021,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11002,
											"end": 11021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11002,
											"end": 11021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10661,
											"end": 11027,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10661,
											"end": 11027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10661,
											"end": 11027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10661,
											"end": 11027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11033,
											"end": 11452,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 11033,
											"end": 11452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11199,
											"end": 11203,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11237,
											"end": 11239,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11226,
											"end": 11235,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11222,
											"end": 11240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11214,
											"end": 11240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11214,
											"end": 11240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11286,
											"end": 11295,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11280,
											"end": 11284,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11276,
											"end": 11296,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11272,
											"end": 11273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11261,
											"end": 11270,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11257,
											"end": 11274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11314,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 11440,
											"end": 11444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11314,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 11314,
											"end": 11445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11314,
											"end": 11445,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 11314,
											"end": 11445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11306,
											"end": 11445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11306,
											"end": 11445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11033,
											"end": 11452,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11033,
											"end": 11452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11033,
											"end": 11452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11033,
											"end": 11452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11458,
											"end": 11627,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 11458,
											"end": 11627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11598,
											"end": 11619,
											"name": "PUSH",
											"source": 9,
											"value": "54726164696E67206E6F7420656E61626C656400000000000000000000000000"
										},
										{
											"begin": 11594,
											"end": 11595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11586,
											"end": 11592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11582,
											"end": 11596,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11575,
											"end": 11620,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11458,
											"end": 11627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11458,
											"end": 11627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11633,
											"end": 11999,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 11633,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11775,
											"end": 11778,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11796,
											"end": 11863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 11860,
											"end": 11862,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 11855,
											"end": 11858,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11796,
											"end": 11863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11863,
											"name": "tag",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 11796,
											"end": 11863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11789,
											"end": 11863,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11789,
											"end": 11863,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11872,
											"end": 11965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 11961,
											"end": 11964,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11872,
											"end": 11965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 11872,
											"end": 11965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11872,
											"end": 11965,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 11872,
											"end": 11965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11990,
											"end": 11992,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11985,
											"end": 11988,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11981,
											"end": 11993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11974,
											"end": 11993,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11974,
											"end": 11993,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11633,
											"end": 11999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11633,
											"end": 11999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11633,
											"end": 11999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11633,
											"end": 11999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12005,
											"end": 12424,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 12005,
											"end": 12424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12209,
											"end": 12211,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12198,
											"end": 12207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12194,
											"end": 12212,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12186,
											"end": 12212,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12186,
											"end": 12212,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12258,
											"end": 12267,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12252,
											"end": 12256,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12248,
											"end": 12268,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12244,
											"end": 12245,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12233,
											"end": 12242,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12229,
											"end": 12246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12222,
											"end": 12269,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12286,
											"end": 12417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 12412,
											"end": 12416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12286,
											"end": 12417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 12286,
											"end": 12417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12286,
											"end": 12417,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 12286,
											"end": 12417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12278,
											"end": 12417,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12278,
											"end": 12417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12005,
											"end": 12424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12005,
											"end": 12424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12005,
											"end": 12424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12005,
											"end": 12424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12430,
											"end": 12607,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 12430,
											"end": 12607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12599,
											"name": "PUSH",
											"source": 9,
											"value": "5472616E736665722065786365656473206D617820616D6F756E740000000000"
										},
										{
											"begin": 12566,
											"end": 12567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12558,
											"end": 12564,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12547,
											"end": 12600,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12430,
											"end": 12607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12430,
											"end": 12607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12979,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 12613,
											"end": 12979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12758,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12776,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 12840,
											"end": 12842,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 12835,
											"end": 12838,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12776,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 12776,
											"end": 12843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12776,
											"end": 12843,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 12776,
											"end": 12843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12769,
											"end": 12843,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12769,
											"end": 12843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12852,
											"end": 12945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 12941,
											"end": 12944,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12852,
											"end": 12945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 12852,
											"end": 12945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12852,
											"end": 12945,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 12852,
											"end": 12945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12970,
											"end": 12972,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12965,
											"end": 12968,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 12973,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12954,
											"end": 12973,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12954,
											"end": 12973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12985,
											"end": 13404,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 12985,
											"end": 13404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13151,
											"end": 13155,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13189,
											"end": 13191,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13178,
											"end": 13187,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13174,
											"end": 13192,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13166,
											"end": 13192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13166,
											"end": 13192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13238,
											"end": 13247,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13232,
											"end": 13236,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13228,
											"end": 13248,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13224,
											"end": 13225,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13213,
											"end": 13222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13226,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13202,
											"end": 13249,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13266,
											"end": 13397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 13392,
											"end": 13396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13266,
											"end": 13397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 13266,
											"end": 13397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13266,
											"end": 13397,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 13266,
											"end": 13397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13397,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12985,
											"end": 13404,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12985,
											"end": 13404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12985,
											"end": 13404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12985,
											"end": 13404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13410,
											"end": 13575,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 13410,
											"end": 13575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13550,
											"end": 13567,
											"name": "PUSH",
											"source": 9,
											"value": "436F6F6C646F776E206163746976650000000000000000000000000000000000"
										},
										{
											"begin": 13546,
											"end": 13547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13538,
											"end": 13544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13534,
											"end": 13548,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13527,
											"end": 13568,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13410,
											"end": 13575,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13410,
											"end": 13575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13581,
											"end": 13947,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 13581,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13723,
											"end": 13726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13744,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 13808,
											"end": 13810,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 13803,
											"end": 13806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13744,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 13744,
											"end": 13811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13744,
											"end": 13811,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 13744,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13737,
											"end": 13811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13737,
											"end": 13811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13820,
											"end": 13913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 13909,
											"end": 13912,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13820,
											"end": 13913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 13820,
											"end": 13913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13820,
											"end": 13913,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 13820,
											"end": 13913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13938,
											"end": 13940,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13933,
											"end": 13936,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13929,
											"end": 13941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13922,
											"end": 13941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13922,
											"end": 13941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13581,
											"end": 13947,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13581,
											"end": 13947,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13581,
											"end": 13947,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13581,
											"end": 13947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13953,
											"end": 14372,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 13953,
											"end": 14372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14119,
											"end": 14123,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14157,
											"end": 14159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14146,
											"end": 14155,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14142,
											"end": 14160,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14134,
											"end": 14160,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14134,
											"end": 14160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14206,
											"end": 14215,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14200,
											"end": 14204,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14196,
											"end": 14216,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14192,
											"end": 14193,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14181,
											"end": 14190,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14177,
											"end": 14194,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14234,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 14360,
											"end": 14364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14234,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 14234,
											"end": 14365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14234,
											"end": 14365,
											"name": "tag",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 14234,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14226,
											"end": 14365,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14226,
											"end": 14365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13953,
											"end": 14372,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13953,
											"end": 14372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13953,
											"end": 14372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13953,
											"end": 14372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14378,
											"end": 14545,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 14378,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14518,
											"end": 14537,
											"name": "PUSH",
											"source": 9,
											"value": "486F6C642074696D65206E6F74206D6574000000000000000000000000000000"
										},
										{
											"begin": 14514,
											"end": 14515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14506,
											"end": 14512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14502,
											"end": 14516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14495,
											"end": 14538,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14378,
											"end": 14545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14378,
											"end": 14545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14551,
											"end": 14917,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 14551,
											"end": 14917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14693,
											"end": 14696,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14714,
											"end": 14781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 14778,
											"end": 14780,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 14773,
											"end": 14776,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14714,
											"end": 14781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 14714,
											"end": 14781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14714,
											"end": 14781,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 14714,
											"end": 14781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14781,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14790,
											"end": 14883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 14879,
											"end": 14882,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14790,
											"end": 14883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 14790,
											"end": 14883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14790,
											"end": 14883,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 14790,
											"end": 14883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14908,
											"end": 14910,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14903,
											"end": 14906,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14899,
											"end": 14911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14892,
											"end": 14911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14892,
											"end": 14911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14551,
											"end": 14917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14551,
											"end": 14917,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14551,
											"end": 14917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14551,
											"end": 14917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14923,
											"end": 15342,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 14923,
											"end": 15342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15089,
											"end": 15093,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15127,
											"end": 15129,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15116,
											"end": 15125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15112,
											"end": 15130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15104,
											"end": 15130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15104,
											"end": 15130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15176,
											"end": 15185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15170,
											"end": 15174,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15166,
											"end": 15186,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15162,
											"end": 15163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15151,
											"end": 15160,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15147,
											"end": 15164,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15140,
											"end": 15187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15204,
											"end": 15335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 15330,
											"end": 15334,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15204,
											"end": 15335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 15204,
											"end": 15335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15204,
											"end": 15335,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 15204,
											"end": 15335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15196,
											"end": 15335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15196,
											"end": 15335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14923,
											"end": 15342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14923,
											"end": 15342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14923,
											"end": 15342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14923,
											"end": 15342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15348,
											"end": 15523,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 15348,
											"end": 15523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15488,
											"end": 15515,
											"name": "PUSH",
											"source": 9,
											"value": "45786365656473206D61782077616C6C657420616D6F756E7400000000000000"
										},
										{
											"begin": 15484,
											"end": 15485,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15476,
											"end": 15482,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15472,
											"end": 15486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15465,
											"end": 15516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15348,
											"end": 15523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15348,
											"end": 15523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15671,
											"end": 15674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 15756,
											"end": 15758,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 15751,
											"end": 15754,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 15692,
											"end": 15759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15685,
											"end": 15759,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15685,
											"end": 15759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 15857,
											"end": 15860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 15768,
											"end": 15861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15886,
											"end": 15888,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15881,
											"end": 15884,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15877,
											"end": 15889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15870,
											"end": 15889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15870,
											"end": 15889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16067,
											"end": 16071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16105,
											"end": 16107,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16094,
											"end": 16103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16108,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16082,
											"end": 16108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16082,
											"end": 16108,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16154,
											"end": 16163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16148,
											"end": 16152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16144,
											"end": 16164,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16140,
											"end": 16141,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16129,
											"end": 16138,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16125,
											"end": 16142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16118,
											"end": 16165,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 16308,
											"end": 16312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 16182,
											"end": 16313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16174,
											"end": 16313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16174,
											"end": 16313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15901,
											"end": 16320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16326,
											"end": 16493,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 16326,
											"end": 16493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16466,
											"end": 16485,
											"name": "PUSH",
											"source": 9,
											"value": "496E76616C696420726563697069656E74000000000000000000000000000000"
										},
										{
											"begin": 16462,
											"end": 16463,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16454,
											"end": 16460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16450,
											"end": 16464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16443,
											"end": 16486,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16326,
											"end": 16493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16326,
											"end": 16493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16499,
											"end": 16865,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 16499,
											"end": 16865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16641,
											"end": 16644,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16662,
											"end": 16729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 16726,
											"end": 16728,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 16721,
											"end": 16724,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16662,
											"end": 16729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 16662,
											"end": 16729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16662,
											"end": 16729,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 16662,
											"end": 16729,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16655,
											"end": 16729,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16655,
											"end": 16729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16738,
											"end": 16831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 16827,
											"end": 16830,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16738,
											"end": 16831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 16738,
											"end": 16831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16738,
											"end": 16831,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 16738,
											"end": 16831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16856,
											"end": 16858,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16851,
											"end": 16854,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16847,
											"end": 16859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16840,
											"end": 16859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16840,
											"end": 16859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16499,
											"end": 16865,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16499,
											"end": 16865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16499,
											"end": 16865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16499,
											"end": 16865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16871,
											"end": 17290,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 16871,
											"end": 17290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17037,
											"end": 17041,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17075,
											"end": 17077,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17064,
											"end": 17073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17060,
											"end": 17078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17052,
											"end": 17078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17052,
											"end": 17078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17124,
											"end": 17133,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17118,
											"end": 17122,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17114,
											"end": 17134,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17110,
											"end": 17111,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17099,
											"end": 17108,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17095,
											"end": 17112,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17088,
											"end": 17135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17152,
											"end": 17283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 17278,
											"end": 17282,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17152,
											"end": 17283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 17152,
											"end": 17283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17152,
											"end": 17283,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 17152,
											"end": 17283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17144,
											"end": 17283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17144,
											"end": 17283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16871,
											"end": 17290,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16871,
											"end": 17290,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16871,
											"end": 17290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16871,
											"end": 17290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17296,
											"end": 17476,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 17296,
											"end": 17476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17344,
											"end": 17421,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17341,
											"end": 17342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17334,
											"end": 17422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17441,
											"end": 17445,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 17438,
											"end": 17439,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17465,
											"end": 17469,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17462,
											"end": 17463,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17455,
											"end": 17470,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17482,
											"end": 17660,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 17482,
											"end": 17660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17622,
											"end": 17652,
											"name": "PUSH",
											"source": 9,
											"value": "43616E6E6F7420776974686472617720746F6B656E20697473656C6600000000"
										},
										{
											"begin": 17618,
											"end": 17619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17610,
											"end": 17616,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17606,
											"end": 17620,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17599,
											"end": 17653,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17482,
											"end": 17660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17482,
											"end": 17660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17666,
											"end": 18032,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 17666,
											"end": 18032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17808,
											"end": 17811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17829,
											"end": 17896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 17893,
											"end": 17895,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 17888,
											"end": 17891,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17829,
											"end": 17896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 17829,
											"end": 17896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17829,
											"end": 17896,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 17829,
											"end": 17896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17822,
											"end": 17896,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17822,
											"end": 17896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17905,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 17994,
											"end": 17997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17905,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 17905,
											"end": 17998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17905,
											"end": 17998,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 17905,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18023,
											"end": 18025,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18018,
											"end": 18021,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18014,
											"end": 18026,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18007,
											"end": 18026,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18007,
											"end": 18026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17666,
											"end": 18032,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17666,
											"end": 18032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17666,
											"end": 18032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17666,
											"end": 18032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18038,
											"end": 18457,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 18038,
											"end": 18457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18204,
											"end": 18208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18242,
											"end": 18244,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18231,
											"end": 18240,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18227,
											"end": 18245,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18219,
											"end": 18245,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18219,
											"end": 18245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18291,
											"end": 18300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18285,
											"end": 18289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18281,
											"end": 18301,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18277,
											"end": 18278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18266,
											"end": 18275,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18262,
											"end": 18279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18255,
											"end": 18302,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18319,
											"end": 18450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 18445,
											"end": 18449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18319,
											"end": 18450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 18319,
											"end": 18450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18319,
											"end": 18450,
											"name": "tag",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 18319,
											"end": 18450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18311,
											"end": 18450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18311,
											"end": 18450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18038,
											"end": 18457,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18038,
											"end": 18457,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18038,
											"end": 18457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18038,
											"end": 18457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18606,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 18463,
											"end": 18606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18520,
											"end": 18525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18551,
											"end": 18557,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18545,
											"end": 18558,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 18536,
											"end": 18558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18536,
											"end": 18558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18567,
											"end": 18600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 18594,
											"end": 18599,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18567,
											"end": 18600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 18567,
											"end": 18600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18567,
											"end": 18600,
											"name": "tag",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 18567,
											"end": 18600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18606,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18606,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18612,
											"end": 18963,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 18612,
											"end": 18963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18682,
											"end": 18688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18731,
											"end": 18733,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18719,
											"end": 18728,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18710,
											"end": 18717,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18706,
											"end": 18729,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18702,
											"end": 18734,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 18699,
											"end": 18818,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18699,
											"end": 18818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 18699,
											"end": 18818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 18816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 18737,
											"end": 18816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 18737,
											"end": 18816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 18816,
											"name": "tag",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 18737,
											"end": 18816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18699,
											"end": 18818,
											"name": "tag",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 18699,
											"end": 18818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18857,
											"end": 18858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18882,
											"end": 18946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 18938,
											"end": 18945,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18929,
											"end": 18935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18918,
											"end": 18927,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18914,
											"end": 18936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18882,
											"end": 18946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 18882,
											"end": 18946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18882,
											"end": 18946,
											"name": "tag",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 18882,
											"end": 18946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18872,
											"end": 18946,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18872,
											"end": 18946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18828,
											"end": 18956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18612,
											"end": 18963,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18612,
											"end": 18963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18612,
											"end": 18963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18612,
											"end": 18963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18612,
											"end": 18963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18969,
											"end": 19301,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 18969,
											"end": 19301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19090,
											"end": 19094,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19128,
											"end": 19130,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19117,
											"end": 19126,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19113,
											"end": 19131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19105,
											"end": 19131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19105,
											"end": 19131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19141,
											"end": 19212,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 19209,
											"end": 19210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19198,
											"end": 19207,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19194,
											"end": 19211,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19185,
											"end": 19191,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19141,
											"end": 19212,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 19141,
											"end": 19212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19141,
											"end": 19212,
											"name": "tag",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 19141,
											"end": 19212,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19222,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 19290,
											"end": 19292,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19279,
											"end": 19288,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19275,
											"end": 19293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19266,
											"end": 19272,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19222,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 19222,
											"end": 19294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19222,
											"end": 19294,
											"name": "tag",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 19222,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18969,
											"end": 19301,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 18969,
											"end": 19301,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18969,
											"end": 19301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18969,
											"end": 19301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18969,
											"end": 19301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18969,
											"end": 19301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19307,
											"end": 19444,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 19307,
											"end": 19444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19361,
											"end": 19366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19392,
											"end": 19398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19386,
											"end": 19399,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19377,
											"end": 19399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19377,
											"end": 19399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19408,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "601"
										},
										{
											"begin": 19432,
											"end": 19437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19408,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 19408,
											"end": 19438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19408,
											"end": 19438,
											"name": "tag",
											"source": 9,
											"value": "601"
										},
										{
											"begin": 19408,
											"end": 19438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19307,
											"end": 19444,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 19307,
											"end": 19444,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19307,
											"end": 19444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19307,
											"end": 19444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19307,
											"end": 19444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19450,
											"end": 19795,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 19450,
											"end": 19795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19517,
											"end": 19523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19566,
											"end": 19568,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19554,
											"end": 19563,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19545,
											"end": 19552,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19541,
											"end": 19564,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19537,
											"end": 19569,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 19534,
											"end": 19653,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19534,
											"end": 19653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 19534,
											"end": 19653,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19572,
											"end": 19651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 19572,
											"end": 19651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 19572,
											"end": 19651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19572,
											"end": 19651,
											"name": "tag",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 19572,
											"end": 19651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19534,
											"end": 19653,
											"name": "tag",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 19534,
											"end": 19653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19692,
											"end": 19693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19717,
											"end": 19778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 19770,
											"end": 19777,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19761,
											"end": 19767,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19750,
											"end": 19759,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19746,
											"end": 19768,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19717,
											"end": 19778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 19717,
											"end": 19778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19717,
											"end": 19778,
											"name": "tag",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 19717,
											"end": 19778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19707,
											"end": 19778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19707,
											"end": 19778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19663,
											"end": 19788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19450,
											"end": 19795,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 19450,
											"end": 19795,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19450,
											"end": 19795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19450,
											"end": 19795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19450,
											"end": 19795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19801,
											"end": 19981,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 19801,
											"end": 19981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19849,
											"end": 19926,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19846,
											"end": 19847,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19839,
											"end": 19927,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19946,
											"end": 19950,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 19943,
											"end": 19944,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 19936,
											"end": 19951,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19970,
											"end": 19974,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 19967,
											"end": 19968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19960,
											"end": 19975,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 19987,
											"end": 20178,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 19987,
											"end": 20178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20027,
											"end": 20030,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20046,
											"end": 20066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 20064,
											"end": 20065,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20046,
											"end": 20066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 20046,
											"end": 20066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20046,
											"end": 20066,
											"name": "tag",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 20046,
											"end": 20066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20041,
											"end": 20066,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20041,
											"end": 20066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20080,
											"end": 20100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 20098,
											"end": 20099,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20080,
											"end": 20100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 20080,
											"end": 20100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20080,
											"end": 20100,
											"name": "tag",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 20080,
											"end": 20100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20075,
											"end": 20100,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 20075,
											"end": 20100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20123,
											"end": 20124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20120,
											"end": 20121,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20116,
											"end": 20125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20109,
											"end": 20125,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20109,
											"end": 20125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20144,
											"end": 20147,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20141,
											"end": 20142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20138,
											"end": 20148,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 20135,
											"end": 20171,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20135,
											"end": 20171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 20135,
											"end": 20171,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20151,
											"end": 20169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "611"
										},
										{
											"begin": 20151,
											"end": 20169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 20151,
											"end": 20169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20151,
											"end": 20169,
											"name": "tag",
											"source": 9,
											"value": "611"
										},
										{
											"begin": 20151,
											"end": 20169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20135,
											"end": 20171,
											"name": "tag",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 20135,
											"end": 20171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19987,
											"end": 20178,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 19987,
											"end": 20178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19987,
											"end": 20178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19987,
											"end": 20178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19987,
											"end": 20178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20184,
											"end": 20365,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 20184,
											"end": 20365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20324,
											"end": 20357,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 20320,
											"end": 20321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20312,
											"end": 20318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20308,
											"end": 20322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20301,
											"end": 20358,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20184,
											"end": 20365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20184,
											"end": 20365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20371,
											"end": 20737,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 20371,
											"end": 20737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20513,
											"end": 20516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20534,
											"end": 20601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 20598,
											"end": 20600,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 20593,
											"end": 20596,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20534,
											"end": 20601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 20534,
											"end": 20601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20534,
											"end": 20601,
											"name": "tag",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 20534,
											"end": 20601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20527,
											"end": 20601,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20527,
											"end": 20601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20610,
											"end": 20703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 20699,
											"end": 20702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20610,
											"end": 20703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 20610,
											"end": 20703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20610,
											"end": 20703,
											"name": "tag",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 20610,
											"end": 20703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20728,
											"end": 20730,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20723,
											"end": 20726,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20719,
											"end": 20731,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20712,
											"end": 20731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20712,
											"end": 20731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20371,
											"end": 20737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20371,
											"end": 20737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20371,
											"end": 20737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20371,
											"end": 20737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20743,
											"end": 21162,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 20743,
											"end": 21162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20909,
											"end": 20913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20947,
											"end": 20949,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20936,
											"end": 20945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20924,
											"end": 20950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20924,
											"end": 20950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20996,
											"end": 21005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20990,
											"end": 20994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20986,
											"end": 21006,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20982,
											"end": 20983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20971,
											"end": 20980,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20967,
											"end": 20984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20960,
											"end": 21007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21024,
											"end": 21155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 21150,
											"end": 21154,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21024,
											"end": 21155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 21024,
											"end": 21155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21024,
											"end": 21155,
											"name": "tag",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 21024,
											"end": 21155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21016,
											"end": 21155,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21016,
											"end": 21155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20743,
											"end": 21162,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20743,
											"end": 21162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20743,
											"end": 21162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20743,
											"end": 21162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21168,
											"end": 21610,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 21168,
											"end": 21610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21317,
											"end": 21321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21355,
											"end": 21357,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 21344,
											"end": 21353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21340,
											"end": 21358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21332,
											"end": 21358,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21332,
											"end": 21358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21368,
											"end": 21439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "619"
										},
										{
											"begin": 21436,
											"end": 21437,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21425,
											"end": 21434,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21421,
											"end": 21438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21412,
											"end": 21418,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 21368,
											"end": 21439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 21368,
											"end": 21439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21368,
											"end": 21439,
											"name": "tag",
											"source": 9,
											"value": "619"
										},
										{
											"begin": 21368,
											"end": 21439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21449,
											"end": 21521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "620"
										},
										{
											"begin": 21517,
											"end": 21519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21506,
											"end": 21515,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21502,
											"end": 21520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21493,
											"end": 21499,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 21449,
											"end": 21521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 21449,
											"end": 21521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21449,
											"end": 21521,
											"name": "tag",
											"source": 9,
											"value": "620"
										},
										{
											"begin": 21449,
											"end": 21521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21531,
											"end": 21603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 21599,
											"end": 21601,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21588,
											"end": 21597,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21584,
											"end": 21602,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21575,
											"end": 21581,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 21531,
											"end": 21603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 21531,
											"end": 21603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21531,
											"end": 21603,
											"name": "tag",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 21531,
											"end": 21603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21168,
											"end": 21610,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 21168,
											"end": 21610,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 21168,
											"end": 21610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21168,
											"end": 21610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21168,
											"end": 21610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21168,
											"end": 21610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21168,
											"end": 21610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Jimp.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_SUPPLY()": "32cb6b0c",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchUpdateBlacklist(address[],bool)": "6072e6a8",
							"batchUpdateWhitelist(address[],bool)": "611274c5",
							"decimals()": "313ce567",
							"emergencyWithdraw(address)": "6ff1c9bc",
							"initialized()": "158ef93e",
							"isBlacklisted(address)": "fe575a87",
							"isWhitelisted(address)": "3af32abf",
							"lastTransferTime(address)": "0d2d8a31",
							"maxTransferAmount()": "a9e75723",
							"maxWalletAmount()": "aa4bde28",
							"minHoldTime()": "330671ad",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setTrading(bool)": "8f70ccf7",
							"symbol()": "95d89b41",
							"tokenReceiveTime(address)": "283af019",
							"totalSupply()": "18160ddd",
							"tradingEnabled()": "4ada218b",
							"transfer(address,uint256)": "a9059cbb",
							"transferCooldown()": "68f16293",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateBlacklist(address,bool)": "9155e083",
							"updateSecurityParams(uint256,uint256,uint256,uint256)": "02cd093d",
							"updateWhitelist(address,bool)": "0d392cd9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"BlacklistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxTransfer\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxWallet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newHoldTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCooldown\",\"type\":\"uint256\"}],\"name\":\"SecurityParamsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initialHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"TradingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"WhitelistUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"batchUpdateBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"batchUpdateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastTransferTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransferAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWalletAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minHoldTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenReceiveTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"updateBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTransfer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_holdTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cooldown\",\"type\":\"uint256\"}],\"name\":\"updateSecurityParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"updateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Jimp.sol\":\"Prophecy_Jimpsons\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/Jimp.sol\":{\"keccak256\":\"0x4a1abecabde1f44a6e223a5fe2ccd829022a2eff2f7975d45d7ef92ebcd9e346\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1fb907c60128948a22db148e8a240e3494e691eb0cdb0ababcc26b207d07c56\",\"dweb:/ipfs/QmWQ3xvoPxoYdTYQXpwQCX1b2c7Z3BhZ9znAfm8r7SyzLb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1336,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "initialized",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1338,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "maxTransferAmount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1340,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "minHoldTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1342,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "maxWalletAmount",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1344,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "tradingEnabled",
								"offset": 0,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 1348,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "lastTransferTime",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1352,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "tokenReceiveTime",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1356,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "isBlacklisted",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1360,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "isWhitelisted",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1362,
								"contract": "contracts/Jimp.sol:Prophecy_Jimpsons",
								"label": "transferCooldown",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 999,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								998
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 969,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 968,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 999,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								968,
								942,
								998
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 864,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 864,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 864,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 864,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 864,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 864,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 864,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 864,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 864,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 864,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 864,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 864,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 864,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 864,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 864,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 864,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10504:388:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10576:310:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10619:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10637:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10656:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10633:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10663:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10715:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10724:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10742:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10813:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10820:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10829:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10848:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10804:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 864,
									"src": "10415:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9788:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10790:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 943,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 948,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:5"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 968,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 968,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 968,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 969,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 978,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 998,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 984,
												"id": 987,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 998,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 993,
												"id": 995,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 998,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1310
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1001,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1310,
							"linearizedBaseContracts": [
								1310
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 1031,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															1014
														],
														"declarations": [
															{
																"constant": false,
																"id": 1014,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1031,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1013,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1018,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1015,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1016,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1020,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1026,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1024,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1012,
															"id": 1025,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1028,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1029,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1012,
														"id": 1030,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1008,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 1310,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 1059,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1046,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1052,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1050,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1044,
															"id": 1051,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1054,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1055,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1057,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1044,
														"id": 1058,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 1310,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 1101,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1080,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1072,
															"id": 1079,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															1082
														],
														"declarations": [
															{
																"constant": false,
																"id": 1082,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1101,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1081,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1086,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1083,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1084,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1087,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1088,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1090,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1096,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1094,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1072,
															"id": 1095,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1098,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1099,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1072,
														"id": 1100,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1068,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 1310,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 1129,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1115,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1122,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1120,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1114,
															"id": 1121,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1124,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1125,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1127,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1114,
														"id": 1128,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 1310,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 1157,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1143,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1150,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1148,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1142,
															"id": 1149,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1152,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1153,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1155,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1142,
														"id": 1156,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 1310,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1169,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1170,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1172,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 1310,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1184,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1185,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1187,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 1310,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1198,
												"id": 1202,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 1310,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1214,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1215,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1213,
												"id": 1217,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 1310,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1229,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1230,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1232,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 1310,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "5054:106:7",
										"statements": [
											{
												"id": 1257,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1247,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "5096:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1248,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "5101:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1250,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "5104:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1246,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1252,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1253,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "5138:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1254,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "5142:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1245,
														"id": 1256,
														"nodeType": "Return",
														"src": "5131:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "4972:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "4983:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "4994:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:7"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5045:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:7"
									},
									"scope": 1310,
									"src": "4959:201:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "5739:105:7",
										"statements": [
											{
												"id": 1282,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1272,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "5781:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1275,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "5788:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1271,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1277,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1278,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "5822:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "5826:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1270,
														"id": 1281,
														"nodeType": "Return",
														"src": "5815:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5679:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:7"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5730:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:7"
									},
									"scope": 1310,
									"src": "5644:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "6585:105:7",
										"statements": [
											{
												"id": 1307,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1297,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1289,
																		"src": "6627:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1300,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "6634:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1296,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1302,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1303,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "6668:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1304,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "6672:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1295,
														"id": 1306,
														"nodeType": "Return",
														"src": "6661:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6503:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6514:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6525:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:7"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6576:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:7"
									},
									"scope": 1310,
									"src": "6490:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1311,
							"src": "482:6210:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:7"
				},
				"id": 7
			},
			"contracts/Jimp.sol": {
				"ast": {
					"absolutePath": "contracts/Jimp.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						],
						"Ownable": [
							147
						],
						"Prophecy_Jimpsons": [
							1876
						],
						"ReentrancyGuard": [
							349
						],
						"SafeMath": [
							1310
						]
					},
					"id": 1877,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1877,
							"sourceUnit": 865,
							"src": "61:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1877,
							"sourceUnit": 148,
							"src": "118:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1315,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1877,
							"sourceUnit": 350,
							"src": "172:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1877,
							"sourceUnit": 1311,
							"src": "236:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1317,
										"name": "ERC20",
										"nameLocations": [
											"327:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "327:5:8"
									},
									"id": 1318,
									"nodeType": "InheritanceSpecifier",
									"src": "327:5:8"
								},
								{
									"arguments": [
										{
											"expression": {
												"id": 1320,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "342:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 1321,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "346:6:8",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "342:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 1319,
										"name": "Ownable",
										"nameLocations": [
											"334:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "334:7:8"
									},
									"id": 1322,
									"nodeType": "InheritanceSpecifier",
									"src": "334:19:8"
								},
								{
									"baseName": {
										"id": 1323,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"355:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "355:15:8"
									},
									"id": 1324,
									"nodeType": "InheritanceSpecifier",
									"src": "355:15:8"
								}
							],
							"canonicalName": "Prophecy_Jimpsons",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1876,
							"linearizedBaseContracts": [
								1876,
								349,
								147,
								864,
								189,
								968,
								942,
								998
							],
							"name": "Prophecy_Jimpsons",
							"nameLocation": "306:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1327,
									"libraryName": {
										"id": 1325,
										"name": "SafeMath",
										"nameLocations": [
											"384:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "384:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "378:27:8",
									"typeName": {
										"id": 1326,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "397:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 1334,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "437:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1876,
									"src": "413:60:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1328,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "413:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000000"
										},
										"id": 1333,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31305f3030305f3030305f303030",
											"id": 1329,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "450:14:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "10_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1332,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1330,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "467:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1331,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "471:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "467:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "450:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "158ef93e",
									"id": 1336,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "492:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1876,
									"src": "480:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1335,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "480:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9e75723",
									"id": 1338,
									"mutability": "mutable",
									"name": "maxTransferAmount",
									"nameLocation": "525:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1876,
									"src": "510:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "330671ad",
									"id": 1340,
									"mutability": "mutable",
									"name": "minHoldTime",
									"nameLocation": "614:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1876,
									"src": "599:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1339,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "599:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aa4bde28",
									"id": 1342,
									"mutability": "mutable",
									"name": "maxWalletAmount",
									"nameLocation": "696:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1876,
									"src": "681:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1341,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "681:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ada218b",
									"id": 1344,
									"mutability": "mutable",
									"name": "tradingEnabled",
									"nameLocation": "768:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1876,
									"src": "756:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1343,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "756:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d2d8a31",
									"id": 1348,
									"mutability": "mutable",
									"name": "lastTransferTime",
									"nameLocation": "855:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1876,
									"src": "820:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1347,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1345,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "828:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "820:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1346,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "839:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "283af019",
									"id": 1352,
									"mutability": "mutable",
									"name": "tokenReceiveTime",
									"nameLocation": "913:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1876,
									"src": "878:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1351,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1349,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "886:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "878:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1350,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "897:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fe575a87",
									"id": 1356,
									"mutability": "mutable",
									"name": "isBlacklisted",
									"nameLocation": "1004:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1876,
									"src": "972:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1355,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "980:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "972:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1354,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "991:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3af32abf",
									"id": 1360,
									"mutability": "mutable",
									"name": "isWhitelisted",
									"nameLocation": "1084:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1876,
									"src": "1052:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1359,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1357,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1060:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1052:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1358,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1071:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "68f16293",
									"id": 1362,
									"mutability": "mutable",
									"name": "transferCooldown",
									"nameLocation": "1147:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1876,
									"src": "1132:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1361,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1132:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9d5570c03a71af73640da09c132d73bb3efe7ca4f55516a1afc2597cbdfd620c",
									"id": 1368,
									"name": "TokensInitialized",
									"nameLocation": "1193:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"indexed": true,
												"mutability": "mutable",
												"name": "initialHolder",
												"nameLocation": "1227:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "1211:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1250:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "1242:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:47:8"
									},
									"src": "1187:71:8"
								},
								{
									"anonymous": false,
									"eventSelector": "beda7dca7bc1b3e80b871f4818129ec73b771581f803d553aeb3484098e5f65a",
									"id": 1372,
									"name": "TradingEnabled",
									"nameLocation": "1270:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"indexed": false,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "1290:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1285:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1285:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:14:8"
									},
									"src": "1264:35:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac",
									"id": 1378,
									"name": "BlacklistUpdated",
									"nameLocation": "1311:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1344:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "1328:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1358:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "1353:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1353:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1327:38:8"
									},
									"src": "1305:61:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
									"id": 1384,
									"name": "WhitelistUpdated",
									"nameLocation": "1378:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1411:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "1395:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1425:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "1420:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1381,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1420:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1394:38:8"
									},
									"src": "1372:61:8"
								},
								{
									"anonymous": false,
									"eventSelector": "bb5d5c94dff5adb0bc0e043a6c2cf9bb8153231069831102f0e8e53b89924f1f",
									"id": 1394,
									"name": "SecurityParamsUpdated",
									"nameLocation": "1445:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxTransfer",
												"nameLocation": "1485:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1477:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1477:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxWallet",
												"nameLocation": "1518:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1510:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"indexed": false,
												"mutability": "mutable",
												"name": "newHoldTime",
												"nameLocation": "1549:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1541:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"indexed": false,
												"mutability": "mutable",
												"name": "newCooldown",
												"nameLocation": "1579:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1571:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1466:131:8"
									},
									"src": "1439:159:8"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "1655:758:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1674:12:8",
															"subExpression": {
																"id": 1402,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "1675:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e697469616c697a6564",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1688:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															},
															"value": "Already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															}
														],
														"id": 1401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1666:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1666:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "1666:44:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1408,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1809:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1813:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1809:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1410,
															"name": "MAX_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "1821:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1407,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1803:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1803:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "1803:29:8"
											},
											{
												"expression": {
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1413,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "1895:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1909:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1895:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "1895:18:8"
											},
											{
												"expression": {
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1417,
														"name": "maxTransferAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "1924:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000"
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "315f303030",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1944:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1952:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1956:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "1952:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1944:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000"
														}
													},
													"src": "1924:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "1924:34:8"
											},
											{
												"expression": {
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1425,
														"name": "maxWalletAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "1969:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000"
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130305f303030",
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1987:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000_by_1",
																"typeString": "int_const 100000"
															},
															"value": "100_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1997:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2001:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "1997:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1987:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000"
														}
													},
													"src": "1969:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "1969:34:8"
											},
											{
												"expression": {
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1433,
														"name": "minHoldTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "2037:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2051:6:8",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "2037:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "2037:20:8"
											},
											{
												"expression": {
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1437,
														"name": "transferCooldown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "2110:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3630",
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2129:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "60"
													},
													"src": "2110:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "2110:21:8"
											},
											{
												"expression": {
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1441,
														"name": "tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "2184:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2201:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2184:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "2184:22:8"
											},
											{
												"expression": {
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1445,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "2268:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1448,
														"indexExpression": {
															"expression": {
																"id": 1446,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2282:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2286:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2282:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2268:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2268:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "2268:32:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1453,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2382:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2386:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2382:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1455,
															"name": "MAX_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "2394:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1452,
														"name": "TokensInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "2364:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2364:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "EmitStatement",
												"src": "2359:46:8"
											}
										]
									},
									"id": 1459,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "50726f7068656379204a696d70736f6e73",
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1626:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4a6809af9a814177b64cc5f98399acebdf36c69226896a4f8b90c4f63142b786",
														"typeString": "literal_string \"Prophecy Jimpsons\""
													},
													"value": "Prophecy Jimpsons"
												},
												{
													"hexValue": "4a696d70",
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1647:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2e12eb14dd4fff838a742f45e715491aea1868d0b64d822d517ef103f1b680d3",
														"typeString": "literal_string \"Jimp\""
													},
													"value": "Jimp"
												}
											],
											"id": 1399,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1396,
												"name": "ERC20",
												"nameLocations": [
													"1620:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "1620:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1620:34:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1617:2:8"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1655:0:8"
									},
									"scope": 1876,
									"src": "1606:807:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "2530:916:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2549:20:8",
																"subExpression": {
																	"baseExpression": {
																		"id": 1468,
																		"name": "isBlacklisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "2550:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1470,
																	"indexExpression": {
																		"id": 1469,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "2564:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2550:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2573:18:8",
																"subExpression": {
																	"baseExpression": {
																		"id": 1472,
																		"name": "isBlacklisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "2574:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1474,
																	"indexExpression": {
																		"id": 1473,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "2588:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2574:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2549:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320626c61636b6c6973746564",
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2593:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																"typeString": "literal_string \"Address is blacklisted\""
															},
															"value": "Address is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																"typeString": "literal_string \"Address is blacklisted\""
															}
														],
														"id": 1467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2541:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2541:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "2541:77:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1481,
																	"name": "tradingEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1344,
																	"src": "2637:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1482,
																		"name": "isWhitelisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "2655:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1484,
																	"indexExpression": {
																		"id": 1483,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "2669:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2655:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2637:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"id": 1486,
																	"name": "isWhitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "2678:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1488,
																"indexExpression": {
																	"id": 1487,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "2692:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2678:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2637:58:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726164696e67206e6f7420656e61626c6564",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2697:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c",
																"typeString": "literal_string \"Trading not enabled\""
															},
															"value": "Trading not enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c",
																"typeString": "literal_string \"Trading not enabled\""
															}
														],
														"id": 1480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2629:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2629:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "2629:90:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "2744:20:8",
														"subExpression": {
															"baseExpression": {
																"id": 1493,
																"name": "isWhitelisted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1360,
																"src": "2745:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1495,
															"indexExpression": {
																"id": 1494,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "2759:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2745:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "2768:18:8",
														"subExpression": {
															"baseExpression": {
																"id": 1497,
																"name": "isWhitelisted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1360,
																"src": "2769:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1499,
															"indexExpression": {
																"id": 1498,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "2783:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2769:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2744:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "2740:687:8",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "2788:639:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1503,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1465,
																			"src": "2811:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1504,
																			"name": "maxTransferAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1338,
																			"src": "2821:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2811:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e736665722065786365656473206d617820616d6f756e74",
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2840:29:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f",
																			"typeString": "literal_string \"Transfer exceeds max amount\""
																		},
																		"value": "Transfer exceeds max amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_71ad3b54a64fa704569b815e21c0e11270a28dec7b3096d72119b80de846690f",
																			"typeString": "literal_string \"Transfer exceeds max amount\""
																		}
																	],
																	"id": 1502,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2803:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2803:67:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1508,
															"nodeType": "ExpressionStatement",
															"src": "2803:67:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1510,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2893:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2899:9:8",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "2893:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1516,
																					"name": "transferCooldown",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1362,
																					"src": "2939:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"baseExpression": {
																						"id": 1512,
																						"name": "lastTransferTime",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1348,
																						"src": "2912:16:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1514,
																					"indexExpression": {
																						"id": 1513,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1461,
																						"src": "2929:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2912:22:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2935:3:8",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1174,
																				"src": "2912:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2912:44:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2893:63:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "436f6f6c646f776e20616374697665",
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2958:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5",
																			"typeString": "literal_string \"Cooldown active\""
																		},
																		"value": "Cooldown active"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5",
																			"typeString": "literal_string \"Cooldown active\""
																		}
																	],
																	"id": 1509,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2885:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2885:91:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1521,
															"nodeType": "ExpressionStatement",
															"src": "2885:91:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1522,
																		"name": "tokenReceiveTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "3041:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1524,
																	"indexExpression": {
																		"id": 1523,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "3058:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3041:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3067:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3041:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1541,
															"nodeType": "IfStatement",
															"src": "3037:156:8",
															"trueBody": {
																"id": 1540,
																"nodeType": "Block",
																"src": "3070:123:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1528,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "3097:5:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3103:9:8",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "3097:15:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 1534,
																								"name": "minHoldTime",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1340,
																								"src": "3143:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"id": 1530,
																									"name": "tokenReceiveTime",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1352,
																									"src": "3116:16:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 1532,
																								"indexExpression": {
																									"id": 1531,
																									"name": "from",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1461,
																									"src": "3133:4:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3116:22:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1533,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3139:3:8",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1174,
																							"src": "3116:26:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1535,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3116:39:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3097:58:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "486f6c642074696d65206e6f74206d6574",
																					"id": 1537,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3157:19:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374",
																						"typeString": "literal_string \"Hold time not met\""
																					},
																					"value": "Hold time not met"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374",
																						"typeString": "literal_string \"Hold time not met\""
																					}
																				],
																				"id": 1527,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "3089:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3089:88:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1539,
																		"nodeType": "ExpressionStatement",
																		"src": "3089:88:8"
																	}
																]
															}
														},
														{
															"assignments": [
																1543
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1543,
																	"mutability": "mutable",
																	"name": "recipientBalance",
																	"nameLocation": "3283:16:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1558,
																	"src": "3275:24:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1542,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3275:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1550,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1548,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1465,
																		"src": "3320:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1545,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1463,
																				"src": "3312:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1544,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 450,
																			"src": "3302:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view returns (uint256)"
																			}
																		},
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3302:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3316:3:8",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1174,
																	"src": "3302:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3302:25:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3275:52:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1552,
																			"name": "recipientBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1543,
																			"src": "3350:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1553,
																			"name": "maxWalletAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1342,
																			"src": "3370:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3350:35:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45786365656473206d61782077616c6c657420616d6f756e74",
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3387:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a",
																			"typeString": "literal_string \"Exceeds max wallet amount\""
																		},
																		"value": "Exceeds max wallet amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_98fcc8d300340198f8e00c45f37b12f5d867ec116080e57746397f54f905932a",
																			"typeString": "literal_string \"Exceeds max wallet amount\""
																		}
																	],
																	"id": 1551,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3342:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3342:73:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1557,
															"nodeType": "ExpressionStatement",
															"src": "3342:73:8"
														}
													]
												}
											},
											{
												"id": 1560,
												"nodeType": "PlaceholderStatement",
												"src": "3437:1:8"
											}
										]
									},
									"id": 1562,
									"name": "transferCompliance",
									"nameLocation": "2469:18:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2496:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "2488:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2488:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2510:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "2502:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2522:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "2514:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2514:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2487:42:8"
									},
									"src": "2460:986:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										474
									],
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "3679:215:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1581,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "3698:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3712:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3704:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1582,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3704:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3704:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3698:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e74",
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3716:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															},
															"value": "Invalid recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															}
														],
														"id": 1580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3690:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3690:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "3690:46:8"
											},
											{
												"expression": {
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1590,
															"name": "tokenReceiveTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "3747:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1592,
														"indexExpression": {
															"id": 1591,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "3764:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3747:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1593,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3770:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3776:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3770:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3747:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1596,
												"nodeType": "ExpressionStatement",
												"src": "3747:38:8"
											},
											{
												"expression": {
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1597,
															"name": "lastTransferTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "3796:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1600,
														"indexExpression": {
															"expression": {
																"id": 1598,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3813:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3817:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3813:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3796:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1601,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3827:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3833:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3827:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3796:46:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1604,
												"nodeType": "ExpressionStatement",
												"src": "3796:46:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1607,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "3875:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1608,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "3879:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1605,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3860:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Prophecy_Jimpsons_$1876_$",
																"typeString": "type(contract super Prophecy_Jimpsons)"
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3866:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "3860:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3860:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1579,
												"id": 1610,
												"nodeType": "Return",
												"src": "3853:33:8"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1570,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3601:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3605:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3601:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1572,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1564,
													"src": "3613:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1573,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1566,
													"src": "3617:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1574,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1569,
												"name": "transferCompliance",
												"nameLocations": [
													"3582:18:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1562,
												"src": "3582:18:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3582:42:8"
										},
										{
											"id": 1576,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1575,
												"name": "nonReentrant",
												"nameLocations": [
													"3635:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "3635:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3635:12:8"
										}
									],
									"name": "transfer",
									"nameLocation": "3499:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1568,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3563:8:8"
									},
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3516:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3508:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3528:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3520:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3520:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3507:28:8"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3667:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3667:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:6:8"
									},
									"scope": 1876,
									"src": "3490:404:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										547
									],
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "4097:219:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1632,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1616,
																"src": "4116:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4130:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4122:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1633,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4122:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4122:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4116:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e74",
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4134:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															},
															"value": "Invalid recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															}
														],
														"id": 1631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4108:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4108:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "4108:46:8"
											},
											{
												"expression": {
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1641,
															"name": "tokenReceiveTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "4165:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1643,
														"indexExpression": {
															"id": 1642,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "4182:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4165:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1644,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4188:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4194:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4188:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4165:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "4165:38:8"
											},
											{
												"expression": {
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1648,
															"name": "lastTransferTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "4214:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1650,
														"indexExpression": {
															"id": 1649,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "4231:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4214:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1651,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4239:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4245:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4239:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4214:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "4214:40:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1657,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "4291:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1658,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "4297:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1659,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "4301:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1655,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4272:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Prophecy_Jimpsons_$1876_$",
																"typeString": "type(contract super Prophecy_Jimpsons)"
															}
														},
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4278:12:8",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 547,
														"src": "4272:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1661,
												"nodeType": "Return",
												"src": "4265:43:8"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1622,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1614,
													"src": "4028:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1623,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1616,
													"src": "4034:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1624,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1618,
													"src": "4038:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1625,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1621,
												"name": "transferCompliance",
												"nameLocations": [
													"4009:18:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1562,
												"src": "4009:18:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4009:36:8"
										},
										{
											"id": 1627,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1626,
												"name": "nonReentrant",
												"nameLocations": [
													"4055:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "4055:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4055:12:8"
										}
									],
									"name": "transferFrom",
									"nameLocation": "3911:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1620,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3991:8:8"
									},
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3932:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "3924:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3946:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "3938:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3938:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3958:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "3950:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3950:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3923:42:8"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "4086:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4086:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4085:6:8"
									},
									"scope": 1876,
									"src": "3902:414:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "4416:84:8",
										"statements": [
											{
												"expression": {
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1670,
														"name": "tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "4427:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1671,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "4444:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4427:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "4427:25:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1675,
															"name": "_enabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "4483:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1674,
														"name": "TradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "4468:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4468:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1677,
												"nodeType": "EmitStatement",
												"src": "4463:29:8"
											}
										]
									},
									"functionSelector": "8f70ccf7",
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1668,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1667,
												"name": "onlyOwner",
												"nameLocations": [
													"4406:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4406:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4406:9:8"
										}
									],
									"name": "setTrading",
									"nameLocation": "4371:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "4387:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "4382:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4382:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4381:15:8"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4416:0:8"
									},
									"scope": 1876,
									"src": "4362:138:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "4582:99:8",
										"statements": [
											{
												"expression": {
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1688,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "4593:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1690,
														"indexExpression": {
															"id": 1689,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "4607:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4593:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1691,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "4618:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4593:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "4593:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1695,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "4657:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1696,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "4666:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1694,
														"name": "BlacklistUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "4640:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4640:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "EmitStatement",
												"src": "4635:38:8"
											}
										]
									},
									"functionSelector": "9155e083",
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1686,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1685,
												"name": "onlyOwner",
												"nameLocations": [
													"4572:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4572:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4572:9:8"
										}
									],
									"name": "updateBlacklist",
									"nameLocation": "4517:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4541:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "4533:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4533:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "4555:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "4550:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4550:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4532:30:8"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4582:0:8"
									},
									"scope": 1876,
									"src": "4508:173:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "4763:99:8",
										"statements": [
											{
												"expression": {
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1709,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "4774:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1711,
														"indexExpression": {
															"id": 1710,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "4788:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4774:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1712,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "4799:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4774:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "4774:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1716,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "4838:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1717,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "4847:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1715,
														"name": "WhitelistUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "4821:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4821:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1719,
												"nodeType": "EmitStatement",
												"src": "4816:38:8"
											}
										]
									},
									"functionSelector": "0d392cd9",
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1707,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1706,
												"name": "onlyOwner",
												"nameLocations": [
													"4753:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4753:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4753:9:8"
										}
									],
									"name": "updateWhitelist",
									"nameLocation": "4698:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4722:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "4714:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4714:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "4736:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "4731:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1703,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4731:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4713:30:8"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4763:0:8"
									},
									"scope": 1876,
									"src": "4689:173:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "5042:321:8",
										"statements": [
											{
												"expression": {
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1734,
														"name": "maxTransferAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "5053:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1735,
														"name": "_maxTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "5073:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5053:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "5053:32:8"
											},
											{
												"expression": {
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1738,
														"name": "maxWalletAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "5096:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1739,
														"name": "_maxWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "5114:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5096:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "5096:28:8"
											},
											{
												"expression": {
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1742,
														"name": "minHoldTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "5135:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1743,
														"name": "_holdTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "5149:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5135:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "5135:23:8"
											},
											{
												"expression": {
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1746,
														"name": "transferCooldown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "5169:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1747,
														"name": "_cooldown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1729,
														"src": "5188:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5169:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "5169:28:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1751,
															"name": "_maxTransfer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "5259:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1752,
															"name": "_maxWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "5286:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1753,
															"name": "_holdTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "5311:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1754,
															"name": "_cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "5335:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1750,
														"name": "SecurityParamsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "5223:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5223:132:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1756,
												"nodeType": "EmitStatement",
												"src": "5218:137:8"
											}
										]
									},
									"functionSelector": "02cd093d",
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1732,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1731,
												"name": "onlyOwner",
												"nameLocations": [
													"5032:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5032:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5032:9:8"
										}
									],
									"name": "updateSecurityParams",
									"nameLocation": "4879:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "_maxTransfer",
												"nameLocation": "4918:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "4910:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4910:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "_maxWallet",
												"nameLocation": "4949:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "4941:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4941:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "_holdTime",
												"nameLocation": "4978:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "4970:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4970:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "_cooldown",
												"nameLocation": "5006:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "4998:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4998:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4899:123:8"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5042:0:8"
									},
									"scope": 1876,
									"src": "4870:493:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "5460:198:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1766,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "5479:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1769,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5496:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Prophecy_Jimpsons_$1876",
																			"typeString": "contract Prophecy_Jimpsons"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Prophecy_Jimpsons_$1876",
																			"typeString": "contract Prophecy_Jimpsons"
																		}
																	],
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5488:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1767,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5488:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5488:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5479:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420776974686472617720746f6b656e20697473656c66",
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc",
																"typeString": "literal_string \"Cannot withdraw token itself\""
															},
															"value": "Cannot withdraw token itself"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d36ed891208417e2a3a50631ad15a86ec32b1b25ec426c7e87f2a769144e2dcc",
																"typeString": "literal_string \"Cannot withdraw token itself\""
															}
														],
														"id": 1765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5471:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5471:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1774,
												"nodeType": "ExpressionStatement",
												"src": "5471:63:8"
											},
											{
												"assignments": [
													1776
												],
												"declarations": [
													{
														"constant": false,
														"id": 1776,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5553:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1796,
														"src": "5545:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1775,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1786,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1783,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5594:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Prophecy_Jimpsons_$1876",
																		"typeString": "contract Prophecy_Jimpsons"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Prophecy_Jimpsons_$1876",
																		"typeString": "contract Prophecy_Jimpsons"
																	}
																],
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5586:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1781,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5586:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5586:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1778,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "5569:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1777,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "5562:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$942_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5562:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$942",
																"typeString": "contract IERC20"
															}
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5576:9:8",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "5562:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5562:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5545:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1791,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "5634:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5634:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1793,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "5643:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1788,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "5618:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1787,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "5611:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$942_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5611:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$942",
																"typeString": "contract IERC20"
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5625:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "5611:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5611:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1795,
												"nodeType": "ExpressionStatement",
												"src": "5611:39:8"
											}
										]
									},
									"functionSelector": "6ff1c9bc",
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1763,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1762,
												"name": "onlyOwner",
												"nameLocations": [
													"5450:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5450:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5450:9:8"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "5408:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5434:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5426:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5425:15:8"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5460:0:8"
									},
									"scope": 1876,
									"src": "5399:259:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "5801:182:8",
										"statements": [
											{
												"body": {
													"id": 1833,
													"nodeType": "Block",
													"src": "5857:119:8",
													"statements": [
														{
															"expression": {
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1818,
																		"name": "isBlacklisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "5872:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1822,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1819,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "5886:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1821,
																		"indexExpression": {
																			"id": 1820,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1808,
																			"src": "5895:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5886:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5872:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1823,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1802,
																	"src": "5901:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5872:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1825,
															"nodeType": "ExpressionStatement",
															"src": "5872:35:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1827,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "5944:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1829,
																		"indexExpression": {
																			"id": 1828,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1808,
																			"src": "5953:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5944:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1830,
																		"name": "status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "5957:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1826,
																	"name": "BlacklistUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "5927:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,bool)"
																	}
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5927:37:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1832,
															"nodeType": "EmitStatement",
															"src": "5922:42:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1811,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "5831:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1812,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "5835:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5844:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5835:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5831:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1834,
												"initializationExpression": {
													"assignments": [
														1808
													],
													"declarations": [
														{
															"constant": false,
															"id": 1808,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5824:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1834,
															"src": "5816:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1807,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5816:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1810,
													"initialValue": {
														"hexValue": "30",
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5828:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5816:13:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5852:3:8",
														"subExpression": {
															"id": 1815,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "5852:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1817,
													"nodeType": "ExpressionStatement",
													"src": "5852:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5812:164:8"
											}
										]
									},
									"functionSelector": "6072e6a8",
									"id": 1836,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1805,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1804,
												"name": "onlyOwner",
												"nameLocations": [
													"5791:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5791:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5791:9:8"
										}
									],
									"name": "batchUpdateBlacklist",
									"nameLocation": "5719:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "5759:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "5740:27:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1798,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5740:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1799,
													"nodeType": "ArrayTypeName",
													"src": "5740:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "5774:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "5769:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5769:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:42:8"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5801:0:8"
									},
									"scope": 1876,
									"src": "5710:273:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1874,
										"nodeType": "Block",
										"src": "6082:182:8",
										"statements": [
											{
												"body": {
													"id": 1872,
													"nodeType": "Block",
													"src": "6138:119:8",
													"statements": [
														{
															"expression": {
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1857,
																		"name": "isWhitelisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "6153:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1861,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1858,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "6167:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1860,
																		"indexExpression": {
																			"id": 1859,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1847,
																			"src": "6176:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6167:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6153:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1862,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "6182:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6153:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1864,
															"nodeType": "ExpressionStatement",
															"src": "6153:35:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1866,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "6225:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1868,
																		"indexExpression": {
																			"id": 1867,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1847,
																			"src": "6234:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6225:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1869,
																		"name": "status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1841,
																		"src": "6238:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1865,
																	"name": "WhitelistUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "6208:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,bool)"
																	}
																},
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6208:37:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1871,
															"nodeType": "EmitStatement",
															"src": "6203:42:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1850,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "6112:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1851,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "6116:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6125:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6116:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6112:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1873,
												"initializationExpression": {
													"assignments": [
														1847
													],
													"declarations": [
														{
															"constant": false,
															"id": 1847,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6105:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1873,
															"src": "6097:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1846,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6097:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1849,
													"initialValue": {
														"hexValue": "30",
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6109:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6097:13:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6133:3:8",
														"subExpression": {
															"id": 1854,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "6133:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1856,
													"nodeType": "ExpressionStatement",
													"src": "6133:3:8"
												},
												"nodeType": "ForStatement",
												"src": "6093:164:8"
											}
										]
									},
									"functionSelector": "611274c5",
									"id": 1875,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1844,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1843,
												"name": "onlyOwner",
												"nameLocations": [
													"6072:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6072:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6072:9:8"
										}
									],
									"name": "batchUpdateWhitelist",
									"nameLocation": "6000:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "6040:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "6021:27:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1837,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6021:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1838,
													"nodeType": "ArrayTypeName",
													"src": "6021:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "6055:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "6050:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1840,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6050:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6020:42:8"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6082:0:8"
									},
									"scope": 1876,
									"src": "5991:273:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1877,
							"src": "297:5970:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								1368,
								1372,
								1378,
								1384,
								1394
							]
						}
					],
					"src": "33:6234:8"
				},
				"id": 8
			}
		}
	}
}