{
	"id": "6fc5151a670be3f253d7470a6666dca9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/new.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract Prophecy_Jimpsons is ERC20, Ownable(msg.sender), ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 public constant MAX_SUPPLY = 10_000_000_000 * 10**18;\r\n    uint256 public constant DAILY_TRADE_LIMIT = 100_000_000 * 10**18; // 10 million tokens per day\r\n    uint256 public constant MAX_TRANSFER_AMOUNT = 10_000_000 * 10**18; // 10 million tokens per transfer\r\n    bool public initialized;\r\n    \r\n    // Security variables            \r\n    uint256 public minHoldTime;              \r\n    mapping(address => uint256) public lastTransferTime;\r\n    mapping(address => uint256) public tokenReceiveTime;  \r\n    mapping(address => bool) public isBlacklisted;        \r\n    mapping(address => bool) public isWhitelisted;        \r\n    uint256 public transferCooldown;\r\n\r\n    // DEX pool restrictions\r\n    mapping(address => bool) public isDexPool;\r\n    mapping(address => bool) public isCexAddress;\r\n\r\n    // Daily trade tracking\r\n    mapping(address => uint256) public dailyTradedAmount;\r\n    mapping(address => uint256) public lastTradeTimestamp;\r\n    \r\n    // Events\r\n    event TokensInitialized(address indexed initialHolder, uint256 amount);\r\n    event BlacklistUpdated(address indexed account, bool status);\r\n    event WhitelistUpdated(address indexed account, bool status);\r\n    event DexPoolUpdated(address indexed pool, bool status);\r\n    event CexAddressUpdated(address indexed cex, bool status);\r\n    event SecurityParamsUpdated(\r\n        uint256 newHoldTime,\r\n        uint256 newCooldown\r\n    );\r\n\r\n    constructor() ERC20(\"Prophecy Jimpsons\", \"Zimp\") {\r\n        require(!initialized, \"Already initialized\");\r\n        \r\n        _mint(msg.sender, MAX_SUPPLY);\r\n        \r\n        initialized = true;\r\n        minHoldTime = 1 days;\r\n        transferCooldown = 60;\r\n        \r\n        isWhitelisted[msg.sender] = true;\r\n        \r\n        emit TokensInitialized(msg.sender, MAX_SUPPLY);\r\n    }\r\n\r\n    // Modified transfer restrictions with DEX pool owner check, daily trading limit, and whitelist bypass\r\n    modifier transferCompliance(address from, address to, uint256 amount) {\r\n    require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\");\r\n    \r\n    // DEX pool restriction: remove liquidity restriction but keep selling restriction\r\n    if (isDexPool[from] && msg.sender != owner() && !isWhitelisted[msg.sender]) {\r\n        // Reset daily traded amount if 24 hours have passed since the last trade\r\n        if (block.timestamp > lastTradeTimestamp[msg.sender] + 1 days) {\r\n            dailyTradedAmount[msg.sender] = 0;\r\n            lastTradeTimestamp[msg.sender] = block.timestamp;\r\n        }\r\n\r\n        require(            \r\n            dailyTradedAmount[msg.sender].add(amount) <= DAILY_TRADE_LIMIT,\r\n            \"Exceeds daily DEX trading limit of 10 million tokens\"\r\n        );\r\n\r\n        // Update daily traded amount\r\n        dailyTradedAmount[msg.sender] = dailyTradedAmount[msg.sender].add(amount);\r\n    }\r\n    \r\n    // Allow CEX transfers to bypass restrictions\r\n    if (!isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] && !isWhitelisted[to]) {\r\n        require(block.timestamp >= lastTransferTime[from].add(transferCooldown), \"Cooldown active\");\r\n        \r\n        if (tokenReceiveTime[from] != 0) {\r\n            require(block.timestamp >= tokenReceiveTime[from].add(minHoldTime), \"Hold time not met\");\r\n        }\r\n    }\r\n    _;\r\n}\r\n\r\n    function transfer(address to, uint256 amount) \r\n        public \r\n        override \r\n        transferCompliance(msg.sender, to, amount) \r\n        nonReentrant \r\n        returns (bool) \r\n    {\r\n        require(to != address(0), \"Invalid recipient\");\r\n        tokenReceiveTime[to] = block.timestamp;\r\n        lastTransferTime[msg.sender] = block.timestamp;\r\n        return super.transfer(to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount)\r\n        public\r\n        override\r\n        transferCompliance(from, to, amount)\r\n        nonReentrant\r\n        returns (bool)\r\n    {\r\n        require(to != address(0), \"Invalid recipient\");\r\n        tokenReceiveTime[to] = block.timestamp;\r\n        lastTransferTime[from] = block.timestamp;\r\n        return super.transferFrom(from, to, amount);\r\n    }\r\n\r\n    // DEX/CEX management functions\r\n    function setDexPool(address pool, bool status) external onlyOwner {\r\n        isDexPool[pool] = status;\r\n        emit DexPoolUpdated(pool, status);\r\n    }\r\n\r\n    function setCexAddress(address cex, bool status) external onlyOwner {\r\n        isCexAddress[cex] = status;\r\n        emit CexAddressUpdated(cex, status);\r\n    }\r\n\r\n    // Batch management functions\r\n    function batchSetDexPools(address[] calldata pools, bool status) external onlyOwner {\r\n        for(uint256 i = 0; i < pools.length; i++) {\r\n            isDexPool[pools[i]] = status;\r\n            emit DexPoolUpdated(pools[i], status);\r\n        }\r\n    }\r\n\r\n    function batchSetCexAddresses(address[] calldata cexes, bool status) external onlyOwner {\r\n        for(uint256 i = 0; i < cexes.length; i++) {\r\n            isCexAddress[cexes[i]] = status;\r\n            emit CexAddressUpdated(cexes[i], status);\r\n        }\r\n    }\r\n\r\n    // Blacklist/Whitelist management\r\n    function updateBlacklist(address account, bool status) external onlyOwner {\r\n        isBlacklisted[account] = status;\r\n        emit BlacklistUpdated(account, status);\r\n    }\r\n\r\n    function updateWhitelist(address account, bool status) external onlyOwner {\r\n        isWhitelisted[account] = status;\r\n        emit WhitelistUpdated(account, status);\r\n    }\r\n\r\n    // Updated security params function\r\n    function updateSecurityParams(\r\n        uint256 _holdTime,\r\n        uint256 _cooldown\r\n    ) external onlyOwner {\r\n        minHoldTime = _holdTime;\r\n        transferCooldown = _cooldown;\r\n        \r\n        emit SecurityParamsUpdated(\r\n            _holdTime,\r\n            _cooldown\r\n        );\r\n    }\r\n    // Batch functions\r\n    function batchUpdateBlacklist(address[] calldata accounts, bool status) external onlyOwner {\r\n        for(uint256 i = 0; i < accounts.length; i++) {\r\n            isBlacklisted[accounts[i]] = status;\r\n            emit BlacklistUpdated(accounts[i], status);\r\n        }\r\n    }\r\n\r\n    function batchUpdateWhitelist(address[] calldata accounts, bool status) external onlyOwner {\r\n        for(uint256 i = 0; i < accounts.length; i++) {\r\n            isWhitelisted[accounts[i]] = status;\r\n            emit WhitelistUpdated(accounts[i], status);\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x2B ADD GAS 0xD5 BASEFEE 0xBF 0xAE PUSH31 0x6A686AA121D945836059001141460B538040A3E4C3AB5064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x2B ADD GAS 0xD5 BASEFEE 0xBF 0xAE PUSH31 0x6A686AA121D945836059001141460B538040A3E4C3AB5064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/new.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/new.sol": {
				"Prophecy_Jimpsons": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "BlacklistUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "cex",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "CexAddressUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "DexPoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newHoldTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newCooldown",
									"type": "uint256"
								}
							],
							"name": "SecurityParamsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "initialHolder",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensInitialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "WhitelistUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DAILY_TRADE_LIMIT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_TRANSFER_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "cexes",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "batchSetCexAddresses",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "pools",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "batchSetDexPools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "batchUpdateBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "batchUpdateWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "dailyTradedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isCexAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isDexPool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastTradeTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastTransferTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minHoldTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "cex",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setCexAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setDexPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenReceiveTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferCooldown",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "updateBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_holdTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_cooldown",
									"type": "uint256"
								}
							],
							"name": "updateSecurityParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "updateWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/new.sol\":297:6800  contract Prophecy_Jimpsons is ERC20, Ownable(msg.sender), ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/new.sol\":1826:2210  constructor() ERC20(\"Prophecy Jimpsons\", \"Zimp\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/new.sol\":342:352  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  0x50726f7068656379204a696d70736f6e73000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5a696d7000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/new.sol\":1895:1906  initialized */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/new.sol\":1894:1906  !initialized */\n  iszero\n    /* \"contracts/new.sol\":1886:1930  require(!initialized, \"Already initialized\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/new.sol\":1951:1980  _mint(msg.sender, MAX_SUPPLY) */\n  tag_21\n    /* \"contracts/new.sol\":1957:1967  msg.sender */\n  caller\n    /* \"contracts/new.sol\":450:473  10_000_000_000 * 10**18 */\n  0x204fce5e3e25026110000000\n    /* \"contracts/new.sol\":1951:1956  _mint */\n  shl(0x20, tag_22)\n    /* \"contracts/new.sol\":1951:1980  _mint(msg.sender, MAX_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/new.sol\":2015:2019  true */\n  0x01\n    /* \"contracts/new.sol\":2001:2012  initialized */\n  0x07\n  0x00\n    /* \"contracts/new.sol\":2001:2019  initialized = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/new.sol\":2044:2050  1 days */\n  0x015180\n    /* \"contracts/new.sol\":2030:2041  minHoldTime */\n  0x08\n    /* \"contracts/new.sol\":2030:2050  minHoldTime = 1 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/new.sol\":2080:2082  60 */\n  0x3c\n    /* \"contracts/new.sol\":2061:2077  transferCooldown */\n  0x0d\n    /* \"contracts/new.sol\":2061:2082  transferCooldown = 60 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/new.sol\":2131:2135  true */\n  0x01\n    /* \"contracts/new.sol\":2103:2116  isWhitelisted */\n  0x0c\n    /* \"contracts/new.sol\":2103:2128  isWhitelisted[msg.sender] */\n  0x00\n    /* \"contracts/new.sol\":2117:2127  msg.sender */\n  caller\n    /* \"contracts/new.sol\":2103:2128  isWhitelisted[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/new.sol\":2103:2135  isWhitelisted[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/new.sol\":2179:2189  msg.sender */\n  caller\n    /* \"contracts/new.sol\":2161:2202  TokensInitialized(msg.sender, MAX_SUPPLY) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x9d5570c03a71af73640da09c132d73bb3efe7ca4f55516a1afc2597cbdfd620c\n    /* \"contracts/new.sol\":450:473  10_000_000_000 * 10**18 */\n  0x204fce5e3e25026110000000\n    /* \"contracts/new.sol\":2161:2202  TokensInitialized(msg.sender, MAX_SUPPLY) */\n  mload(0x40)\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/new.sol\":297:6800  contract Prophecy_Jimpsons is ERC20, Ownable(msg.sender), ReentrancyGuard {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_36)\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_41)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_42\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_43:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_44:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_45:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_46:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_76:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_78\n  tag_45\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":714:798   */\ntag_77:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_47:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_48:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_49:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_50:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_83\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_49\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1429:1468   */\n  tag_84\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_49\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_51:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_52:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_53:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_88\n    /* \"#utility.yul\":1818:1852   */\n  tag_89\n    /* \"#utility.yul\":1827:1851   */\n  tag_90\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_51\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1818:1852   */\n  tag_52\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1800:1853   */\n  tag_51\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_54:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_55:\n    /* \"#utility.yul\":2056:2095   */\n  tag_93\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_53\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2117:2208   */\n  tag_94\n    /* \"#utility.yul\":2166:2207   */\n  tag_95\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_50\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_56:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_57:\n    /* \"#utility.yul\":2377:2409   */\n  tag_98\n  tag_56\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2418:2483   */\n  tag_99\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_55\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_58:\n    /* \"#utility.yul\":2555:2675   */\ntag_101:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_104\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_57\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_101)\ntag_103:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_59:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_107\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_47\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2906:2935   */\n  tag_108\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_48\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_109:\n    /* \"#utility.yul\":3133:3213   */\n  tag_110\n    /* \"#utility.yul\":3189:3211   */\n  tag_111\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_48\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_58\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_106:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_60:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_61:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_114\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_60\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_62:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_116\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_61\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_118\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_43\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_120\n  tag_44\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4038:4094   */\ntag_119:\n    /* \"#utility.yul\":4118:4156   */\n  tag_121\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_46\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4203:4270   */\n  tag_122\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_59\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_124\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_125:\n    /* \"#utility.yul\":5144:5211   */\n  tag_126\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_62\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_123)\n    /* \"#utility.yul\":4365:4983   */\ntag_124:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_127\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_47\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_128:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_128)\ntag_130:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_132\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_61\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_131:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_123:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_63:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_64:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_135\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_63\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_65:\n    /* \"#utility.yul\":5555:5579   */\n  tag_137\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_64\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_13:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_139\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_65\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:5989   */\ntag_66:\n    /* \"#utility.yul\":5904:5915   */\n  0x00\n    /* \"#utility.yul\":5938:5944   */\n  dup3\n    /* \"#utility.yul\":5933:5936   */\n  dup3\n    /* \"#utility.yul\":5926:5945   */\n  mstore\n    /* \"#utility.yul\":5978:5982   */\n  0x20\n    /* \"#utility.yul\":5973:5976   */\n  dup3\n    /* \"#utility.yul\":5969:5983   */\n  add\n    /* \"#utility.yul\":5954:5983   */\n  swap1\n  pop\n    /* \"#utility.yul\":5820:5989   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5995:6164   */\ntag_67:\n    /* \"#utility.yul\":6135:6156   */\n  0x416c726561647920696e697469616c697a656400000000000000000000000000\n    /* \"#utility.yul\":6131:6132   */\n  0x00\n    /* \"#utility.yul\":6123:6129   */\n  dup3\n    /* \"#utility.yul\":6119:6133   */\n  add\n    /* \"#utility.yul\":6112:6157   */\n  mstore\n    /* \"#utility.yul\":5995:6164   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6170:6536   */\ntag_68:\n    /* \"#utility.yul\":6312:6315   */\n  0x00\n    /* \"#utility.yul\":6333:6400   */\n  tag_143\n    /* \"#utility.yul\":6397:6399   */\n  0x13\n    /* \"#utility.yul\":6392:6395   */\n  dup4\n    /* \"#utility.yul\":6333:6400   */\n  tag_66\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6326:6400   */\n  swap2\n  pop\n    /* \"#utility.yul\":6409:6502   */\n  tag_144\n    /* \"#utility.yul\":6498:6501   */\n  dup3\n    /* \"#utility.yul\":6409:6502   */\n  tag_67\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6527:6529   */\n  0x20\n    /* \"#utility.yul\":6522:6525   */\n  dup3\n    /* \"#utility.yul\":6518:6530   */\n  add\n    /* \"#utility.yul\":6511:6530   */\n  swap1\n  pop\n    /* \"#utility.yul\":6170:6536   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6542:6961   */\ntag_20:\n    /* \"#utility.yul\":6708:6712   */\n  0x00\n    /* \"#utility.yul\":6746:6748   */\n  0x20\n    /* \"#utility.yul\":6735:6744   */\n  dup3\n    /* \"#utility.yul\":6731:6749   */\n  add\n    /* \"#utility.yul\":6723:6749   */\n  swap1\n  pop\n    /* \"#utility.yul\":6795:6804   */\n  dup2\n    /* \"#utility.yul\":6789:6793   */\n  dup2\n    /* \"#utility.yul\":6785:6805   */\n  sub\n    /* \"#utility.yul\":6781:6782   */\n  0x00\n    /* \"#utility.yul\":6770:6779   */\n  dup4\n    /* \"#utility.yul\":6766:6783   */\n  add\n    /* \"#utility.yul\":6759:6806   */\n  mstore\n    /* \"#utility.yul\":6823:6954   */\n  tag_146\n    /* \"#utility.yul\":6949:6953   */\n  dup2\n    /* \"#utility.yul\":6823:6954   */\n  tag_68\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6815:6954   */\n  swap1\n  pop\n    /* \"#utility.yul\":6542:6961   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6967:7085   */\ntag_69:\n    /* \"#utility.yul\":7054:7078   */\n  tag_148\n    /* \"#utility.yul\":7072:7077   */\n  dup2\n    /* \"#utility.yul\":7054:7078   */\n  tag_51\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7049:7052   */\n  dup3\n    /* \"#utility.yul\":7042:7079   */\n  mstore\n    /* \"#utility.yul\":6967:7085   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7091:7313   */\ntag_24:\n    /* \"#utility.yul\":7184:7188   */\n  0x00\n    /* \"#utility.yul\":7222:7224   */\n  0x20\n    /* \"#utility.yul\":7211:7220   */\n  dup3\n    /* \"#utility.yul\":7207:7225   */\n  add\n    /* \"#utility.yul\":7199:7225   */\n  swap1\n  pop\n    /* \"#utility.yul\":7235:7306   */\n  tag_150\n    /* \"#utility.yul\":7303:7304   */\n  0x00\n    /* \"#utility.yul\":7292:7301   */\n  dup4\n    /* \"#utility.yul\":7288:7305   */\n  add\n    /* \"#utility.yul\":7279:7285   */\n  dup5\n    /* \"#utility.yul\":7235:7306   */\n  tag_69\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7091:7313   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7319:7499   */\ntag_70:\n    /* \"#utility.yul\":7367:7444   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7364:7365   */\n  0x00\n    /* \"#utility.yul\":7357:7445   */\n  mstore\n    /* \"#utility.yul\":7464:7468   */\n  0x11\n    /* \"#utility.yul\":7461:7462   */\n  0x04\n    /* \"#utility.yul\":7454:7469   */\n  mstore\n    /* \"#utility.yul\":7488:7492   */\n  0x24\n    /* \"#utility.yul\":7485:7486   */\n  0x00\n    /* \"#utility.yul\":7478:7493   */\n  revert\n    /* \"#utility.yul\":7505:7696   */\ntag_35:\n    /* \"#utility.yul\":7545:7548   */\n  0x00\n    /* \"#utility.yul\":7564:7584   */\n  tag_153\n    /* \"#utility.yul\":7582:7583   */\n  dup3\n    /* \"#utility.yul\":7564:7584   */\n  tag_51\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7559:7584   */\n  swap2\n  pop\n    /* \"#utility.yul\":7598:7618   */\n  tag_154\n    /* \"#utility.yul\":7616:7617   */\n  dup4\n    /* \"#utility.yul\":7598:7618   */\n  tag_51\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7593:7618   */\n  swap3\n  pop\n    /* \"#utility.yul\":7641:7642   */\n  dup3\n    /* \"#utility.yul\":7638:7639   */\n  dup3\n    /* \"#utility.yul\":7634:7643   */\n  add\n    /* \"#utility.yul\":7627:7643   */\n  swap1\n  pop\n    /* \"#utility.yul\":7662:7665   */\n  dup1\n    /* \"#utility.yul\":7659:7660   */\n  dup3\n    /* \"#utility.yul\":7656:7666   */\n  gt\n    /* \"#utility.yul\":7653:7689   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":7669:7687   */\n  tag_156\n  tag_70\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7653:7689   */\ntag_155:\n    /* \"#utility.yul\":7505:7696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7702:8144   */\ntag_39:\n    /* \"#utility.yul\":7851:7855   */\n  0x00\n    /* \"#utility.yul\":7889:7891   */\n  0x60\n    /* \"#utility.yul\":7878:7887   */\n  dup3\n    /* \"#utility.yul\":7874:7892   */\n  add\n    /* \"#utility.yul\":7866:7892   */\n  swap1\n  pop\n    /* \"#utility.yul\":7902:7973   */\n  tag_158\n    /* \"#utility.yul\":7970:7971   */\n  0x00\n    /* \"#utility.yul\":7959:7968   */\n  dup4\n    /* \"#utility.yul\":7955:7972   */\n  add\n    /* \"#utility.yul\":7946:7952   */\n  dup7\n    /* \"#utility.yul\":7902:7973   */\n  tag_65\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7983:8055   */\n  tag_159\n    /* \"#utility.yul\":8051:8053   */\n  0x20\n    /* \"#utility.yul\":8040:8049   */\n  dup4\n    /* \"#utility.yul\":8036:8054   */\n  add\n    /* \"#utility.yul\":8027:8033   */\n  dup6\n    /* \"#utility.yul\":7983:8055   */\n  tag_69\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":8065:8137   */\n  tag_160\n    /* \"#utility.yul\":8133:8135   */\n  0x40\n    /* \"#utility.yul\":8122:8131   */\n  dup4\n    /* \"#utility.yul\":8118:8136   */\n  add\n    /* \"#utility.yul\":8109:8115   */\n  dup5\n    /* \"#utility.yul\":8065:8137   */\n  tag_69\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7702:8144   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/new.sol\":297:6800  contract Prophecy_Jimpsons is ERC20, Ownable(msg.sender), ReentrancyGuard {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/new.sol\":297:6800  contract Prophecy_Jimpsons is ERC20, Ownable(msg.sender), ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6072e6a8\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe26ffe08\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xfc1b3113\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_37\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x95d89b41\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xab09413d\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xdd386477\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x715018a6\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8b6a8fbf\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x90389b83\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x9155e083\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x6072e6a8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x611274c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x68f16293\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x23b872dd\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x330671ad\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x330671ad\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x3af32abf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5112f297\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x566e5993\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5f87f0eb\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x23b872dd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x283af019\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x0d392cd9\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x0d392cd9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x158ef93e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2357edb3\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x058c72fc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0d2d8a31\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/new.sol\":5914:6213  function updateSecurityParams(... */\n    tag_3:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":808:859  mapping(address => uint256) public lastTransferTime */\n    tag_6:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":5692:5865  function updateWhitelist(address account, bool status) external onlyOwner {... */\n    tag_7:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/new.sol\":686:709  bool public initialized */\n    tag_8:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_9:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":1116:1157  mapping(address => bool) public isDexPool */\n    tag_10:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":4122:4536  function transferFrom(address from, address to, uint256 amount)... */\n    tag_11:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":866:917  mapping(address => uint256) public tokenReceiveTime */\n    tag_12:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":413:473  uint256 public constant MAX_SUPPLY = 10_000_000_000 * 10**18 */\n    tag_14:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":761:787  uint256 public minHoldTime */\n    tag_15:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":986:1031  mapping(address => bool) public isWhitelisted */\n    tag_16:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":4581:4734  function setDexPool(address pool, bool status) external onlyOwner {... */\n    tag_17:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/new.sol\":480:544  uint256 public constant DAILY_TRADE_LIMIT = 100_000_000 * 10**18 */\n    tag_18:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":5203:5464  function batchSetCexAddresses(address[] calldata cexes, bool status) external onlyOwner {... */\n    tag_19:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      stop\n        /* \"contracts/new.sol\":6243:6516  function batchUpdateBlacklist(address[] calldata accounts, bool status) external onlyOwner {... */\n    tag_20:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"contracts/new.sol\":6524:6797  function batchUpdateWhitelist(address[] calldata accounts, bool status) external onlyOwner {... */\n    tag_21:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      stop\n        /* \"contracts/new.sol\":1046:1077  uint256 public transferCooldown */\n    tag_22:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_24:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/new.sol\":1246:1298  mapping(address => uint256) public dailyTradedAmount */\n    tag_25:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_26:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":4742:4901  function setCexAddress(address cex, bool status) external onlyOwner {... */\n    tag_27:\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n    tag_135:\n      stop\n        /* \"contracts/new.sol\":5511:5684  function updateBlacklist(address account, bool status) external onlyOwner {... */\n    tag_28:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_29:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":3710:4114  function transfer(address to, uint256 amount) ... */\n    tag_30:\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":4944:5195  function batchSetDexPools(address[] calldata pools, bool status) external onlyOwner {... */\n    tag_31:\n      tag_148\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_149:\n      tag_150\n      jump\t// in\n    tag_148:\n      stop\n        /* \"contracts/new.sol\":1164:1208  mapping(address => bool) public isCexAddress */\n    tag_32:\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_33:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      tag_158\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":1305:1358  mapping(address => uint256) public lastTradeTimestamp */\n    tag_34:\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_35:\n      tag_164\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n    tag_164:\n      stop\n        /* \"contracts/new.sol\":580:645  uint256 public constant MAX_TRANSFER_AMOUNT = 10_000_000 * 10**18 */\n    tag_36:\n      tag_167\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":926:971  mapping(address => bool) public isBlacklisted */\n    tag_37:\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_171:\n      tag_172\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/new.sol\":5914:6213  function updateSecurityParams(... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/new.sol\":6051:6060  _holdTime */\n      dup2\n        /* \"contracts/new.sol\":6037:6048  minHoldTime */\n      0x08\n        /* \"contracts/new.sol\":6037:6060  minHoldTime = _holdTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":6090:6099  _cooldown */\n      dup1\n        /* \"contracts/new.sol\":6071:6087  transferCooldown */\n      0x0d\n        /* \"contracts/new.sol\":6071:6099  transferCooldown = _cooldown */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":6125:6205  SecurityParamsUpdated(... */\n      0x2c406ebfcb3eb7487c720dd90f3be04648d6606bad1837fd5363cd02f3dd1ef6\n        /* \"contracts/new.sol\":6161:6170  _holdTime */\n      dup3\n        /* \"contracts/new.sol\":6185:6194  _cooldown */\n      dup3\n        /* \"contracts/new.sol\":6125:6205  SecurityParamsUpdated(... */\n      mload(0x40)\n      tag_178\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/new.sol\":5914:6213  function updateSecurityParams(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_182\n      jump\t// in\n    tag_183:\n      dup1\n      iszero\n      tag_184\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_185\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_184)\n    tag_185:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_186:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_186\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/new.sol\":808:859  mapping(address => uint256) public lastTransferTime */\n    tag_62:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/new.sol\":5692:5865  function updateWhitelist(address account, bool status) external onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/new.sol\":5802:5808  status */\n      dup1\n        /* \"contracts/new.sol\":5777:5790  isWhitelisted */\n      0x0c\n        /* \"contracts/new.sol\":5777:5799  isWhitelisted[account] */\n      0x00\n        /* \"contracts/new.sol\":5791:5798  account */\n      dup5\n        /* \"contracts/new.sol\":5777:5799  isWhitelisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/new.sol\":5777:5808  isWhitelisted[account] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":5841:5848  account */\n      dup2\n        /* \"contracts/new.sol\":5824:5857  WhitelistUpdated(account, status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d\n        /* \"contracts/new.sol\":5850:5856  status */\n      dup3\n        /* \"contracts/new.sol\":5824:5857  WhitelistUpdated(account, status) */\n      mload(0x40)\n      tag_195\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/new.sol\":5692:5865  function updateWhitelist(address account, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/new.sol\":686:709  bool public initialized */\n    tag_70:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/new.sol\":1116:1157  mapping(address => bool) public isDexPool */\n    tag_77:\n      mstore(0x20, 0x0e)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/new.sol\":4122:4536  function transferFrom(address from, address to, uint256 amount)... */\n    tag_82:\n        /* \"contracts/new.sol\":4306:4310  bool */\n      0x00\n        /* \"contracts/new.sol\":4248:4252  from */\n      dup4\n        /* \"contracts/new.sol\":4254:4256  to */\n      dup4\n        /* \"contracts/new.sol\":4258:4264  amount */\n      dup4\n        /* \"contracts/new.sol\":2412:2425  isBlacklisted */\n      0x0b\n        /* \"contracts/new.sol\":2412:2431  isBlacklisted[from] */\n      0x00\n        /* \"contracts/new.sol\":2426:2430  from */\n      dup5\n        /* \"contracts/new.sol\":2412:2431  isBlacklisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":2411:2431  !isBlacklisted[from] */\n      iszero\n        /* \"contracts/new.sol\":2411:2453  !isBlacklisted[from] && !isBlacklisted[to] */\n      dup1\n      iszero\n      tag_198\n      jumpi\n      pop\n        /* \"contracts/new.sol\":2436:2449  isBlacklisted */\n      0x0b\n        /* \"contracts/new.sol\":2436:2453  isBlacklisted[to] */\n      0x00\n        /* \"contracts/new.sol\":2450:2452  to */\n      dup4\n        /* \"contracts/new.sol\":2436:2453  isBlacklisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":2435:2453  !isBlacklisted[to] */\n      iszero\n        /* \"contracts/new.sol\":2411:2453  !isBlacklisted[from] && !isBlacklisted[to] */\n    tag_198:\n        /* \"contracts/new.sol\":2403:2480  require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"contracts/new.sol\":2585:2594  isDexPool */\n      0x0e\n        /* \"contracts/new.sol\":2585:2600  isDexPool[from] */\n      0x00\n        /* \"contracts/new.sol\":2595:2599  from */\n      dup5\n        /* \"contracts/new.sol\":2585:2600  isDexPool[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":2585:2625  isDexPool[from] && msg.sender != owner() */\n      dup1\n      iszero\n      tag_202\n      jumpi\n      pop\n        /* \"contracts/new.sol\":2618:2625  owner() */\n      tag_203\n        /* \"contracts/new.sol\":2618:2623  owner */\n      tag_132\n        /* \"contracts/new.sol\":2618:2625  owner() */\n      jump\t// in\n    tag_203:\n        /* \"contracts/new.sol\":2604:2625  msg.sender != owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/new.sol\":2604:2614  msg.sender */\n      caller\n        /* \"contracts/new.sol\":2604:2625  msg.sender != owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/new.sol\":2585:2625  isDexPool[from] && msg.sender != owner() */\n    tag_202:\n        /* \"contracts/new.sol\":2585:2655  isDexPool[from] && msg.sender != owner() && !isWhitelisted[msg.sender] */\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n        /* \"contracts/new.sol\":2630:2643  isWhitelisted */\n      0x0c\n        /* \"contracts/new.sol\":2630:2655  isWhitelisted[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":2644:2654  msg.sender */\n      caller\n        /* \"contracts/new.sol\":2630:2655  isWhitelisted[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":2629:2655  !isWhitelisted[msg.sender] */\n      iszero\n        /* \"contracts/new.sol\":2585:2655  isDexPool[from] && msg.sender != owner() && !isWhitelisted[msg.sender] */\n    tag_204:\n        /* \"contracts/new.sol\":2581:3258  if (isDexPool[from] && msg.sender != owner() && !isWhitelisted[msg.sender]) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/new.sol\":2806:2812  1 days */\n      0x015180\n        /* \"contracts/new.sol\":2773:2791  lastTradeTimestamp */\n      0x11\n        /* \"contracts/new.sol\":2773:2803  lastTradeTimestamp[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":2792:2802  msg.sender */\n      caller\n        /* \"contracts/new.sol\":2773:2803  lastTradeTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/new.sol\":2773:2812  lastTradeTimestamp[msg.sender] + 1 days */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"contracts/new.sol\":2755:2770  block.timestamp */\n      timestamp\n        /* \"contracts/new.sol\":2755:2812  block.timestamp > lastTradeTimestamp[msg.sender] + 1 days */\n      gt\n        /* \"contracts/new.sol\":2751:2937  if (block.timestamp > lastTradeTimestamp[msg.sender] + 1 days) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/new.sol\":2861:2862  0 */\n      0x00\n        /* \"contracts/new.sol\":2829:2846  dailyTradedAmount */\n      0x10\n        /* \"contracts/new.sol\":2829:2858  dailyTradedAmount[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":2847:2857  msg.sender */\n      caller\n        /* \"contracts/new.sol\":2829:2858  dailyTradedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/new.sol\":2829:2862  dailyTradedAmount[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":2910:2925  block.timestamp */\n      timestamp\n        /* \"contracts/new.sol\":2877:2895  lastTradeTimestamp */\n      0x11\n        /* \"contracts/new.sol\":2877:2907  lastTradeTimestamp[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":2896:2906  msg.sender */\n      caller\n        /* \"contracts/new.sol\":2877:2907  lastTradeTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/new.sol\":2877:2925  lastTradeTimestamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":2751:2937  if (block.timestamp > lastTradeTimestamp[msg.sender] + 1 days) {... */\n    tag_208:\n        /* \"contracts/new.sol\":524:544  100_000_000 * 10**18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/new.sol\":2983:3024  dailyTradedAmount[msg.sender].add(amount) */\n      tag_209\n        /* \"contracts/new.sol\":3017:3023  amount */\n      dup3\n        /* \"contracts/new.sol\":2983:3000  dailyTradedAmount */\n      0x10\n        /* \"contracts/new.sol\":2983:3012  dailyTradedAmount[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":3001:3011  msg.sender */\n      caller\n        /* \"contracts/new.sol\":2983:3012  dailyTradedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/new.sol\":2983:3016  dailyTradedAmount[msg.sender].add */\n      tag_210\n      swap1\n        /* \"contracts/new.sol\":2983:3024  dailyTradedAmount[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/new.sol\":2983:3045  dailyTradedAmount[msg.sender].add(amount) <= DAILY_TRADE_LIMIT */\n      gt\n      iszero\n        /* \"contracts/new.sol\":2949:3125  require(            ... */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"contracts/new.sol\":3209:3250  dailyTradedAmount[msg.sender].add(amount) */\n      tag_214\n        /* \"contracts/new.sol\":3243:3249  amount */\n      dup2\n        /* \"contracts/new.sol\":3209:3226  dailyTradedAmount */\n      0x10\n        /* \"contracts/new.sol\":3209:3238  dailyTradedAmount[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":3227:3237  msg.sender */\n      caller\n        /* \"contracts/new.sol\":3209:3238  dailyTradedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/new.sol\":3209:3242  dailyTradedAmount[msg.sender].add */\n      tag_210\n      swap1\n        /* \"contracts/new.sol\":3209:3250  dailyTradedAmount[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/new.sol\":3177:3194  dailyTradedAmount */\n      0x10\n        /* \"contracts/new.sol\":3177:3206  dailyTradedAmount[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":3195:3205  msg.sender */\n      caller\n        /* \"contracts/new.sol\":3177:3206  dailyTradedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/new.sol\":3177:3250  dailyTradedAmount[msg.sender] = dailyTradedAmount[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":2581:3258  if (isDexPool[from] && msg.sender != owner() && !isWhitelisted[msg.sender]) {... */\n    tag_205:\n        /* \"contracts/new.sol\":3326:3338  isCexAddress */\n      0x0f\n        /* \"contracts/new.sol\":3326:3344  isCexAddress[from] */\n      0x00\n        /* \"contracts/new.sol\":3339:3343  from */\n      dup5\n        /* \"contracts/new.sol\":3326:3344  isCexAddress[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":3325:3344  !isCexAddress[from] */\n      iszero\n        /* \"contracts/new.sol\":3325:3365  !isCexAddress[from] && !isCexAddress[to] */\n      dup1\n      iszero\n      tag_215\n      jumpi\n      pop\n        /* \"contracts/new.sol\":3349:3361  isCexAddress */\n      0x0f\n        /* \"contracts/new.sol\":3349:3365  isCexAddress[to] */\n      0x00\n        /* \"contracts/new.sol\":3362:3364  to */\n      dup4\n        /* \"contracts/new.sol\":3349:3365  isCexAddress[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":3348:3365  !isCexAddress[to] */\n      iszero\n        /* \"contracts/new.sol\":3325:3365  !isCexAddress[from] && !isCexAddress[to] */\n    tag_215:\n        /* \"contracts/new.sol\":3325:3389  !isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] */\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n        /* \"contracts/new.sol\":3370:3383  isWhitelisted */\n      0x0c\n        /* \"contracts/new.sol\":3370:3389  isWhitelisted[from] */\n      0x00\n        /* \"contracts/new.sol\":3384:3388  from */\n      dup5\n        /* \"contracts/new.sol\":3370:3389  isWhitelisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":3369:3389  !isWhitelisted[from] */\n      iszero\n        /* \"contracts/new.sol\":3325:3389  !isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] */\n    tag_216:\n        /* \"contracts/new.sol\":3325:3411  !isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] && !isWhitelisted[to] */\n      dup1\n      iszero\n      tag_217\n      jumpi\n      pop\n        /* \"contracts/new.sol\":3394:3407  isWhitelisted */\n      0x0c\n        /* \"contracts/new.sol\":3394:3411  isWhitelisted[to] */\n      0x00\n        /* \"contracts/new.sol\":3408:3410  to */\n      dup4\n        /* \"contracts/new.sol\":3394:3411  isWhitelisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":3393:3411  !isWhitelisted[to] */\n      iszero\n        /* \"contracts/new.sol\":3325:3411  !isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] && !isWhitelisted[to] */\n    tag_217:\n        /* \"contracts/new.sol\":3321:3691  if (!isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] && !isWhitelisted[to]) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"contracts/new.sol\":3451:3495  lastTransferTime[from].add(transferCooldown) */\n      tag_219\n        /* \"contracts/new.sol\":3478:3494  transferCooldown */\n      sload(0x0d)\n        /* \"contracts/new.sol\":3451:3467  lastTransferTime */\n      0x09\n        /* \"contracts/new.sol\":3451:3473  lastTransferTime[from] */\n      0x00\n        /* \"contracts/new.sol\":3468:3472  from */\n      dup7\n        /* \"contracts/new.sol\":3451:3473  lastTransferTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/new.sol\":3451:3477  lastTransferTime[from].add */\n      tag_210\n      swap1\n        /* \"contracts/new.sol\":3451:3495  lastTransferTime[from].add(transferCooldown) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_219:\n        /* \"contracts/new.sol\":3432:3447  block.timestamp */\n      timestamp\n        /* \"contracts/new.sol\":3432:3495  block.timestamp >= lastTransferTime[from].add(transferCooldown) */\n      lt\n      iszero\n        /* \"contracts/new.sol\":3424:3515  require(block.timestamp >= lastTransferTime[from].add(transferCooldown), \"Cooldown active\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"contracts/new.sol\":3566:3567  0 */\n      0x00\n        /* \"contracts/new.sol\":3540:3556  tokenReceiveTime */\n      0x0a\n        /* \"contracts/new.sol\":3540:3562  tokenReceiveTime[from] */\n      0x00\n        /* \"contracts/new.sol\":3557:3561  from */\n      dup6\n        /* \"contracts/new.sol\":3540:3562  tokenReceiveTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/new.sol\":3540:3567  tokenReceiveTime[from] != 0 */\n      eq\n        /* \"contracts/new.sol\":3536:3684  if (tokenReceiveTime[from] != 0) {... */\n      tag_223\n      jumpi\n        /* \"contracts/new.sol\":3611:3650  tokenReceiveTime[from].add(minHoldTime) */\n      tag_224\n        /* \"contracts/new.sol\":3638:3649  minHoldTime */\n      sload(0x08)\n        /* \"contracts/new.sol\":3611:3627  tokenReceiveTime */\n      0x0a\n        /* \"contracts/new.sol\":3611:3633  tokenReceiveTime[from] */\n      0x00\n        /* \"contracts/new.sol\":3628:3632  from */\n      dup7\n        /* \"contracts/new.sol\":3611:3633  tokenReceiveTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/new.sol\":3611:3637  tokenReceiveTime[from].add */\n      tag_210\n      swap1\n        /* \"contracts/new.sol\":3611:3650  tokenReceiveTime[from].add(minHoldTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_224:\n        /* \"contracts/new.sol\":3592:3607  block.timestamp */\n      timestamp\n        /* \"contracts/new.sol\":3592:3650  block.timestamp >= tokenReceiveTime[from].add(minHoldTime) */\n      lt\n      iszero\n        /* \"contracts/new.sol\":3584:3672  require(block.timestamp >= tokenReceiveTime[from].add(minHoldTime), \"Hold time not met\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"contracts/new.sol\":3536:3684  if (tokenReceiveTime[from] != 0) {... */\n    tag_223:\n        /* \"contracts/new.sol\":3321:3691  if (!isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] && !isWhitelisted[to]) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_229\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_230\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_229:\n        /* \"contracts/new.sol\":4350:4351  0 */\n      0x00\n        /* \"contracts/new.sol\":4336:4352  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/new.sol\":4336:4338  to */\n      dup7\n        /* \"contracts/new.sol\":4336:4352  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/new.sol\":4328:4374  require(to != address(0), \"Invalid recipient\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"contracts/new.sol\":4408:4423  block.timestamp */\n      timestamp\n        /* \"contracts/new.sol\":4385:4401  tokenReceiveTime */\n      0x0a\n        /* \"contracts/new.sol\":4385:4405  tokenReceiveTime[to] */\n      0x00\n        /* \"contracts/new.sol\":4402:4404  to */\n      dup9\n        /* \"contracts/new.sol\":4385:4405  tokenReceiveTime[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/new.sol\":4385:4423  tokenReceiveTime[to] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":4459:4474  block.timestamp */\n      timestamp\n        /* \"contracts/new.sol\":4434:4450  lastTransferTime */\n      0x09\n        /* \"contracts/new.sol\":4434:4456  lastTransferTime[from] */\n      0x00\n        /* \"contracts/new.sol\":4451:4455  from */\n      dup10\n        /* \"contracts/new.sol\":4434:4456  lastTransferTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/new.sol\":4434:4474  lastTransferTime[from] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":4492:4528  super.transferFrom(from, to, amount) */\n      tag_235\n        /* \"contracts/new.sol\":4511:4515  from */\n      dup8\n        /* \"contracts/new.sol\":4517:4519  to */\n      dup8\n        /* \"contracts/new.sol\":4521:4527  amount */\n      dup8\n        /* \"contracts/new.sol\":4492:4510  super.transferFrom */\n      tag_236\n        /* \"contracts/new.sol\":4492:4528  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_235:\n        /* \"contracts/new.sol\":4485:4528  return super.transferFrom(from, to, amount) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_237\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_238\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/new.sol\":4122:4536  function transferFrom(address from, address to, uint256 amount)... */\n      pop\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/new.sol\":866:917  mapping(address => uint256) public tokenReceiveTime */\n    tag_86:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/new.sol\":413:473  uint256 public constant MAX_SUPPLY = 10_000_000_000 * 10**18 */\n    tag_93:\n        /* \"contracts/new.sol\":450:473  10_000_000_000 * 10**18 */\n      0x204fce5e3e25026110000000\n        /* \"contracts/new.sol\":413:473  uint256 public constant MAX_SUPPLY = 10_000_000_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"contracts/new.sol\":761:787  uint256 public minHoldTime */\n    tag_96:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/new.sol\":986:1031  mapping(address => bool) public isWhitelisted */\n    tag_100:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/new.sol\":4581:4734  function setDexPool(address pool, bool status) external onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/new.sol\":4676:4682  status */\n      dup1\n        /* \"contracts/new.sol\":4658:4667  isDexPool */\n      0x0e\n        /* \"contracts/new.sol\":4658:4673  isDexPool[pool] */\n      0x00\n        /* \"contracts/new.sol\":4668:4672  pool */\n      dup5\n        /* \"contracts/new.sol\":4658:4673  isDexPool[pool] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/new.sol\":4658:4682  isDexPool[pool] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":4713:4717  pool */\n      dup2\n        /* \"contracts/new.sol\":4698:4726  DexPoolUpdated(pool, status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x087ae58f1cb2baf6f5ac7d2f6391a7f26d2e2951312c6eab3761fc754d202de7\n        /* \"contracts/new.sol\":4719:4725  status */\n      dup3\n        /* \"contracts/new.sol\":4698:4726  DexPoolUpdated(pool, status) */\n      mload(0x40)\n      tag_243\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/new.sol\":4581:4734  function setDexPool(address pool, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/new.sol\":480:544  uint256 public constant DAILY_TRADE_LIMIT = 100_000_000 * 10**18 */\n    tag_106:\n        /* \"contracts/new.sol\":524:544  100_000_000 * 10**18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/new.sol\":480:544  uint256 public constant DAILY_TRADE_LIMIT = 100_000_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"contracts/new.sol\":5203:5464  function batchSetCexAddresses(address[] calldata cexes, bool status) external onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_245:\n        /* \"contracts/new.sol\":5306:5315  uint256 i */\n      0x00\n        /* \"contracts/new.sol\":5318:5319  0 */\n      0x00\n        /* \"contracts/new.sol\":5306:5319  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/new.sol\":5302:5457  for(uint256 i = 0; i < cexes.length; i++) {... */\n    tag_247:\n        /* \"contracts/new.sol\":5325:5330  cexes */\n      dup4\n      dup4\n        /* \"contracts/new.sol\":5325:5337  cexes.length */\n      swap1\n      pop\n        /* \"contracts/new.sol\":5321:5322  i */\n      dup2\n        /* \"contracts/new.sol\":5321:5337  i < cexes.length */\n      lt\n        /* \"contracts/new.sol\":5302:5457  for(uint256 i = 0; i < cexes.length; i++) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"contracts/new.sol\":5384:5390  status */\n      dup2\n        /* \"contracts/new.sol\":5359:5371  isCexAddress */\n      0x0f\n        /* \"contracts/new.sol\":5359:5381  isCexAddress[cexes[i]] */\n      0x00\n        /* \"contracts/new.sol\":5372:5377  cexes */\n      dup7\n      dup7\n        /* \"contracts/new.sol\":5378:5379  i */\n      dup6\n        /* \"contracts/new.sol\":5372:5380  cexes[i] */\n      dup2\n      dup2\n      lt\n      tag_250\n      jumpi\n      tag_251\n      tag_252\n      jump\t// in\n    tag_251:\n    tag_250:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_253\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_253:\n        /* \"contracts/new.sol\":5359:5381  isCexAddress[cexes[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/new.sol\":5359:5390  isCexAddress[cexes[i]] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":5428:5433  cexes */\n      dup4\n      dup4\n        /* \"contracts/new.sol\":5434:5435  i */\n      dup3\n        /* \"contracts/new.sol\":5428:5436  cexes[i] */\n      dup2\n      dup2\n      lt\n      tag_254\n      jumpi\n      tag_255\n      tag_252\n      jump\t// in\n    tag_255:\n    tag_254:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_256\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_256:\n        /* \"contracts/new.sol\":5410:5445  CexAddressUpdated(cexes[i], status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8295e5e995acec8dc9c9248f8db461aeba392bc756bb3db82e642667cc464ae6\n        /* \"contracts/new.sol\":5438:5444  status */\n      dup4\n        /* \"contracts/new.sol\":5410:5445  CexAddressUpdated(cexes[i], status) */\n      mload(0x40)\n      tag_257\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/new.sol\":5339:5342  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/new.sol\":5302:5457  for(uint256 i = 0; i < cexes.length; i++) {... */\n      jump(tag_247)\n    tag_248:\n      pop\n        /* \"contracts/new.sol\":5203:5464  function batchSetCexAddresses(address[] calldata cexes, bool status) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/new.sol\":6243:6516  function batchUpdateBlacklist(address[] calldata accounts, bool status) external onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_259:\n        /* \"contracts/new.sol\":6349:6358  uint256 i */\n      0x00\n        /* \"contracts/new.sol\":6361:6362  0 */\n      0x00\n        /* \"contracts/new.sol\":6349:6362  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/new.sol\":6345:6509  for(uint256 i = 0; i < accounts.length; i++) {... */\n    tag_261:\n        /* \"contracts/new.sol\":6368:6376  accounts */\n      dup4\n      dup4\n        /* \"contracts/new.sol\":6368:6383  accounts.length */\n      swap1\n      pop\n        /* \"contracts/new.sol\":6364:6365  i */\n      dup2\n        /* \"contracts/new.sol\":6364:6383  i < accounts.length */\n      lt\n        /* \"contracts/new.sol\":6345:6509  for(uint256 i = 0; i < accounts.length; i++) {... */\n      iszero\n      tag_262\n      jumpi\n        /* \"contracts/new.sol\":6434:6440  status */\n      dup2\n        /* \"contracts/new.sol\":6405:6418  isBlacklisted */\n      0x0b\n        /* \"contracts/new.sol\":6405:6431  isBlacklisted[accounts[i]] */\n      0x00\n        /* \"contracts/new.sol\":6419:6427  accounts */\n      dup7\n      dup7\n        /* \"contracts/new.sol\":6428:6429  i */\n      dup6\n        /* \"contracts/new.sol\":6419:6430  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_264\n      jumpi\n      tag_265\n      tag_252\n      jump\t// in\n    tag_265:\n    tag_264:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_266\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_266:\n        /* \"contracts/new.sol\":6405:6431  isBlacklisted[accounts[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/new.sol\":6405:6440  isBlacklisted[accounts[i]] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":6477:6485  accounts */\n      dup4\n      dup4\n        /* \"contracts/new.sol\":6486:6487  i */\n      dup3\n        /* \"contracts/new.sol\":6477:6488  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_267\n      jumpi\n      tag_268\n      tag_252\n      jump\t// in\n    tag_268:\n    tag_267:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_269\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_269:\n        /* \"contracts/new.sol\":6460:6497  BlacklistUpdated(accounts[i], status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac\n        /* \"contracts/new.sol\":6490:6496  status */\n      dup4\n        /* \"contracts/new.sol\":6460:6497  BlacklistUpdated(accounts[i], status) */\n      mload(0x40)\n      tag_270\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/new.sol\":6385:6388  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/new.sol\":6345:6509  for(uint256 i = 0; i < accounts.length; i++) {... */\n      jump(tag_261)\n    tag_262:\n      pop\n        /* \"contracts/new.sol\":6243:6516  function batchUpdateBlacklist(address[] calldata accounts, bool status) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/new.sol\":6524:6797  function batchUpdateWhitelist(address[] calldata accounts, bool status) external onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_272\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_272:\n        /* \"contracts/new.sol\":6630:6639  uint256 i */\n      0x00\n        /* \"contracts/new.sol\":6642:6643  0 */\n      0x00\n        /* \"contracts/new.sol\":6630:6643  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/new.sol\":6626:6790  for(uint256 i = 0; i < accounts.length; i++) {... */\n    tag_274:\n        /* \"contracts/new.sol\":6649:6657  accounts */\n      dup4\n      dup4\n        /* \"contracts/new.sol\":6649:6664  accounts.length */\n      swap1\n      pop\n        /* \"contracts/new.sol\":6645:6646  i */\n      dup2\n        /* \"contracts/new.sol\":6645:6664  i < accounts.length */\n      lt\n        /* \"contracts/new.sol\":6626:6790  for(uint256 i = 0; i < accounts.length; i++) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"contracts/new.sol\":6715:6721  status */\n      dup2\n        /* \"contracts/new.sol\":6686:6699  isWhitelisted */\n      0x0c\n        /* \"contracts/new.sol\":6686:6712  isWhitelisted[accounts[i]] */\n      0x00\n        /* \"contracts/new.sol\":6700:6708  accounts */\n      dup7\n      dup7\n        /* \"contracts/new.sol\":6709:6710  i */\n      dup6\n        /* \"contracts/new.sol\":6700:6711  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_277\n      jumpi\n      tag_278\n      tag_252\n      jump\t// in\n    tag_278:\n    tag_277:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_279\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_279:\n        /* \"contracts/new.sol\":6686:6712  isWhitelisted[accounts[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/new.sol\":6686:6721  isWhitelisted[accounts[i]] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":6758:6766  accounts */\n      dup4\n      dup4\n        /* \"contracts/new.sol\":6767:6768  i */\n      dup3\n        /* \"contracts/new.sol\":6758:6769  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_280\n      jumpi\n      tag_281\n      tag_252\n      jump\t// in\n    tag_281:\n    tag_280:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_282\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_282:\n        /* \"contracts/new.sol\":6741:6778  WhitelistUpdated(accounts[i], status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d\n        /* \"contracts/new.sol\":6771:6777  status */\n      dup4\n        /* \"contracts/new.sol\":6741:6778  WhitelistUpdated(accounts[i], status) */\n      mload(0x40)\n      tag_283\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/new.sol\":6666:6669  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/new.sol\":6626:6790  for(uint256 i = 0; i < accounts.length; i++) {... */\n      jump(tag_274)\n    tag_275:\n      pop\n        /* \"contracts/new.sol\":6524:6797  function batchUpdateWhitelist(address[] calldata accounts, bool status) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/new.sol\":1046:1077  uint256 public transferCooldown */\n    tag_119:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_286\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_288\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/new.sol\":1246:1298  mapping(address => uint256) public dailyTradedAmount */\n    tag_129:\n      mstore(0x20, 0x10)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/new.sol\":4742:4901  function setCexAddress(address cex, bool status) external onlyOwner {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_292:\n        /* \"contracts/new.sol\":4841:4847  status */\n      dup1\n        /* \"contracts/new.sol\":4821:4833  isCexAddress */\n      0x0f\n        /* \"contracts/new.sol\":4821:4838  isCexAddress[cex] */\n      0x00\n        /* \"contracts/new.sol\":4834:4837  cex */\n      dup5\n        /* \"contracts/new.sol\":4821:4838  isCexAddress[cex] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/new.sol\":4821:4847  isCexAddress[cex] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":4881:4884  cex */\n      dup2\n        /* \"contracts/new.sol\":4863:4893  CexAddressUpdated(cex, status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8295e5e995acec8dc9c9248f8db461aeba392bc756bb3db82e642667cc464ae6\n        /* \"contracts/new.sol\":4886:4892  status */\n      dup3\n        /* \"contracts/new.sol\":4863:4893  CexAddressUpdated(cex, status) */\n      mload(0x40)\n      tag_294\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/new.sol\":4742:4901  function setCexAddress(address cex, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/new.sol\":5511:5684  function updateBlacklist(address account, bool status) external onlyOwner {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_296\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_296:\n        /* \"contracts/new.sol\":5621:5627  status */\n      dup1\n        /* \"contracts/new.sol\":5596:5609  isBlacklisted */\n      0x0b\n        /* \"contracts/new.sol\":5596:5618  isBlacklisted[account] */\n      0x00\n        /* \"contracts/new.sol\":5610:5617  account */\n      dup5\n        /* \"contracts/new.sol\":5596:5618  isBlacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/new.sol\":5596:5627  isBlacklisted[account] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":5660:5667  account */\n      dup2\n        /* \"contracts/new.sol\":5643:5676  BlacklistUpdated(account, status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac\n        /* \"contracts/new.sol\":5669:5675  status */\n      dup3\n        /* \"contracts/new.sol\":5643:5676  BlacklistUpdated(account, status) */\n      mload(0x40)\n      tag_298\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/new.sol\":5511:5684  function updateBlacklist(address account, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_300\n      swap1\n      tag_182\n      jump\t// in\n    tag_300:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_301\n      swap1\n      tag_182\n      jump\t// in\n    tag_301:\n      dup1\n      iszero\n      tag_302\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_303\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_302)\n    tag_303:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_304:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_304\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_302:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/new.sol\":3710:4114  function transfer(address to, uint256 amount) ... */\n    tag_146:\n        /* \"contracts/new.sol\":3887:3891  bool */\n      0x00\n        /* \"contracts/new.sol\":3821:3831  msg.sender */\n      caller\n        /* \"contracts/new.sol\":3833:3835  to */\n      dup4\n        /* \"contracts/new.sol\":3837:3843  amount */\n      dup4\n        /* \"contracts/new.sol\":2412:2425  isBlacklisted */\n      0x0b\n        /* \"contracts/new.sol\":2412:2431  isBlacklisted[from] */\n      0x00\n        /* \"contracts/new.sol\":2426:2430  from */\n      dup5\n        /* \"contracts/new.sol\":2412:2431  isBlacklisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":2411:2431  !isBlacklisted[from] */\n      iszero\n        /* \"contracts/new.sol\":2411:2453  !isBlacklisted[from] && !isBlacklisted[to] */\n      dup1\n      iszero\n      tag_306\n      jumpi\n      pop\n        /* \"contracts/new.sol\":2436:2449  isBlacklisted */\n      0x0b\n        /* \"contracts/new.sol\":2436:2453  isBlacklisted[to] */\n      0x00\n        /* \"contracts/new.sol\":2450:2452  to */\n      dup4\n        /* \"contracts/new.sol\":2436:2453  isBlacklisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":2435:2453  !isBlacklisted[to] */\n      iszero\n        /* \"contracts/new.sol\":2411:2453  !isBlacklisted[from] && !isBlacklisted[to] */\n    tag_306:\n        /* \"contracts/new.sol\":2403:2480  require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap1\n      tag_201\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_307:\n        /* \"contracts/new.sol\":2585:2594  isDexPool */\n      0x0e\n        /* \"contracts/new.sol\":2585:2600  isDexPool[from] */\n      0x00\n        /* \"contracts/new.sol\":2595:2599  from */\n      dup5\n        /* \"contracts/new.sol\":2585:2600  isDexPool[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":2585:2625  isDexPool[from] && msg.sender != owner() */\n      dup1\n      iszero\n      tag_309\n      jumpi\n      pop\n        /* \"contracts/new.sol\":2618:2625  owner() */\n      tag_310\n        /* \"contracts/new.sol\":2618:2623  owner */\n      tag_132\n        /* \"contracts/new.sol\":2618:2625  owner() */\n      jump\t// in\n    tag_310:\n        /* \"contracts/new.sol\":2604:2625  msg.sender != owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/new.sol\":2604:2614  msg.sender */\n      caller\n        /* \"contracts/new.sol\":2604:2625  msg.sender != owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/new.sol\":2585:2625  isDexPool[from] && msg.sender != owner() */\n    tag_309:\n        /* \"contracts/new.sol\":2585:2655  isDexPool[from] && msg.sender != owner() && !isWhitelisted[msg.sender] */\n      dup1\n      iszero\n      tag_311\n      jumpi\n      pop\n        /* \"contracts/new.sol\":2630:2643  isWhitelisted */\n      0x0c\n        /* \"contracts/new.sol\":2630:2655  isWhitelisted[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":2644:2654  msg.sender */\n      caller\n        /* \"contracts/new.sol\":2630:2655  isWhitelisted[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":2629:2655  !isWhitelisted[msg.sender] */\n      iszero\n        /* \"contracts/new.sol\":2585:2655  isDexPool[from] && msg.sender != owner() && !isWhitelisted[msg.sender] */\n    tag_311:\n        /* \"contracts/new.sol\":2581:3258  if (isDexPool[from] && msg.sender != owner() && !isWhitelisted[msg.sender]) {... */\n      iszero\n      tag_312\n      jumpi\n        /* \"contracts/new.sol\":2806:2812  1 days */\n      0x015180\n        /* \"contracts/new.sol\":2773:2791  lastTradeTimestamp */\n      0x11\n        /* \"contracts/new.sol\":2773:2803  lastTradeTimestamp[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":2792:2802  msg.sender */\n      caller\n        /* \"contracts/new.sol\":2773:2803  lastTradeTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/new.sol\":2773:2812  lastTradeTimestamp[msg.sender] + 1 days */\n      tag_313\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_313:\n        /* \"contracts/new.sol\":2755:2770  block.timestamp */\n      timestamp\n        /* \"contracts/new.sol\":2755:2812  block.timestamp > lastTradeTimestamp[msg.sender] + 1 days */\n      gt\n        /* \"contracts/new.sol\":2751:2937  if (block.timestamp > lastTradeTimestamp[msg.sender] + 1 days) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"contracts/new.sol\":2861:2862  0 */\n      0x00\n        /* \"contracts/new.sol\":2829:2846  dailyTradedAmount */\n      0x10\n        /* \"contracts/new.sol\":2829:2858  dailyTradedAmount[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":2847:2857  msg.sender */\n      caller\n        /* \"contracts/new.sol\":2829:2858  dailyTradedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/new.sol\":2829:2862  dailyTradedAmount[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":2910:2925  block.timestamp */\n      timestamp\n        /* \"contracts/new.sol\":2877:2895  lastTradeTimestamp */\n      0x11\n        /* \"contracts/new.sol\":2877:2907  lastTradeTimestamp[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":2896:2906  msg.sender */\n      caller\n        /* \"contracts/new.sol\":2877:2907  lastTradeTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/new.sol\":2877:2925  lastTradeTimestamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":2751:2937  if (block.timestamp > lastTradeTimestamp[msg.sender] + 1 days) {... */\n    tag_314:\n        /* \"contracts/new.sol\":524:544  100_000_000 * 10**18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/new.sol\":2983:3024  dailyTradedAmount[msg.sender].add(amount) */\n      tag_315\n        /* \"contracts/new.sol\":3017:3023  amount */\n      dup3\n        /* \"contracts/new.sol\":2983:3000  dailyTradedAmount */\n      0x10\n        /* \"contracts/new.sol\":2983:3012  dailyTradedAmount[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":3001:3011  msg.sender */\n      caller\n        /* \"contracts/new.sol\":2983:3012  dailyTradedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/new.sol\":2983:3016  dailyTradedAmount[msg.sender].add */\n      tag_210\n      swap1\n        /* \"contracts/new.sol\":2983:3024  dailyTradedAmount[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_315:\n        /* \"contracts/new.sol\":2983:3045  dailyTradedAmount[msg.sender].add(amount) <= DAILY_TRADE_LIMIT */\n      gt\n      iszero\n        /* \"contracts/new.sol\":2949:3125  require(            ... */\n      tag_316\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap1\n      tag_213\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_316:\n        /* \"contracts/new.sol\":3209:3250  dailyTradedAmount[msg.sender].add(amount) */\n      tag_318\n        /* \"contracts/new.sol\":3243:3249  amount */\n      dup2\n        /* \"contracts/new.sol\":3209:3226  dailyTradedAmount */\n      0x10\n        /* \"contracts/new.sol\":3209:3238  dailyTradedAmount[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":3227:3237  msg.sender */\n      caller\n        /* \"contracts/new.sol\":3209:3238  dailyTradedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/new.sol\":3209:3242  dailyTradedAmount[msg.sender].add */\n      tag_210\n      swap1\n        /* \"contracts/new.sol\":3209:3250  dailyTradedAmount[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_318:\n        /* \"contracts/new.sol\":3177:3194  dailyTradedAmount */\n      0x10\n        /* \"contracts/new.sol\":3177:3206  dailyTradedAmount[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":3195:3205  msg.sender */\n      caller\n        /* \"contracts/new.sol\":3177:3206  dailyTradedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/new.sol\":3177:3250  dailyTradedAmount[msg.sender] = dailyTradedAmount[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":2581:3258  if (isDexPool[from] && msg.sender != owner() && !isWhitelisted[msg.sender]) {... */\n    tag_312:\n        /* \"contracts/new.sol\":3326:3338  isCexAddress */\n      0x0f\n        /* \"contracts/new.sol\":3326:3344  isCexAddress[from] */\n      0x00\n        /* \"contracts/new.sol\":3339:3343  from */\n      dup5\n        /* \"contracts/new.sol\":3326:3344  isCexAddress[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":3325:3344  !isCexAddress[from] */\n      iszero\n        /* \"contracts/new.sol\":3325:3365  !isCexAddress[from] && !isCexAddress[to] */\n      dup1\n      iszero\n      tag_319\n      jumpi\n      pop\n        /* \"contracts/new.sol\":3349:3361  isCexAddress */\n      0x0f\n        /* \"contracts/new.sol\":3349:3365  isCexAddress[to] */\n      0x00\n        /* \"contracts/new.sol\":3362:3364  to */\n      dup4\n        /* \"contracts/new.sol\":3349:3365  isCexAddress[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":3348:3365  !isCexAddress[to] */\n      iszero\n        /* \"contracts/new.sol\":3325:3365  !isCexAddress[from] && !isCexAddress[to] */\n    tag_319:\n        /* \"contracts/new.sol\":3325:3389  !isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] */\n      dup1\n      iszero\n      tag_320\n      jumpi\n      pop\n        /* \"contracts/new.sol\":3370:3383  isWhitelisted */\n      0x0c\n        /* \"contracts/new.sol\":3370:3389  isWhitelisted[from] */\n      0x00\n        /* \"contracts/new.sol\":3384:3388  from */\n      dup5\n        /* \"contracts/new.sol\":3370:3389  isWhitelisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":3369:3389  !isWhitelisted[from] */\n      iszero\n        /* \"contracts/new.sol\":3325:3389  !isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] */\n    tag_320:\n        /* \"contracts/new.sol\":3325:3411  !isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] && !isWhitelisted[to] */\n      dup1\n      iszero\n      tag_321\n      jumpi\n      pop\n        /* \"contracts/new.sol\":3394:3407  isWhitelisted */\n      0x0c\n        /* \"contracts/new.sol\":3394:3411  isWhitelisted[to] */\n      0x00\n        /* \"contracts/new.sol\":3408:3410  to */\n      dup4\n        /* \"contracts/new.sol\":3394:3411  isWhitelisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/new.sol\":3393:3411  !isWhitelisted[to] */\n      iszero\n        /* \"contracts/new.sol\":3325:3411  !isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] && !isWhitelisted[to] */\n    tag_321:\n        /* \"contracts/new.sol\":3321:3691  if (!isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] && !isWhitelisted[to]) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"contracts/new.sol\":3451:3495  lastTransferTime[from].add(transferCooldown) */\n      tag_323\n        /* \"contracts/new.sol\":3478:3494  transferCooldown */\n      sload(0x0d)\n        /* \"contracts/new.sol\":3451:3467  lastTransferTime */\n      0x09\n        /* \"contracts/new.sol\":3451:3473  lastTransferTime[from] */\n      0x00\n        /* \"contracts/new.sol\":3468:3472  from */\n      dup7\n        /* \"contracts/new.sol\":3451:3473  lastTransferTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/new.sol\":3451:3477  lastTransferTime[from].add */\n      tag_210\n      swap1\n        /* \"contracts/new.sol\":3451:3495  lastTransferTime[from].add(transferCooldown) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_323:\n        /* \"contracts/new.sol\":3432:3447  block.timestamp */\n      timestamp\n        /* \"contracts/new.sol\":3432:3495  block.timestamp >= lastTransferTime[from].add(transferCooldown) */\n      lt\n      iszero\n        /* \"contracts/new.sol\":3424:3515  require(block.timestamp >= lastTransferTime[from].add(transferCooldown), \"Cooldown active\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap1\n      tag_222\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"contracts/new.sol\":3566:3567  0 */\n      0x00\n        /* \"contracts/new.sol\":3540:3556  tokenReceiveTime */\n      0x0a\n        /* \"contracts/new.sol\":3540:3562  tokenReceiveTime[from] */\n      0x00\n        /* \"contracts/new.sol\":3557:3561  from */\n      dup6\n        /* \"contracts/new.sol\":3540:3562  tokenReceiveTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/new.sol\":3540:3567  tokenReceiveTime[from] != 0 */\n      eq\n        /* \"contracts/new.sol\":3536:3684  if (tokenReceiveTime[from] != 0) {... */\n      tag_326\n      jumpi\n        /* \"contracts/new.sol\":3611:3650  tokenReceiveTime[from].add(minHoldTime) */\n      tag_327\n        /* \"contracts/new.sol\":3638:3649  minHoldTime */\n      sload(0x08)\n        /* \"contracts/new.sol\":3611:3627  tokenReceiveTime */\n      0x0a\n        /* \"contracts/new.sol\":3611:3633  tokenReceiveTime[from] */\n      0x00\n        /* \"contracts/new.sol\":3628:3632  from */\n      dup7\n        /* \"contracts/new.sol\":3611:3633  tokenReceiveTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/new.sol\":3611:3637  tokenReceiveTime[from].add */\n      tag_210\n      swap1\n        /* \"contracts/new.sol\":3611:3650  tokenReceiveTime[from].add(minHoldTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_327:\n        /* \"contracts/new.sol\":3592:3607  block.timestamp */\n      timestamp\n        /* \"contracts/new.sol\":3592:3650  block.timestamp >= tokenReceiveTime[from].add(minHoldTime) */\n      lt\n      iszero\n        /* \"contracts/new.sol\":3584:3672  require(block.timestamp >= tokenReceiveTime[from].add(minHoldTime), \"Hold time not met\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap1\n      tag_227\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"contracts/new.sol\":3536:3684  if (tokenReceiveTime[from] != 0) {... */\n    tag_326:\n        /* \"contracts/new.sol\":3321:3691  if (!isCexAddress[from] && !isCexAddress[to] && !isWhitelisted[from] && !isWhitelisted[to]) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_331\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_230\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_331:\n        /* \"contracts/new.sol\":3932:3933  0 */\n      0x00\n        /* \"contracts/new.sol\":3918:3934  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/new.sol\":3918:3920  to */\n      dup7\n        /* \"contracts/new.sol\":3918:3934  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/new.sol\":3910:3956  require(to != address(0), \"Invalid recipient\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap1\n      tag_234\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_333:\n        /* \"contracts/new.sol\":3990:4005  block.timestamp */\n      timestamp\n        /* \"contracts/new.sol\":3967:3983  tokenReceiveTime */\n      0x0a\n        /* \"contracts/new.sol\":3967:3987  tokenReceiveTime[to] */\n      0x00\n        /* \"contracts/new.sol\":3984:3986  to */\n      dup9\n        /* \"contracts/new.sol\":3967:3987  tokenReceiveTime[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/new.sol\":3967:4005  tokenReceiveTime[to] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":4047:4062  block.timestamp */\n      timestamp\n        /* \"contracts/new.sol\":4016:4032  lastTransferTime */\n      0x09\n        /* \"contracts/new.sol\":4016:4044  lastTransferTime[msg.sender] */\n      0x00\n        /* \"contracts/new.sol\":4033:4043  msg.sender */\n      caller\n        /* \"contracts/new.sol\":4016:4044  lastTransferTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/new.sol\":4016:4062  lastTransferTime[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":4080:4106  super.transfer(to, amount) */\n      tag_335\n        /* \"contracts/new.sol\":4095:4097  to */\n      dup7\n        /* \"contracts/new.sol\":4099:4105  amount */\n      dup7\n        /* \"contracts/new.sol\":4080:4094  super.transfer */\n      tag_336\n        /* \"contracts/new.sol\":4080:4106  super.transfer(to, amount) */\n      jump\t// in\n    tag_335:\n        /* \"contracts/new.sol\":4073:4106  return super.transfer(to, amount) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_337\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_238\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_337:\n        /* \"contracts/new.sol\":3710:4114  function transfer(address to, uint256 amount) ... */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/new.sol\":4944:5195  function batchSetDexPools(address[] calldata pools, bool status) external onlyOwner {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_339\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_339:\n        /* \"contracts/new.sol\":5043:5052  uint256 i */\n      0x00\n        /* \"contracts/new.sol\":5055:5056  0 */\n      0x00\n        /* \"contracts/new.sol\":5043:5056  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/new.sol\":5039:5188  for(uint256 i = 0; i < pools.length; i++) {... */\n    tag_341:\n        /* \"contracts/new.sol\":5062:5067  pools */\n      dup4\n      dup4\n        /* \"contracts/new.sol\":5062:5074  pools.length */\n      swap1\n      pop\n        /* \"contracts/new.sol\":5058:5059  i */\n      dup2\n        /* \"contracts/new.sol\":5058:5074  i < pools.length */\n      lt\n        /* \"contracts/new.sol\":5039:5188  for(uint256 i = 0; i < pools.length; i++) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"contracts/new.sol\":5118:5124  status */\n      dup2\n        /* \"contracts/new.sol\":5096:5105  isDexPool */\n      0x0e\n        /* \"contracts/new.sol\":5096:5115  isDexPool[pools[i]] */\n      0x00\n        /* \"contracts/new.sol\":5106:5111  pools */\n      dup7\n      dup7\n        /* \"contracts/new.sol\":5112:5113  i */\n      dup6\n        /* \"contracts/new.sol\":5106:5114  pools[i] */\n      dup2\n      dup2\n      lt\n      tag_344\n      jumpi\n      tag_345\n      tag_252\n      jump\t// in\n    tag_345:\n    tag_344:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_346\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_346:\n        /* \"contracts/new.sol\":5096:5115  isDexPool[pools[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/new.sol\":5096:5124  isDexPool[pools[i]] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/new.sol\":5159:5164  pools */\n      dup4\n      dup4\n        /* \"contracts/new.sol\":5165:5166  i */\n      dup3\n        /* \"contracts/new.sol\":5159:5167  pools[i] */\n      dup2\n      dup2\n      lt\n      tag_347\n      jumpi\n      tag_348\n      tag_252\n      jump\t// in\n    tag_348:\n    tag_347:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_349\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_349:\n        /* \"contracts/new.sol\":5144:5176  DexPoolUpdated(pools[i], status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x087ae58f1cb2baf6f5ac7d2f6391a7f26d2e2951312c6eab3761fc754d202de7\n        /* \"contracts/new.sol\":5169:5175  status */\n      dup4\n        /* \"contracts/new.sol\":5144:5176  DexPoolUpdated(pools[i], status) */\n      mload(0x40)\n      tag_350\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/new.sol\":5076:5079  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/new.sol\":5039:5188  for(uint256 i = 0; i < pools.length; i++) {... */\n      jump(tag_341)\n    tag_342:\n      pop\n        /* \"contracts/new.sol\":4944:5195  function batchSetDexPools(address[] calldata pools, bool status) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/new.sol\":1164:1208  mapping(address => bool) public isCexAddress */\n    tag_153:\n      mstore(0x20, 0x0f)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/new.sol\":1305:1358  mapping(address => uint256) public lastTradeTimestamp */\n    tag_162:\n      mstore(0x20, 0x11)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_353\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_356\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_357\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/new.sol\":580:645  uint256 public constant MAX_TRANSFER_AMOUNT = 10_000_000 * 10**18 */\n    tag_168:\n        /* \"contracts/new.sol\":626:645  10_000_000 * 10**18 */\n      0x084595161401484a000000\n        /* \"contracts/new.sol\":580:645  uint256 public constant MAX_TRANSFER_AMOUNT = 10_000_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"contracts/new.sol\":926:971  mapping(address => bool) public isBlacklisted */\n    tag_172:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_359\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_360\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_360:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_361\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_362\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_363\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_366\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_367\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_369\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_371\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_372\n      swap1\n      tag_373\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_371:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_375\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_376\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_377\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_378\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_379\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_383\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_384\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_379\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_386\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_387:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_388\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_389\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_389:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_388:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_390\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_391\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_391:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_390:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_393\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_396\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_397\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_398\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_367\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_398:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_394:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_379:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_400\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_401\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_401:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_402\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_403\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_403:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_402:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_404\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_405\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_404:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_405:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_407\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_408\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_408:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_409)\n    tag_407:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_410\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_411\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_397\n      jump\t// in\n    tag_411:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_409:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_412\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_413)\n    tag_412:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_414\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_414:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_416:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_417:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_418:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_419:\n        /* \"#utility.yul\":490:514   */\n      tag_462\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_418\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_463:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_420:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_465\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_419\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_47:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      0x00\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_468\n      tag_416\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":783:902   */\n    tag_467:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_469\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_420\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_470\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_420\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1269   */\n    tag_421:\n        /* \"#utility.yul\":1222:1228   */\n      0x00\n        /* \"#utility.yul\":1256:1261   */\n      dup2\n        /* \"#utility.yul\":1250:1262   */\n      mload\n        /* \"#utility.yul\":1240:1262   */\n      swap1\n      pop\n        /* \"#utility.yul\":1170:1269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1444   */\n    tag_422:\n        /* \"#utility.yul\":1359:1370   */\n      0x00\n        /* \"#utility.yul\":1393:1399   */\n      dup3\n        /* \"#utility.yul\":1388:1391   */\n      dup3\n        /* \"#utility.yul\":1381:1400   */\n      mstore\n        /* \"#utility.yul\":1433:1437   */\n      0x20\n        /* \"#utility.yul\":1428:1431   */\n      dup3\n        /* \"#utility.yul\":1424:1438   */\n      add\n        /* \"#utility.yul\":1409:1438   */\n      swap1\n      pop\n        /* \"#utility.yul\":1275:1444   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1450:1589   */\n    tag_423:\n        /* \"#utility.yul\":1539:1545   */\n      dup3\n        /* \"#utility.yul\":1534:1537   */\n      dup2\n        /* \"#utility.yul\":1529:1532   */\n      dup4\n        /* \"#utility.yul\":1523:1546   */\n      mcopy\n        /* \"#utility.yul\":1580:1581   */\n      0x00\n        /* \"#utility.yul\":1571:1577   */\n      dup4\n        /* \"#utility.yul\":1566:1569   */\n      dup4\n        /* \"#utility.yul\":1562:1578   */\n      add\n        /* \"#utility.yul\":1555:1582   */\n      mstore\n        /* \"#utility.yul\":1450:1589   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1595:1697   */\n    tag_424:\n        /* \"#utility.yul\":1636:1642   */\n      0x00\n        /* \"#utility.yul\":1687:1689   */\n      0x1f\n        /* \"#utility.yul\":1683:1690   */\n      not\n        /* \"#utility.yul\":1678:1680   */\n      0x1f\n        /* \"#utility.yul\":1671:1676   */\n      dup4\n        /* \"#utility.yul\":1667:1681   */\n      add\n        /* \"#utility.yul\":1663:1691   */\n      and\n        /* \"#utility.yul\":1653:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1595:1697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:2080   */\n    tag_425:\n        /* \"#utility.yul\":1791:1794   */\n      0x00\n        /* \"#utility.yul\":1819:1858   */\n      tag_476\n        /* \"#utility.yul\":1852:1857   */\n      dup3\n        /* \"#utility.yul\":1819:1858   */\n      tag_421\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":1874:1945   */\n      tag_477\n        /* \"#utility.yul\":1938:1944   */\n      dup2\n        /* \"#utility.yul\":1933:1936   */\n      dup6\n        /* \"#utility.yul\":1874:1945   */\n      tag_422\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":1867:1945   */\n      swap4\n      pop\n        /* \"#utility.yul\":1954:2019   */\n      tag_478\n        /* \"#utility.yul\":2012:2018   */\n      dup2\n        /* \"#utility.yul\":2007:2010   */\n      dup6\n        /* \"#utility.yul\":2000:2004   */\n      0x20\n        /* \"#utility.yul\":1993:1998   */\n      dup7\n        /* \"#utility.yul\":1989:2005   */\n      add\n        /* \"#utility.yul\":1954:2019   */\n      tag_423\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":2044:2073   */\n      tag_479\n        /* \"#utility.yul\":2066:2072   */\n      dup2\n        /* \"#utility.yul\":2044:2073   */\n      tag_424\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":2039:2042   */\n      dup5\n        /* \"#utility.yul\":2035:2074   */\n      add\n        /* \"#utility.yul\":2028:2074   */\n      swap2\n      pop\n        /* \"#utility.yul\":1795:2080   */\n      pop\n        /* \"#utility.yul\":1703:2080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2086:2399   */\n    tag_52:\n        /* \"#utility.yul\":2199:2203   */\n      0x00\n        /* \"#utility.yul\":2237:2239   */\n      0x20\n        /* \"#utility.yul\":2226:2235   */\n      dup3\n        /* \"#utility.yul\":2222:2240   */\n      add\n        /* \"#utility.yul\":2214:2240   */\n      swap1\n      pop\n        /* \"#utility.yul\":2286:2295   */\n      dup2\n        /* \"#utility.yul\":2280:2284   */\n      dup2\n        /* \"#utility.yul\":2276:2296   */\n      sub\n        /* \"#utility.yul\":2272:2273   */\n      0x00\n        /* \"#utility.yul\":2261:2270   */\n      dup4\n        /* \"#utility.yul\":2257:2274   */\n      add\n        /* \"#utility.yul\":2250:2297   */\n      mstore\n        /* \"#utility.yul\":2314:2392   */\n      tag_481\n        /* \"#utility.yul\":2387:2391   */\n      dup2\n        /* \"#utility.yul\":2378:2384   */\n      dup5\n        /* \"#utility.yul\":2314:2392   */\n      tag_425\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":2306:2392   */\n      swap1\n      pop\n        /* \"#utility.yul\":2086:2399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2531   */\n    tag_426:\n        /* \"#utility.yul\":2442:2449   */\n      0x00\n        /* \"#utility.yul\":2482:2524   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2475:2480   */\n      dup3\n        /* \"#utility.yul\":2471:2525   */\n      and\n        /* \"#utility.yul\":2460:2525   */\n      swap1\n      pop\n        /* \"#utility.yul\":2405:2531   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2537:2633   */\n    tag_427:\n        /* \"#utility.yul\":2574:2581   */\n      0x00\n        /* \"#utility.yul\":2603:2627   */\n      tag_484\n        /* \"#utility.yul\":2621:2626   */\n      dup3\n        /* \"#utility.yul\":2603:2627   */\n      tag_426\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":2592:2627   */\n      swap1\n      pop\n        /* \"#utility.yul\":2537:2633   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2761   */\n    tag_428:\n        /* \"#utility.yul\":2712:2736   */\n      tag_486\n        /* \"#utility.yul\":2730:2735   */\n      dup2\n        /* \"#utility.yul\":2712:2736   */\n      tag_427\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":2705:2710   */\n      dup2\n        /* \"#utility.yul\":2702:2737   */\n      eq\n        /* \"#utility.yul\":2692:2755   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":2751:2752   */\n      0x00\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2741:2753   */\n      revert\n        /* \"#utility.yul\":2692:2755   */\n    tag_487:\n        /* \"#utility.yul\":2639:2761   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2767:2906   */\n    tag_429:\n        /* \"#utility.yul\":2813:2818   */\n      0x00\n        /* \"#utility.yul\":2851:2857   */\n      dup2\n        /* \"#utility.yul\":2838:2858   */\n      calldataload\n        /* \"#utility.yul\":2829:2858   */\n      swap1\n      pop\n        /* \"#utility.yul\":2867:2900   */\n      tag_489\n        /* \"#utility.yul\":2894:2899   */\n      dup2\n        /* \"#utility.yul\":2867:2900   */\n      tag_428\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":2767:2906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3386   */\n    tag_55:\n        /* \"#utility.yul\":2980:2986   */\n      0x00\n        /* \"#utility.yul\":2988:2994   */\n      0x00\n        /* \"#utility.yul\":3037:3039   */\n      0x40\n        /* \"#utility.yul\":3025:3034   */\n      dup4\n        /* \"#utility.yul\":3016:3023   */\n      dup6\n        /* \"#utility.yul\":3012:3035   */\n      sub\n        /* \"#utility.yul\":3008:3040   */\n      slt\n        /* \"#utility.yul\":3005:3124   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":3043:3122   */\n      tag_492\n      tag_416\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":3005:3124   */\n    tag_491:\n        /* \"#utility.yul\":3163:3164   */\n      0x00\n        /* \"#utility.yul\":3188:3241   */\n      tag_493\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_429\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":3178:3241   */\n      swap3\n      pop\n        /* \"#utility.yul\":3134:3251   */\n      pop\n        /* \"#utility.yul\":3290:3292   */\n      0x20\n        /* \"#utility.yul\":3316:3369   */\n      tag_494\n        /* \"#utility.yul\":3361:3368   */\n      dup6\n        /* \"#utility.yul\":3352:3358   */\n      dup3\n        /* \"#utility.yul\":3341:3350   */\n      dup7\n        /* \"#utility.yul\":3337:3359   */\n      add\n        /* \"#utility.yul\":3316:3369   */\n      tag_420\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":3306:3369   */\n      swap2\n      pop\n        /* \"#utility.yul\":3261:3379   */\n      pop\n        /* \"#utility.yul\":2912:3386   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3392:3482   */\n    tag_430:\n        /* \"#utility.yul\":3426:3433   */\n      0x00\n        /* \"#utility.yul\":3469:3474   */\n      dup2\n        /* \"#utility.yul\":3462:3475   */\n      iszero\n        /* \"#utility.yul\":3455:3476   */\n      iszero\n        /* \"#utility.yul\":3444:3476   */\n      swap1\n      pop\n        /* \"#utility.yul\":3392:3482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3488:3597   */\n    tag_431:\n        /* \"#utility.yul\":3569:3590   */\n      tag_497\n        /* \"#utility.yul\":3584:3589   */\n      dup2\n        /* \"#utility.yul\":3569:3590   */\n      tag_430\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":3564:3567   */\n      dup3\n        /* \"#utility.yul\":3557:3591   */\n      mstore\n        /* \"#utility.yul\":3488:3597   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3603:3813   */\n    tag_58:\n        /* \"#utility.yul\":3690:3694   */\n      0x00\n        /* \"#utility.yul\":3728:3730   */\n      0x20\n        /* \"#utility.yul\":3717:3726   */\n      dup3\n        /* \"#utility.yul\":3713:3731   */\n      add\n        /* \"#utility.yul\":3705:3731   */\n      swap1\n      pop\n        /* \"#utility.yul\":3741:3806   */\n      tag_499\n        /* \"#utility.yul\":3803:3804   */\n      0x00\n        /* \"#utility.yul\":3792:3801   */\n      dup4\n        /* \"#utility.yul\":3788:3805   */\n      add\n        /* \"#utility.yul\":3779:3785   */\n      dup5\n        /* \"#utility.yul\":3741:3806   */\n      tag_431\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":3603:3813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3819:4148   */\n    tag_61:\n        /* \"#utility.yul\":3878:3884   */\n      0x00\n        /* \"#utility.yul\":3927:3929   */\n      0x20\n        /* \"#utility.yul\":3915:3924   */\n      dup3\n        /* \"#utility.yul\":3906:3913   */\n      dup5\n        /* \"#utility.yul\":3902:3925   */\n      sub\n        /* \"#utility.yul\":3898:3930   */\n      slt\n        /* \"#utility.yul\":3895:4014   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":3933:4012   */\n      tag_502\n      tag_416\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":3895:4014   */\n    tag_501:\n        /* \"#utility.yul\":4053:4054   */\n      0x00\n        /* \"#utility.yul\":4078:4131   */\n      tag_503\n        /* \"#utility.yul\":4123:4130   */\n      dup5\n        /* \"#utility.yul\":4114:4120   */\n      dup3\n        /* \"#utility.yul\":4103:4112   */\n      dup6\n        /* \"#utility.yul\":4099:4121   */\n      add\n        /* \"#utility.yul\":4078:4131   */\n      tag_429\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":4068:4131   */\n      swap2\n      pop\n        /* \"#utility.yul\":4024:4141   */\n      pop\n        /* \"#utility.yul\":3819:4148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4154:4272   */\n    tag_432:\n        /* \"#utility.yul\":4241:4265   */\n      tag_505\n        /* \"#utility.yul\":4259:4264   */\n      dup2\n        /* \"#utility.yul\":4241:4265   */\n      tag_418\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":4236:4239   */\n      dup3\n        /* \"#utility.yul\":4229:4266   */\n      mstore\n        /* \"#utility.yul\":4154:4272   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4278:4500   */\n    tag_64:\n        /* \"#utility.yul\":4371:4375   */\n      0x00\n        /* \"#utility.yul\":4409:4411   */\n      0x20\n        /* \"#utility.yul\":4398:4407   */\n      dup3\n        /* \"#utility.yul\":4394:4412   */\n      add\n        /* \"#utility.yul\":4386:4412   */\n      swap1\n      pop\n        /* \"#utility.yul\":4422:4493   */\n      tag_507\n        /* \"#utility.yul\":4490:4491   */\n      0x00\n        /* \"#utility.yul\":4479:4488   */\n      dup4\n        /* \"#utility.yul\":4475:4492   */\n      add\n        /* \"#utility.yul\":4466:4472   */\n      dup5\n        /* \"#utility.yul\":4422:4493   */\n      tag_432\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":4278:4500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4506:4622   */\n    tag_433:\n        /* \"#utility.yul\":4576:4597   */\n      tag_509\n        /* \"#utility.yul\":4591:4596   */\n      dup2\n        /* \"#utility.yul\":4576:4597   */\n      tag_430\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":4569:4574   */\n      dup2\n        /* \"#utility.yul\":4566:4598   */\n      eq\n        /* \"#utility.yul\":4556:4616   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":4612:4613   */\n      0x00\n        /* \"#utility.yul\":4609:4610   */\n      0x00\n        /* \"#utility.yul\":4602:4614   */\n      revert\n        /* \"#utility.yul\":4556:4616   */\n    tag_510:\n        /* \"#utility.yul\":4506:4622   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4628:4761   */\n    tag_434:\n        /* \"#utility.yul\":4671:4676   */\n      0x00\n        /* \"#utility.yul\":4709:4715   */\n      dup2\n        /* \"#utility.yul\":4696:4716   */\n      calldataload\n        /* \"#utility.yul\":4687:4716   */\n      swap1\n      pop\n        /* \"#utility.yul\":4725:4755   */\n      tag_512\n        /* \"#utility.yul\":4749:4754   */\n      dup2\n        /* \"#utility.yul\":4725:4755   */\n      tag_433\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":4628:4761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4767:5235   */\n    tag_67:\n        /* \"#utility.yul\":4832:4838   */\n      0x00\n        /* \"#utility.yul\":4840:4846   */\n      0x00\n        /* \"#utility.yul\":4889:4891   */\n      0x40\n        /* \"#utility.yul\":4877:4886   */\n      dup4\n        /* \"#utility.yul\":4868:4875   */\n      dup6\n        /* \"#utility.yul\":4864:4887   */\n      sub\n        /* \"#utility.yul\":4860:4892   */\n      slt\n        /* \"#utility.yul\":4857:4976   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":4895:4974   */\n      tag_515\n      tag_416\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":4857:4976   */\n    tag_514:\n        /* \"#utility.yul\":5015:5016   */\n      0x00\n        /* \"#utility.yul\":5040:5093   */\n      tag_516\n        /* \"#utility.yul\":5085:5092   */\n      dup6\n        /* \"#utility.yul\":5076:5082   */\n      dup3\n        /* \"#utility.yul\":5065:5074   */\n      dup7\n        /* \"#utility.yul\":5061:5083   */\n      add\n        /* \"#utility.yul\":5040:5093   */\n      tag_429\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":5030:5093   */\n      swap3\n      pop\n        /* \"#utility.yul\":4986:5103   */\n      pop\n        /* \"#utility.yul\":5142:5144   */\n      0x20\n        /* \"#utility.yul\":5168:5218   */\n      tag_517\n        /* \"#utility.yul\":5210:5217   */\n      dup6\n        /* \"#utility.yul\":5201:5207   */\n      dup3\n        /* \"#utility.yul\":5190:5199   */\n      dup7\n        /* \"#utility.yul\":5186:5208   */\n      add\n        /* \"#utility.yul\":5168:5218   */\n      tag_434\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":5158:5218   */\n      swap2\n      pop\n        /* \"#utility.yul\":5113:5228   */\n      pop\n        /* \"#utility.yul\":4767:5235   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5241:5860   */\n    tag_81:\n        /* \"#utility.yul\":5318:5324   */\n      0x00\n        /* \"#utility.yul\":5326:5332   */\n      0x00\n        /* \"#utility.yul\":5334:5340   */\n      0x00\n        /* \"#utility.yul\":5383:5385   */\n      0x60\n        /* \"#utility.yul\":5371:5380   */\n      dup5\n        /* \"#utility.yul\":5362:5369   */\n      dup7\n        /* \"#utility.yul\":5358:5381   */\n      sub\n        /* \"#utility.yul\":5354:5386   */\n      slt\n        /* \"#utility.yul\":5351:5470   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":5389:5468   */\n      tag_520\n      tag_416\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":5351:5470   */\n    tag_519:\n        /* \"#utility.yul\":5509:5510   */\n      0x00\n        /* \"#utility.yul\":5534:5587   */\n      tag_521\n        /* \"#utility.yul\":5579:5586   */\n      dup7\n        /* \"#utility.yul\":5570:5576   */\n      dup3\n        /* \"#utility.yul\":5559:5568   */\n      dup8\n        /* \"#utility.yul\":5555:5577   */\n      add\n        /* \"#utility.yul\":5534:5587   */\n      tag_429\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":5524:5587   */\n      swap4\n      pop\n        /* \"#utility.yul\":5480:5597   */\n      pop\n        /* \"#utility.yul\":5636:5638   */\n      0x20\n        /* \"#utility.yul\":5662:5715   */\n      tag_522\n        /* \"#utility.yul\":5707:5714   */\n      dup7\n        /* \"#utility.yul\":5698:5704   */\n      dup3\n        /* \"#utility.yul\":5687:5696   */\n      dup8\n        /* \"#utility.yul\":5683:5705   */\n      add\n        /* \"#utility.yul\":5662:5715   */\n      tag_429\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":5652:5715   */\n      swap3\n      pop\n        /* \"#utility.yul\":5607:5725   */\n      pop\n        /* \"#utility.yul\":5764:5766   */\n      0x40\n        /* \"#utility.yul\":5790:5843   */\n      tag_523\n        /* \"#utility.yul\":5835:5842   */\n      dup7\n        /* \"#utility.yul\":5826:5832   */\n      dup3\n        /* \"#utility.yul\":5815:5824   */\n      dup8\n        /* \"#utility.yul\":5811:5833   */\n      add\n        /* \"#utility.yul\":5790:5843   */\n      tag_420\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":5780:5843   */\n      swap2\n      pop\n        /* \"#utility.yul\":5735:5853   */\n      pop\n        /* \"#utility.yul\":5241:5860   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5866:5952   */\n    tag_435:\n        /* \"#utility.yul\":5901:5908   */\n      0x00\n        /* \"#utility.yul\":5941:5945   */\n      0xff\n        /* \"#utility.yul\":5934:5939   */\n      dup3\n        /* \"#utility.yul\":5930:5946   */\n      and\n        /* \"#utility.yul\":5919:5946   */\n      swap1\n      pop\n        /* \"#utility.yul\":5866:5952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5958:6070   */\n    tag_436:\n        /* \"#utility.yul\":6041:6063   */\n      tag_526\n        /* \"#utility.yul\":6057:6062   */\n      dup2\n        /* \"#utility.yul\":6041:6063   */\n      tag_435\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":6036:6039   */\n      dup3\n        /* \"#utility.yul\":6029:6064   */\n      mstore\n        /* \"#utility.yul\":5958:6070   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6076:6290   */\n    tag_91:\n        /* \"#utility.yul\":6165:6169   */\n      0x00\n        /* \"#utility.yul\":6203:6205   */\n      0x20\n        /* \"#utility.yul\":6192:6201   */\n      dup3\n        /* \"#utility.yul\":6188:6206   */\n      add\n        /* \"#utility.yul\":6180:6206   */\n      swap1\n      pop\n        /* \"#utility.yul\":6216:6283   */\n      tag_528\n        /* \"#utility.yul\":6280:6281   */\n      0x00\n        /* \"#utility.yul\":6269:6278   */\n      dup4\n        /* \"#utility.yul\":6265:6282   */\n      add\n        /* \"#utility.yul\":6256:6262   */\n      dup5\n        /* \"#utility.yul\":6216:6283   */\n      tag_436\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":6076:6290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6296:6413   */\n    tag_437:\n        /* \"#utility.yul\":6405:6406   */\n      0x00\n        /* \"#utility.yul\":6402:6403   */\n      0x00\n        /* \"#utility.yul\":6395:6407   */\n      revert\n        /* \"#utility.yul\":6419:6536   */\n    tag_438:\n        /* \"#utility.yul\":6528:6529   */\n      0x00\n        /* \"#utility.yul\":6525:6526   */\n      0x00\n        /* \"#utility.yul\":6518:6530   */\n      revert\n        /* \"#utility.yul\":6542:6659   */\n    tag_439:\n        /* \"#utility.yul\":6651:6652   */\n      0x00\n        /* \"#utility.yul\":6648:6649   */\n      0x00\n        /* \"#utility.yul\":6641:6653   */\n      revert\n        /* \"#utility.yul\":6682:7250   */\n    tag_440:\n        /* \"#utility.yul\":6755:6763   */\n      0x00\n        /* \"#utility.yul\":6765:6771   */\n      0x00\n        /* \"#utility.yul\":6815:6818   */\n      dup4\n        /* \"#utility.yul\":6808:6812   */\n      0x1f\n        /* \"#utility.yul\":6800:6806   */\n      dup5\n        /* \"#utility.yul\":6796:6813   */\n      add\n        /* \"#utility.yul\":6792:6819   */\n      slt\n        /* \"#utility.yul\":6782:6904   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":6823:6902   */\n      tag_534\n      tag_437\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":6782:6904   */\n    tag_533:\n        /* \"#utility.yul\":6936:6942   */\n      dup3\n        /* \"#utility.yul\":6923:6943   */\n      calldataload\n        /* \"#utility.yul\":6913:6943   */\n      swap1\n      pop\n        /* \"#utility.yul\":6966:6984   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6958:6964   */\n      dup2\n        /* \"#utility.yul\":6955:6985   */\n      gt\n        /* \"#utility.yul\":6952:7069   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":6988:7067   */\n      tag_536\n      tag_438\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":6952:7069   */\n    tag_535:\n        /* \"#utility.yul\":7102:7106   */\n      0x20\n        /* \"#utility.yul\":7094:7100   */\n      dup4\n        /* \"#utility.yul\":7090:7107   */\n      add\n        /* \"#utility.yul\":7078:7107   */\n      swap2\n      pop\n        /* \"#utility.yul\":7156:7159   */\n      dup4\n        /* \"#utility.yul\":7148:7152   */\n      0x20\n        /* \"#utility.yul\":7140:7146   */\n      dup3\n        /* \"#utility.yul\":7136:7153   */\n      mul\n        /* \"#utility.yul\":7126:7134   */\n      dup4\n        /* \"#utility.yul\":7122:7154   */\n      add\n        /* \"#utility.yul\":7119:7160   */\n      gt\n        /* \"#utility.yul\":7116:7244   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":7163:7242   */\n      tag_538\n      tag_439\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":7116:7244   */\n    tag_537:\n        /* \"#utility.yul\":6682:7250   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7256:7954   */\n    tag_110:\n        /* \"#utility.yul\":7348:7354   */\n      0x00\n        /* \"#utility.yul\":7356:7362   */\n      0x00\n        /* \"#utility.yul\":7364:7370   */\n      0x00\n        /* \"#utility.yul\":7413:7415   */\n      0x40\n        /* \"#utility.yul\":7401:7410   */\n      dup5\n        /* \"#utility.yul\":7392:7399   */\n      dup7\n        /* \"#utility.yul\":7388:7411   */\n      sub\n        /* \"#utility.yul\":7384:7416   */\n      slt\n        /* \"#utility.yul\":7381:7500   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":7419:7498   */\n      tag_541\n      tag_416\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":7381:7500   */\n    tag_540:\n        /* \"#utility.yul\":7567:7568   */\n      0x00\n        /* \"#utility.yul\":7556:7565   */\n      dup5\n        /* \"#utility.yul\":7552:7569   */\n      add\n        /* \"#utility.yul\":7539:7570   */\n      calldataload\n        /* \"#utility.yul\":7597:7615   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7589:7595   */\n      dup2\n        /* \"#utility.yul\":7586:7616   */\n      gt\n        /* \"#utility.yul\":7583:7700   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":7619:7698   */\n      tag_543\n      tag_417\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":7583:7700   */\n    tag_542:\n        /* \"#utility.yul\":7732:7812   */\n      tag_544\n        /* \"#utility.yul\":7804:7811   */\n      dup7\n        /* \"#utility.yul\":7795:7801   */\n      dup3\n        /* \"#utility.yul\":7784:7793   */\n      dup8\n        /* \"#utility.yul\":7780:7802   */\n      add\n        /* \"#utility.yul\":7732:7812   */\n      tag_440\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":7714:7812   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":7510:7822   */\n      pop\n        /* \"#utility.yul\":7861:7863   */\n      0x20\n        /* \"#utility.yul\":7887:7937   */\n      tag_545\n        /* \"#utility.yul\":7929:7936   */\n      dup7\n        /* \"#utility.yul\":7920:7926   */\n      dup3\n        /* \"#utility.yul\":7909:7918   */\n      dup8\n        /* \"#utility.yul\":7905:7927   */\n      add\n        /* \"#utility.yul\":7887:7937   */\n      tag_434\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":7877:7937   */\n      swap2\n      pop\n        /* \"#utility.yul\":7832:7947   */\n      pop\n        /* \"#utility.yul\":7256:7954   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7960:8078   */\n    tag_441:\n        /* \"#utility.yul\":8047:8071   */\n      tag_547\n        /* \"#utility.yul\":8065:8070   */\n      dup2\n        /* \"#utility.yul\":8047:8071   */\n      tag_427\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":8042:8045   */\n      dup3\n        /* \"#utility.yul\":8035:8072   */\n      mstore\n        /* \"#utility.yul\":7960:8078   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8084:8306   */\n    tag_134:\n        /* \"#utility.yul\":8177:8181   */\n      0x00\n        /* \"#utility.yul\":8215:8217   */\n      0x20\n        /* \"#utility.yul\":8204:8213   */\n      dup3\n        /* \"#utility.yul\":8200:8218   */\n      add\n        /* \"#utility.yul\":8192:8218   */\n      swap1\n      pop\n        /* \"#utility.yul\":8228:8299   */\n      tag_549\n        /* \"#utility.yul\":8296:8297   */\n      0x00\n        /* \"#utility.yul\":8285:8294   */\n      dup4\n        /* \"#utility.yul\":8281:8298   */\n      add\n        /* \"#utility.yul\":8272:8278   */\n      dup5\n        /* \"#utility.yul\":8228:8299   */\n      tag_441\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":8084:8306   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8312:8786   */\n    tag_157:\n        /* \"#utility.yul\":8380:8386   */\n      0x00\n        /* \"#utility.yul\":8388:8394   */\n      0x00\n        /* \"#utility.yul\":8437:8439   */\n      0x40\n        /* \"#utility.yul\":8425:8434   */\n      dup4\n        /* \"#utility.yul\":8416:8423   */\n      dup6\n        /* \"#utility.yul\":8412:8435   */\n      sub\n        /* \"#utility.yul\":8408:8440   */\n      slt\n        /* \"#utility.yul\":8405:8524   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":8443:8522   */\n      tag_552\n      tag_416\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":8405:8524   */\n    tag_551:\n        /* \"#utility.yul\":8563:8564   */\n      0x00\n        /* \"#utility.yul\":8588:8641   */\n      tag_553\n        /* \"#utility.yul\":8633:8640   */\n      dup6\n        /* \"#utility.yul\":8624:8630   */\n      dup3\n        /* \"#utility.yul\":8613:8622   */\n      dup7\n        /* \"#utility.yul\":8609:8631   */\n      add\n        /* \"#utility.yul\":8588:8641   */\n      tag_429\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":8578:8641   */\n      swap3\n      pop\n        /* \"#utility.yul\":8534:8651   */\n      pop\n        /* \"#utility.yul\":8690:8692   */\n      0x20\n        /* \"#utility.yul\":8716:8769   */\n      tag_554\n        /* \"#utility.yul\":8761:8768   */\n      dup6\n        /* \"#utility.yul\":8752:8758   */\n      dup3\n        /* \"#utility.yul\":8741:8750   */\n      dup7\n        /* \"#utility.yul\":8737:8759   */\n      add\n        /* \"#utility.yul\":8716:8769   */\n      tag_429\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":8706:8769   */\n      swap2\n      pop\n        /* \"#utility.yul\":8661:8779   */\n      pop\n        /* \"#utility.yul\":8312:8786   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8792:9124   */\n    tag_179:\n        /* \"#utility.yul\":8913:8917   */\n      0x00\n        /* \"#utility.yul\":8951:8953   */\n      0x40\n        /* \"#utility.yul\":8940:8949   */\n      dup3\n        /* \"#utility.yul\":8936:8954   */\n      add\n        /* \"#utility.yul\":8928:8954   */\n      swap1\n      pop\n        /* \"#utility.yul\":8964:9035   */\n      tag_556\n        /* \"#utility.yul\":9032:9033   */\n      0x00\n        /* \"#utility.yul\":9021:9030   */\n      dup4\n        /* \"#utility.yul\":9017:9034   */\n      add\n        /* \"#utility.yul\":9008:9014   */\n      dup6\n        /* \"#utility.yul\":8964:9035   */\n      tag_432\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":9045:9117   */\n      tag_557\n        /* \"#utility.yul\":9113:9115   */\n      0x20\n        /* \"#utility.yul\":9102:9111   */\n      dup4\n        /* \"#utility.yul\":9098:9116   */\n      add\n        /* \"#utility.yul\":9089:9095   */\n      dup5\n        /* \"#utility.yul\":9045:9117   */\n      tag_432\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":8792:9124   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9130:9310   */\n    tag_442:\n        /* \"#utility.yul\":9178:9255   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9175:9176   */\n      0x00\n        /* \"#utility.yul\":9168:9256   */\n      mstore\n        /* \"#utility.yul\":9275:9279   */\n      0x22\n        /* \"#utility.yul\":9272:9273   */\n      0x04\n        /* \"#utility.yul\":9265:9280   */\n      mstore\n        /* \"#utility.yul\":9299:9303   */\n      0x24\n        /* \"#utility.yul\":9296:9297   */\n      0x00\n        /* \"#utility.yul\":9289:9304   */\n      revert\n        /* \"#utility.yul\":9316:9636   */\n    tag_182:\n        /* \"#utility.yul\":9360:9366   */\n      0x00\n        /* \"#utility.yul\":9397:9398   */\n      0x02\n        /* \"#utility.yul\":9391:9395   */\n      dup3\n        /* \"#utility.yul\":9387:9399   */\n      div\n        /* \"#utility.yul\":9377:9399   */\n      swap1\n      pop\n        /* \"#utility.yul\":9444:9445   */\n      0x01\n        /* \"#utility.yul\":9438:9442   */\n      dup3\n        /* \"#utility.yul\":9434:9446   */\n      and\n        /* \"#utility.yul\":9465:9483   */\n      dup1\n        /* \"#utility.yul\":9455:9536   */\n      tag_560\n      jumpi\n        /* \"#utility.yul\":9521:9525   */\n      0x7f\n        /* \"#utility.yul\":9513:9519   */\n      dup3\n        /* \"#utility.yul\":9509:9526   */\n      and\n        /* \"#utility.yul\":9499:9526   */\n      swap2\n      pop\n        /* \"#utility.yul\":9455:9536   */\n    tag_560:\n        /* \"#utility.yul\":9583:9585   */\n      0x20\n        /* \"#utility.yul\":9575:9581   */\n      dup3\n        /* \"#utility.yul\":9572:9586   */\n      lt\n        /* \"#utility.yul\":9552:9570   */\n      dup2\n        /* \"#utility.yul\":9549:9587   */\n      sub\n        /* \"#utility.yul\":9546:9630   */\n      tag_561\n      jumpi\n        /* \"#utility.yul\":9602:9620   */\n      tag_562\n      tag_442\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":9546:9630   */\n    tag_561:\n        /* \"#utility.yul\":9367:9636   */\n      pop\n        /* \"#utility.yul\":9316:9636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9642:9814   */\n    tag_443:\n        /* \"#utility.yul\":9782:9806   */\n      0x4164647265737320697320626c61636b6c697374656400000000000000000000\n        /* \"#utility.yul\":9778:9779   */\n      0x00\n        /* \"#utility.yul\":9770:9776   */\n      dup3\n        /* \"#utility.yul\":9766:9780   */\n      add\n        /* \"#utility.yul\":9759:9807   */\n      mstore\n        /* \"#utility.yul\":9642:9814   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9820:10186   */\n    tag_444:\n        /* \"#utility.yul\":9962:9965   */\n      0x00\n        /* \"#utility.yul\":9983:10050   */\n      tag_565\n        /* \"#utility.yul\":10047:10049   */\n      0x16\n        /* \"#utility.yul\":10042:10045   */\n      dup4\n        /* \"#utility.yul\":9983:10050   */\n      tag_422\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":9976:10050   */\n      swap2\n      pop\n        /* \"#utility.yul\":10059:10152   */\n      tag_566\n        /* \"#utility.yul\":10148:10151   */\n      dup3\n        /* \"#utility.yul\":10059:10152   */\n      tag_443\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":10177:10179   */\n      0x20\n        /* \"#utility.yul\":10172:10175   */\n      dup3\n        /* \"#utility.yul\":10168:10180   */\n      add\n        /* \"#utility.yul\":10161:10180   */\n      swap1\n      pop\n        /* \"#utility.yul\":9820:10186   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10192:10611   */\n    tag_201:\n        /* \"#utility.yul\":10358:10362   */\n      0x00\n        /* \"#utility.yul\":10396:10398   */\n      0x20\n        /* \"#utility.yul\":10385:10394   */\n      dup3\n        /* \"#utility.yul\":10381:10399   */\n      add\n        /* \"#utility.yul\":10373:10399   */\n      swap1\n      pop\n        /* \"#utility.yul\":10445:10454   */\n      dup2\n        /* \"#utility.yul\":10439:10443   */\n      dup2\n        /* \"#utility.yul\":10435:10455   */\n      sub\n        /* \"#utility.yul\":10431:10432   */\n      0x00\n        /* \"#utility.yul\":10420:10429   */\n      dup4\n        /* \"#utility.yul\":10416:10433   */\n      add\n        /* \"#utility.yul\":10409:10456   */\n      mstore\n        /* \"#utility.yul\":10473:10604   */\n      tag_568\n        /* \"#utility.yul\":10599:10603   */\n      dup2\n        /* \"#utility.yul\":10473:10604   */\n      tag_444\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":10465:10604   */\n      swap1\n      pop\n        /* \"#utility.yul\":10192:10611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10617:10797   */\n    tag_445:\n        /* \"#utility.yul\":10665:10742   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10662:10663   */\n      0x00\n        /* \"#utility.yul\":10655:10743   */\n      mstore\n        /* \"#utility.yul\":10762:10766   */\n      0x11\n        /* \"#utility.yul\":10759:10760   */\n      0x04\n        /* \"#utility.yul\":10752:10767   */\n      mstore\n        /* \"#utility.yul\":10786:10790   */\n      0x24\n        /* \"#utility.yul\":10783:10784   */\n      0x00\n        /* \"#utility.yul\":10776:10791   */\n      revert\n        /* \"#utility.yul\":10803:10994   */\n    tag_207:\n        /* \"#utility.yul\":10843:10846   */\n      0x00\n        /* \"#utility.yul\":10862:10882   */\n      tag_571\n        /* \"#utility.yul\":10880:10881   */\n      dup3\n        /* \"#utility.yul\":10862:10882   */\n      tag_418\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":10857:10882   */\n      swap2\n      pop\n        /* \"#utility.yul\":10896:10916   */\n      tag_572\n        /* \"#utility.yul\":10914:10915   */\n      dup4\n        /* \"#utility.yul\":10896:10916   */\n      tag_418\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":10891:10916   */\n      swap3\n      pop\n        /* \"#utility.yul\":10939:10940   */\n      dup3\n        /* \"#utility.yul\":10936:10937   */\n      dup3\n        /* \"#utility.yul\":10932:10941   */\n      add\n        /* \"#utility.yul\":10925:10941   */\n      swap1\n      pop\n        /* \"#utility.yul\":10960:10963   */\n      dup1\n        /* \"#utility.yul\":10957:10958   */\n      dup3\n        /* \"#utility.yul\":10954:10964   */\n      gt\n        /* \"#utility.yul\":10951:10987   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":10967:10985   */\n      tag_574\n      tag_445\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":10951:10987   */\n    tag_573:\n        /* \"#utility.yul\":10803:10994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11000:11239   */\n    tag_446:\n        /* \"#utility.yul\":11140:11174   */\n      0x45786365656473206461696c79204445582074726164696e67206c696d697420\n        /* \"#utility.yul\":11136:11137   */\n      0x00\n        /* \"#utility.yul\":11128:11134   */\n      dup3\n        /* \"#utility.yul\":11124:11138   */\n      add\n        /* \"#utility.yul\":11117:11175   */\n      mstore\n        /* \"#utility.yul\":11209:11231   */\n      0x6f66203130206d696c6c696f6e20746f6b656e73000000000000000000000000\n        /* \"#utility.yul\":11204:11206   */\n      0x20\n        /* \"#utility.yul\":11196:11202   */\n      dup3\n        /* \"#utility.yul\":11192:11207   */\n      add\n        /* \"#utility.yul\":11185:11232   */\n      mstore\n        /* \"#utility.yul\":11000:11239   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11245:11611   */\n    tag_447:\n        /* \"#utility.yul\":11387:11390   */\n      0x00\n        /* \"#utility.yul\":11408:11475   */\n      tag_577\n        /* \"#utility.yul\":11472:11474   */\n      0x34\n        /* \"#utility.yul\":11467:11470   */\n      dup4\n        /* \"#utility.yul\":11408:11475   */\n      tag_422\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":11401:11475   */\n      swap2\n      pop\n        /* \"#utility.yul\":11484:11577   */\n      tag_578\n        /* \"#utility.yul\":11573:11576   */\n      dup3\n        /* \"#utility.yul\":11484:11577   */\n      tag_446\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":11602:11604   */\n      0x40\n        /* \"#utility.yul\":11597:11600   */\n      dup3\n        /* \"#utility.yul\":11593:11605   */\n      add\n        /* \"#utility.yul\":11586:11605   */\n      swap1\n      pop\n        /* \"#utility.yul\":11245:11611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11617:12036   */\n    tag_213:\n        /* \"#utility.yul\":11783:11787   */\n      0x00\n        /* \"#utility.yul\":11821:11823   */\n      0x20\n        /* \"#utility.yul\":11810:11819   */\n      dup3\n        /* \"#utility.yul\":11806:11824   */\n      add\n        /* \"#utility.yul\":11798:11824   */\n      swap1\n      pop\n        /* \"#utility.yul\":11870:11879   */\n      dup2\n        /* \"#utility.yul\":11864:11868   */\n      dup2\n        /* \"#utility.yul\":11860:11880   */\n      sub\n        /* \"#utility.yul\":11856:11857   */\n      0x00\n        /* \"#utility.yul\":11845:11854   */\n      dup4\n        /* \"#utility.yul\":11841:11858   */\n      add\n        /* \"#utility.yul\":11834:11881   */\n      mstore\n        /* \"#utility.yul\":11898:12029   */\n      tag_580\n        /* \"#utility.yul\":12024:12028   */\n      dup2\n        /* \"#utility.yul\":11898:12029   */\n      tag_447\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":11890:12029   */\n      swap1\n      pop\n        /* \"#utility.yul\":11617:12036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12042:12207   */\n    tag_448:\n        /* \"#utility.yul\":12182:12199   */\n      0x436f6f6c646f776e206163746976650000000000000000000000000000000000\n        /* \"#utility.yul\":12178:12179   */\n      0x00\n        /* \"#utility.yul\":12170:12176   */\n      dup3\n        /* \"#utility.yul\":12166:12180   */\n      add\n        /* \"#utility.yul\":12159:12200   */\n      mstore\n        /* \"#utility.yul\":12042:12207   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12213:12579   */\n    tag_449:\n        /* \"#utility.yul\":12355:12358   */\n      0x00\n        /* \"#utility.yul\":12376:12443   */\n      tag_583\n        /* \"#utility.yul\":12440:12442   */\n      0x0f\n        /* \"#utility.yul\":12435:12438   */\n      dup4\n        /* \"#utility.yul\":12376:12443   */\n      tag_422\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":12369:12443   */\n      swap2\n      pop\n        /* \"#utility.yul\":12452:12545   */\n      tag_584\n        /* \"#utility.yul\":12541:12544   */\n      dup3\n        /* \"#utility.yul\":12452:12545   */\n      tag_448\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":12570:12572   */\n      0x20\n        /* \"#utility.yul\":12565:12568   */\n      dup3\n        /* \"#utility.yul\":12561:12573   */\n      add\n        /* \"#utility.yul\":12554:12573   */\n      swap1\n      pop\n        /* \"#utility.yul\":12213:12579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12585:13004   */\n    tag_222:\n        /* \"#utility.yul\":12751:12755   */\n      0x00\n        /* \"#utility.yul\":12789:12791   */\n      0x20\n        /* \"#utility.yul\":12778:12787   */\n      dup3\n        /* \"#utility.yul\":12774:12792   */\n      add\n        /* \"#utility.yul\":12766:12792   */\n      swap1\n      pop\n        /* \"#utility.yul\":12838:12847   */\n      dup2\n        /* \"#utility.yul\":12832:12836   */\n      dup2\n        /* \"#utility.yul\":12828:12848   */\n      sub\n        /* \"#utility.yul\":12824:12825   */\n      0x00\n        /* \"#utility.yul\":12813:12822   */\n      dup4\n        /* \"#utility.yul\":12809:12826   */\n      add\n        /* \"#utility.yul\":12802:12849   */\n      mstore\n        /* \"#utility.yul\":12866:12997   */\n      tag_586\n        /* \"#utility.yul\":12992:12996   */\n      dup2\n        /* \"#utility.yul\":12866:12997   */\n      tag_449\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":12858:12997   */\n      swap1\n      pop\n        /* \"#utility.yul\":12585:13004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13010:13177   */\n    tag_450:\n        /* \"#utility.yul\":13150:13169   */\n      0x486f6c642074696d65206e6f74206d6574000000000000000000000000000000\n        /* \"#utility.yul\":13146:13147   */\n      0x00\n        /* \"#utility.yul\":13138:13144   */\n      dup3\n        /* \"#utility.yul\":13134:13148   */\n      add\n        /* \"#utility.yul\":13127:13170   */\n      mstore\n        /* \"#utility.yul\":13010:13177   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13183:13549   */\n    tag_451:\n        /* \"#utility.yul\":13325:13328   */\n      0x00\n        /* \"#utility.yul\":13346:13413   */\n      tag_589\n        /* \"#utility.yul\":13410:13412   */\n      0x11\n        /* \"#utility.yul\":13405:13408   */\n      dup4\n        /* \"#utility.yul\":13346:13413   */\n      tag_422\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":13339:13413   */\n      swap2\n      pop\n        /* \"#utility.yul\":13422:13515   */\n      tag_590\n        /* \"#utility.yul\":13511:13514   */\n      dup3\n        /* \"#utility.yul\":13422:13515   */\n      tag_450\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":13540:13542   */\n      0x20\n        /* \"#utility.yul\":13535:13538   */\n      dup3\n        /* \"#utility.yul\":13531:13543   */\n      add\n        /* \"#utility.yul\":13524:13543   */\n      swap1\n      pop\n        /* \"#utility.yul\":13183:13549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13555:13974   */\n    tag_227:\n        /* \"#utility.yul\":13721:13725   */\n      0x00\n        /* \"#utility.yul\":13759:13761   */\n      0x20\n        /* \"#utility.yul\":13748:13757   */\n      dup3\n        /* \"#utility.yul\":13744:13762   */\n      add\n        /* \"#utility.yul\":13736:13762   */\n      swap1\n      pop\n        /* \"#utility.yul\":13808:13817   */\n      dup2\n        /* \"#utility.yul\":13802:13806   */\n      dup2\n        /* \"#utility.yul\":13798:13818   */\n      sub\n        /* \"#utility.yul\":13794:13795   */\n      0x00\n        /* \"#utility.yul\":13783:13792   */\n      dup4\n        /* \"#utility.yul\":13779:13796   */\n      add\n        /* \"#utility.yul\":13772:13819   */\n      mstore\n        /* \"#utility.yul\":13836:13967   */\n      tag_592\n        /* \"#utility.yul\":13962:13966   */\n      dup2\n        /* \"#utility.yul\":13836:13967   */\n      tag_451\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":13828:13967   */\n      swap1\n      pop\n        /* \"#utility.yul\":13555:13974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13980:14147   */\n    tag_452:\n        /* \"#utility.yul\":14120:14139   */\n      0x496e76616c696420726563697069656e74000000000000000000000000000000\n        /* \"#utility.yul\":14116:14117   */\n      0x00\n        /* \"#utility.yul\":14108:14114   */\n      dup3\n        /* \"#utility.yul\":14104:14118   */\n      add\n        /* \"#utility.yul\":14097:14140   */\n      mstore\n        /* \"#utility.yul\":13980:14147   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14153:14519   */\n    tag_453:\n        /* \"#utility.yul\":14295:14298   */\n      0x00\n        /* \"#utility.yul\":14316:14383   */\n      tag_595\n        /* \"#utility.yul\":14380:14382   */\n      0x11\n        /* \"#utility.yul\":14375:14378   */\n      dup4\n        /* \"#utility.yul\":14316:14383   */\n      tag_422\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":14309:14383   */\n      swap2\n      pop\n        /* \"#utility.yul\":14392:14485   */\n      tag_596\n        /* \"#utility.yul\":14481:14484   */\n      dup3\n        /* \"#utility.yul\":14392:14485   */\n      tag_452\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":14510:14512   */\n      0x20\n        /* \"#utility.yul\":14505:14508   */\n      dup3\n        /* \"#utility.yul\":14501:14513   */\n      add\n        /* \"#utility.yul\":14494:14513   */\n      swap1\n      pop\n        /* \"#utility.yul\":14153:14519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14525:14944   */\n    tag_234:\n        /* \"#utility.yul\":14691:14695   */\n      0x00\n        /* \"#utility.yul\":14729:14731   */\n      0x20\n        /* \"#utility.yul\":14718:14727   */\n      dup3\n        /* \"#utility.yul\":14714:14732   */\n      add\n        /* \"#utility.yul\":14706:14732   */\n      swap1\n      pop\n        /* \"#utility.yul\":14778:14787   */\n      dup2\n        /* \"#utility.yul\":14772:14776   */\n      dup2\n        /* \"#utility.yul\":14768:14788   */\n      sub\n        /* \"#utility.yul\":14764:14765   */\n      0x00\n        /* \"#utility.yul\":14753:14762   */\n      dup4\n        /* \"#utility.yul\":14749:14766   */\n      add\n        /* \"#utility.yul\":14742:14789   */\n      mstore\n        /* \"#utility.yul\":14806:14937   */\n      tag_598\n        /* \"#utility.yul\":14932:14936   */\n      dup2\n        /* \"#utility.yul\":14806:14937   */\n      tag_453\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":14798:14937   */\n      swap1\n      pop\n        /* \"#utility.yul\":14525:14944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14950:15130   */\n    tag_252:\n        /* \"#utility.yul\":14998:15075   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14995:14996   */\n      0x00\n        /* \"#utility.yul\":14988:15076   */\n      mstore\n        /* \"#utility.yul\":15095:15099   */\n      0x32\n        /* \"#utility.yul\":15092:15093   */\n      0x04\n        /* \"#utility.yul\":15085:15100   */\n      mstore\n        /* \"#utility.yul\":15119:15123   */\n      0x24\n        /* \"#utility.yul\":15116:15117   */\n      0x00\n        /* \"#utility.yul\":15109:15124   */\n      revert\n        /* \"#utility.yul\":15136:15317   */\n    tag_454:\n        /* \"#utility.yul\":15276:15309   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":15272:15273   */\n      0x00\n        /* \"#utility.yul\":15264:15270   */\n      dup3\n        /* \"#utility.yul\":15260:15274   */\n      add\n        /* \"#utility.yul\":15253:15310   */\n      mstore\n        /* \"#utility.yul\":15136:15317   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15323:15689   */\n    tag_455:\n        /* \"#utility.yul\":15465:15468   */\n      0x00\n        /* \"#utility.yul\":15486:15553   */\n      tag_602\n        /* \"#utility.yul\":15550:15552   */\n      0x1f\n        /* \"#utility.yul\":15545:15548   */\n      dup4\n        /* \"#utility.yul\":15486:15553   */\n      tag_422\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":15479:15553   */\n      swap2\n      pop\n        /* \"#utility.yul\":15562:15655   */\n      tag_603\n        /* \"#utility.yul\":15651:15654   */\n      dup3\n        /* \"#utility.yul\":15562:15655   */\n      tag_454\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":15680:15682   */\n      0x20\n        /* \"#utility.yul\":15675:15678   */\n      dup3\n        /* \"#utility.yul\":15671:15683   */\n      add\n        /* \"#utility.yul\":15664:15683   */\n      swap1\n      pop\n        /* \"#utility.yul\":15323:15689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15695:16114   */\n    tag_373:\n        /* \"#utility.yul\":15861:15865   */\n      0x00\n        /* \"#utility.yul\":15899:15901   */\n      0x20\n        /* \"#utility.yul\":15888:15897   */\n      dup3\n        /* \"#utility.yul\":15884:15902   */\n      add\n        /* \"#utility.yul\":15876:15902   */\n      swap1\n      pop\n        /* \"#utility.yul\":15948:15957   */\n      dup2\n        /* \"#utility.yul\":15942:15946   */\n      dup2\n        /* \"#utility.yul\":15938:15958   */\n      sub\n        /* \"#utility.yul\":15934:15935   */\n      0x00\n        /* \"#utility.yul\":15923:15932   */\n      dup4\n        /* \"#utility.yul\":15919:15936   */\n      add\n        /* \"#utility.yul\":15912:15959   */\n      mstore\n        /* \"#utility.yul\":15976:16107   */\n      tag_605\n        /* \"#utility.yul\":16102:16106   */\n      dup2\n        /* \"#utility.yul\":15976:16107   */\n      tag_455\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":15968:16107   */\n      swap1\n      pop\n        /* \"#utility.yul\":15695:16114   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16120:16562   */\n    tag_397:\n        /* \"#utility.yul\":16269:16273   */\n      0x00\n        /* \"#utility.yul\":16307:16309   */\n      0x60\n        /* \"#utility.yul\":16296:16305   */\n      dup3\n        /* \"#utility.yul\":16292:16310   */\n      add\n        /* \"#utility.yul\":16284:16310   */\n      swap1\n      pop\n        /* \"#utility.yul\":16320:16391   */\n      tag_607\n        /* \"#utility.yul\":16388:16389   */\n      0x00\n        /* \"#utility.yul\":16377:16386   */\n      dup4\n        /* \"#utility.yul\":16373:16390   */\n      add\n        /* \"#utility.yul\":16364:16370   */\n      dup7\n        /* \"#utility.yul\":16320:16391   */\n      tag_441\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":16401:16473   */\n      tag_608\n        /* \"#utility.yul\":16469:16471   */\n      0x20\n        /* \"#utility.yul\":16458:16467   */\n      dup4\n        /* \"#utility.yul\":16454:16472   */\n      add\n        /* \"#utility.yul\":16445:16451   */\n      dup6\n        /* \"#utility.yul\":16401:16473   */\n      tag_432\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":16483:16555   */\n      tag_609\n        /* \"#utility.yul\":16551:16553   */\n      0x40\n        /* \"#utility.yul\":16540:16549   */\n      dup4\n        /* \"#utility.yul\":16536:16554   */\n      add\n        /* \"#utility.yul\":16527:16533   */\n      dup5\n        /* \"#utility.yul\":16483:16555   */\n      tag_432\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":16120:16562   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202f0b8cf1ef6feb34436b10e5f0edd47effbd5b3cee9b9551498a3f1fb502b1fd64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1467": {
									"entryPoint": null,
									"id": 1467,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 821,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 626,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 954,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2615,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1927,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1501,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1825,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8147:9",
										"nodeType": "YulBlock",
										"src": "0:8147:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "140:152:9",
													"nodeType": "YulBlock",
													"src": "140:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:9",
																		"nodeType": "YulLiteral",
																		"src": "157:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:9",
																		"nodeType": "YulLiteral",
																		"src": "160:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:9"
																},
																"nativeSrc": "150:88:9",
																"nodeType": "YulFunctionCall",
																"src": "150:88:9"
															},
															"nativeSrc": "150:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:9",
																		"nodeType": "YulLiteral",
																		"src": "254:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:9",
																		"nodeType": "YulLiteral",
																		"src": "257:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:9"
																},
																"nativeSrc": "247:15:9",
																"nodeType": "YulFunctionCall",
																"src": "247:15:9"
															},
															"nativeSrc": "247:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:9",
																		"nodeType": "YulLiteral",
																		"src": "278:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:9",
																		"nodeType": "YulLiteral",
																		"src": "281:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:9"
																},
																"nativeSrc": "271:15:9",
																"nodeType": "YulFunctionCall",
																"src": "271:15:9"
															},
															"nativeSrc": "271:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:9"
											},
											{
												"body": {
													"nativeSrc": "326:152:9",
													"nodeType": "YulBlock",
													"src": "326:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:9",
																		"nodeType": "YulLiteral",
																		"src": "343:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:9",
																		"nodeType": "YulLiteral",
																		"src": "346:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:9"
																},
																"nativeSrc": "336:88:9",
																"nodeType": "YulFunctionCall",
																"src": "336:88:9"
															},
															"nativeSrc": "336:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:9",
																		"nodeType": "YulLiteral",
																		"src": "443:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:15:9",
																"nodeType": "YulFunctionCall",
																"src": "433:15:9"
															},
															"nativeSrc": "433:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:9",
																		"nodeType": "YulLiteral",
																		"src": "464:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:9",
																		"nodeType": "YulLiteral",
																		"src": "467:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:9"
																},
																"nativeSrc": "457:15:9",
																"nodeType": "YulFunctionCall",
																"src": "457:15:9"
															},
															"nativeSrc": "457:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:9"
											},
											{
												"body": {
													"nativeSrc": "535:269:9",
													"nodeType": "YulBlock",
													"src": "535:269:9",
													"statements": [
														{
															"nativeSrc": "545:22:9",
															"nodeType": "YulAssignment",
															"src": "545:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:9",
																		"nodeType": "YulLiteral",
																		"src": "565:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:9"
																},
																"nativeSrc": "555:12:9",
																"nodeType": "YulFunctionCall",
																"src": "555:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:9"
																}
															]
														},
														{
															"nativeSrc": "576:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:9",
																		"nodeType": "YulLiteral",
																		"src": "612:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:9"
																},
																"nativeSrc": "602:12:9",
																"nodeType": "YulFunctionCall",
																"src": "602:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:9",
																	"nodeType": "YulTypedName",
																	"src": "580:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:9",
																"nodeType": "YulBlock",
																"src": "653:51:9",
																"statements": [
																	{
																		"nativeSrc": "667:27:9",
																		"nodeType": "YulAssignment",
																		"src": "667:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:9",
																					"nodeType": "YulLiteral",
																					"src": "689:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:9"
																			},
																			"nativeSrc": "677:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:9"
																},
																"nativeSrc": "626:26:9",
																"nodeType": "YulFunctionCall",
																"src": "626:26:9"
															},
															"nativeSrc": "623:81:9",
															"nodeType": "YulIf",
															"src": "623:81:9"
														},
														{
															"body": {
																"nativeSrc": "756:42:9",
																"nodeType": "YulBlock",
																"src": "756:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:9"
																			},
																			"nativeSrc": "770:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:9"
																		},
																		"nativeSrc": "770:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:9",
																				"nodeType": "YulLiteral",
																				"src": "751:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:9"
																		},
																		"nativeSrc": "740:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:9"
																},
																"nativeSrc": "717:38:9",
																"nodeType": "YulFunctionCall",
																"src": "717:38:9"
															},
															"nativeSrc": "714:84:9",
															"nodeType": "YulIf",
															"src": "714:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:9",
														"nodeType": "YulTypedName",
														"src": "519:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:9",
														"nodeType": "YulTypedName",
														"src": "528:6:9",
														"type": ""
													}
												],
												"src": "484:320:9"
											},
											{
												"body": {
													"nativeSrc": "864:87:9",
													"nodeType": "YulBlock",
													"src": "864:87:9",
													"statements": [
														{
															"nativeSrc": "874:11:9",
															"nodeType": "YulAssignment",
															"src": "874:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:9",
																"nodeType": "YulIdentifier",
																"src": "882:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:9",
																		"nodeType": "YulLiteral",
																		"src": "902:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:9"
																},
																"nativeSrc": "895:14:9",
																"nodeType": "YulFunctionCall",
																"src": "895:14:9"
															},
															"nativeSrc": "895:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:9"
														},
														{
															"nativeSrc": "918:26:9",
															"nodeType": "YulAssignment",
															"src": "918:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:9",
																		"nodeType": "YulLiteral",
																		"src": "936:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:9",
																		"nodeType": "YulLiteral",
																		"src": "939:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:9"
																},
																"nativeSrc": "926:18:9",
																"nodeType": "YulFunctionCall",
																"src": "926:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:9",
														"nodeType": "YulTypedName",
														"src": "851:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:9",
														"nodeType": "YulTypedName",
														"src": "859:4:9",
														"type": ""
													}
												],
												"src": "810:141:9"
											},
											{
												"body": {
													"nativeSrc": "1001:49:9",
													"nodeType": "YulBlock",
													"src": "1001:49:9",
													"statements": [
														{
															"nativeSrc": "1011:33:9",
															"nodeType": "YulAssignment",
															"src": "1011:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:9"
																		},
																		"nativeSrc": "1025:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:9"
																},
																"nativeSrc": "1021:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:9",
														"nodeType": "YulTypedName",
														"src": "984:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:9",
														"nodeType": "YulTypedName",
														"src": "994:6:9",
														"type": ""
													}
												],
												"src": "957:93:9"
											},
											{
												"body": {
													"nativeSrc": "1109:54:9",
													"nodeType": "YulBlock",
													"src": "1109:54:9",
													"statements": [
														{
															"nativeSrc": "1119:37:9",
															"nodeType": "YulAssignment",
															"src": "1119:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:9"
																},
																"nativeSrc": "1140:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:9",
														"nodeType": "YulTypedName",
														"src": "1084:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:9",
														"nodeType": "YulTypedName",
														"src": "1090:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:9",
														"nodeType": "YulTypedName",
														"src": "1100:8:9",
														"type": ""
													}
												],
												"src": "1056:107:9"
											},
											{
												"body": {
													"nativeSrc": "1245:317:9",
													"nodeType": "YulBlock",
													"src": "1245:317:9",
													"statements": [
														{
															"nativeSrc": "1255:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:9"
																},
																"nativeSrc": "1272:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:9",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:9",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:9"
																},
																"nativeSrc": "1311:97:9",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:9",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:9",
															"nodeType": "YulAssignment",
															"src": "1417:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:9"
																},
																"nativeSrc": "1429:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:9"
																}
															]
														},
														{
															"nativeSrc": "1477:30:9",
															"nodeType": "YulAssignment",
															"src": "1477:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:9"
																		},
																		"nativeSrc": "1497:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:9"
																},
																"nativeSrc": "1486:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:9"
																}
															]
														},
														{
															"nativeSrc": "1516:40:9",
															"nodeType": "YulAssignment",
															"src": "1516:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:9"
																		},
																		"nativeSrc": "1536:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:9"
																},
																"nativeSrc": "1526:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:9",
														"nodeType": "YulTypedName",
														"src": "1206:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:9",
														"nodeType": "YulTypedName",
														"src": "1213:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:9",
														"nodeType": "YulTypedName",
														"src": "1225:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:9",
														"nodeType": "YulTypedName",
														"src": "1238:6:9",
														"type": ""
													}
												],
												"src": "1169:393:9"
											},
											{
												"body": {
													"nativeSrc": "1613:32:9",
													"nodeType": "YulBlock",
													"src": "1613:32:9",
													"statements": [
														{
															"nativeSrc": "1623:16:9",
															"nodeType": "YulAssignment",
															"src": "1623:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:9",
																"nodeType": "YulIdentifier",
																"src": "1634:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:9",
														"nodeType": "YulTypedName",
														"src": "1595:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:9",
														"nodeType": "YulTypedName",
														"src": "1605:7:9",
														"type": ""
													}
												],
												"src": "1568:77:9"
											},
											{
												"body": {
													"nativeSrc": "1683:28:9",
													"nodeType": "YulBlock",
													"src": "1683:28:9",
													"statements": [
														{
															"nativeSrc": "1693:12:9",
															"nodeType": "YulAssignment",
															"src": "1693:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:9",
																"nodeType": "YulIdentifier",
																"src": "1700:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:9",
														"nodeType": "YulTypedName",
														"src": "1669:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:9",
														"nodeType": "YulTypedName",
														"src": "1679:3:9",
														"type": ""
													}
												],
												"src": "1651:60:9"
											},
											{
												"body": {
													"nativeSrc": "1777:82:9",
													"nodeType": "YulBlock",
													"src": "1777:82:9",
													"statements": [
														{
															"nativeSrc": "1787:66:9",
															"nodeType": "YulAssignment",
															"src": "1787:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:9"
																				},
																				"nativeSrc": "1827:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:9"
																		},
																		"nativeSrc": "1818:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:9"
																},
																"nativeSrc": "1800:53:9",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:9",
														"nodeType": "YulTypedName",
														"src": "1757:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:9",
														"nodeType": "YulTypedName",
														"src": "1767:9:9",
														"type": ""
													}
												],
												"src": "1717:142:9"
											},
											{
												"body": {
													"nativeSrc": "1912:28:9",
													"nodeType": "YulBlock",
													"src": "1912:28:9",
													"statements": [
														{
															"nativeSrc": "1922:12:9",
															"nodeType": "YulAssignment",
															"src": "1922:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:9",
																"nodeType": "YulIdentifier",
																"src": "1929:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:9",
														"nodeType": "YulTypedName",
														"src": "1898:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:9",
														"nodeType": "YulTypedName",
														"src": "1908:3:9",
														"type": ""
													}
												],
												"src": "1865:75:9"
											},
											{
												"body": {
													"nativeSrc": "2022:193:9",
													"nodeType": "YulBlock",
													"src": "2022:193:9",
													"statements": [
														{
															"nativeSrc": "2032:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:9"
																},
																"nativeSrc": "2056:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:9",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:9"
																				},
																				"nativeSrc": "2145:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:9"
																				},
																				"nativeSrc": "2166:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:9"
																		},
																		"nativeSrc": "2117:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:9"
																},
																"nativeSrc": "2104:105:9",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:9"
															},
															"nativeSrc": "2104:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:9",
														"nodeType": "YulTypedName",
														"src": "1999:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:9",
														"nodeType": "YulTypedName",
														"src": "2005:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:9",
														"nodeType": "YulTypedName",
														"src": "2013:7:9",
														"type": ""
													}
												],
												"src": "1946:269:9"
											},
											{
												"body": {
													"nativeSrc": "2270:24:9",
													"nodeType": "YulBlock",
													"src": "2270:24:9",
													"statements": [
														{
															"nativeSrc": "2280:8:9",
															"nodeType": "YulAssignment",
															"src": "2280:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:9",
																"nodeType": "YulLiteral",
																"src": "2287:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:9",
														"nodeType": "YulTypedName",
														"src": "2266:3:9",
														"type": ""
													}
												],
												"src": "2221:73:9"
											},
											{
												"body": {
													"nativeSrc": "2353:136:9",
													"nodeType": "YulBlock",
													"src": "2353:136:9",
													"statements": [
														{
															"nativeSrc": "2363:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:9"
																},
																"nativeSrc": "2377:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:9"
																},
																"nativeSrc": "2418:65:9",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:9"
															},
															"nativeSrc": "2418:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:9",
														"nodeType": "YulTypedName",
														"src": "2339:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:9",
														"nodeType": "YulTypedName",
														"src": "2345:6:9",
														"type": ""
													}
												],
												"src": "2300:189:9"
											},
											{
												"body": {
													"nativeSrc": "2545:136:9",
													"nodeType": "YulBlock",
													"src": "2545:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:9",
																"nodeType": "YulBlock",
																"src": "2612:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:9"
																			},
																			"nativeSrc": "2626:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:9"
																		},
																		"nativeSrc": "2626:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:9"
																},
																"nativeSrc": "2562:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:9"
															},
															"nativeSrc": "2555:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:9",
																"nodeType": "YulBlock",
																"src": "2577:26:9",
																"statements": [
																	{
																		"nativeSrc": "2579:22:9",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:9"
																			},
																			"nativeSrc": "2588:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:9",
																"nodeType": "YulBlock",
																"src": "2559:2:9",
																"statements": []
															},
															"src": "2555:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:9",
														"nodeType": "YulTypedName",
														"src": "2533:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:9",
														"nodeType": "YulTypedName",
														"src": "2540:3:9",
														"type": ""
													}
												],
												"src": "2495:186:9"
											},
											{
												"body": {
													"nativeSrc": "2766:464:9",
													"nodeType": "YulBlock",
													"src": "2766:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:9",
																"nodeType": "YulBlock",
																"src": "2792:431:9",
																"statements": [
																	{
																		"nativeSrc": "2806:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:9"
																			},
																			"nativeSrc": "2822:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:9",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:9"
																					},
																					"nativeSrc": "2906:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:9"
																			},
																			"nativeSrc": "2892:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:9",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:9",
																			"nodeType": "YulBlock",
																			"src": "3093:27:9",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:9",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:9",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:9"
																			},
																			"nativeSrc": "3074:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:9"
																		},
																		"nativeSrc": "3071:49:9",
																		"nodeType": "YulIf",
																		"src": "3071:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:9"
																							},
																							"nativeSrc": "3189:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:9"
																					},
																					"nativeSrc": "3175:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:9"
																			},
																			"nativeSrc": "3133:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:9"
																		},
																		"nativeSrc": "3133:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:9"
																},
																"nativeSrc": "2780:11:9",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:9"
															},
															"nativeSrc": "2777:446:9",
															"nodeType": "YulIf",
															"src": "2777:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:9",
														"nodeType": "YulTypedName",
														"src": "2742:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:9",
														"nodeType": "YulTypedName",
														"src": "2749:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:9",
														"nodeType": "YulTypedName",
														"src": "2754:10:9",
														"type": ""
													}
												],
												"src": "2687:543:9"
											},
											{
												"body": {
													"nativeSrc": "3299:54:9",
													"nodeType": "YulBlock",
													"src": "3299:54:9",
													"statements": [
														{
															"nativeSrc": "3309:37:9",
															"nodeType": "YulAssignment",
															"src": "3309:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:9"
																},
																"nativeSrc": "3330:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:9",
														"nodeType": "YulTypedName",
														"src": "3274:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:9",
														"nodeType": "YulTypedName",
														"src": "3280:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:9",
														"nodeType": "YulTypedName",
														"src": "3290:8:9",
														"type": ""
													}
												],
												"src": "3236:117:9"
											},
											{
												"body": {
													"nativeSrc": "3410:118:9",
													"nodeType": "YulBlock",
													"src": "3410:118:9",
													"statements": [
														{
															"nativeSrc": "3420:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:9"
																				},
																				"nativeSrc": "3465:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:9"
																				},
																				"nativeSrc": "3480:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:9"
																		},
																		"nativeSrc": "3436:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:9"
																},
																"nativeSrc": "3432:56:9",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:9",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:9",
															"nodeType": "YulAssignment",
															"src": "3497:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:9"
																},
																"nativeSrc": "3507:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:9",
														"nodeType": "YulTypedName",
														"src": "3387:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:9",
														"nodeType": "YulTypedName",
														"src": "3393:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:9",
														"nodeType": "YulTypedName",
														"src": "3403:6:9",
														"type": ""
													}
												],
												"src": "3359:169:9"
											},
											{
												"body": {
													"nativeSrc": "3614:214:9",
													"nodeType": "YulBlock",
													"src": "3614:214:9",
													"statements": [
														{
															"nativeSrc": "3747:37:9",
															"nodeType": "YulAssignment",
															"src": "3747:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:9"
																},
																"nativeSrc": "3755:29:9",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:9"
																}
															]
														},
														{
															"nativeSrc": "3793:29:9",
															"nodeType": "YulAssignment",
															"src": "3793:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:9"
																		},
																		"nativeSrc": "3810:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:9"
																},
																"nativeSrc": "3801:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:9",
														"nodeType": "YulTypedName",
														"src": "3595:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:9",
														"nodeType": "YulTypedName",
														"src": "3601:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:9",
														"nodeType": "YulTypedName",
														"src": "3609:4:9",
														"type": ""
													}
												],
												"src": "3533:295:9"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:9",
													"nodeType": "YulBlock",
													"src": "3925:1303:9",
													"statements": [
														{
															"nativeSrc": "3936:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:9"
																},
																"nativeSrc": "3950:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:9",
																"nodeType": "YulBlock",
																"src": "4072:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:9"
																			},
																			"nativeSrc": "4074:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:9"
																		},
																		"nativeSrc": "4074:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:9",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:9"
																},
																"nativeSrc": "4041:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:9"
															},
															"nativeSrc": "4038:56:9",
															"nodeType": "YulIf",
															"src": "4038:56:9"
														},
														{
															"nativeSrc": "4104:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:9"
																		},
																		"nativeSrc": "4144:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:9"
																},
																"nativeSrc": "4118:38:9",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:9"
																},
																"nativeSrc": "4203:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:9"
															},
															"nativeSrc": "4203:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:9"
														},
														{
															"nativeSrc": "4280:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:9",
																"nodeType": "YulLiteral",
																"src": "4297:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:9",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:9",
															"nodeType": "YulAssignment",
															"src": "4308:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:9",
																"nodeType": "YulLiteral",
																"src": "4321:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:9",
																		"nodeType": "YulBlock",
																		"src": "4372:611:9",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:9",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:9"
																							},
																							"nativeSrc": "4413:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:9"
																					},
																					"nativeSrc": "4401:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:9",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:9"
																					},
																					"nativeSrc": "4451:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:9",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:9",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:9",
																					"nodeType": "YulBlock",
																					"src": "4569:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:9"
																												},
																												"nativeSrc": "4608:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:9"
																										},
																										"nativeSrc": "4602:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:9"
																								},
																								"nativeSrc": "4587:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:9"
																							},
																							"nativeSrc": "4587:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:9"
																						},
																						{
																							"nativeSrc": "4646:24:9",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:9",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:9"
																								},
																								"nativeSrc": "4656:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:9",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:9",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:9"
																								},
																								"nativeSrc": "4700:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:9"
																					},
																					"nativeSrc": "4532:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:9"
																				},
																				"nativeSrc": "4524:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:9",
																					"nodeType": "YulBlock",
																					"src": "4547:21:9",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:9",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:9",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:9"
																								},
																								"nativeSrc": "4554:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:9",
																					"nodeType": "YulBlock",
																					"src": "4528:3:9",
																					"statements": []
																				},
																				"src": "4524:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:9",
																					"nodeType": "YulBlock",
																					"src": "4768:156:9",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:9"
																										},
																										"nativeSrc": "4809:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:9"
																								},
																								"nativeSrc": "4803:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:9",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:9",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:9"
																												},
																												"nativeSrc": "4891:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:9"
																										},
																										"nativeSrc": "4861:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:9"
																								},
																								"nativeSrc": "4846:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:9"
																							},
																							"nativeSrc": "4846:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:9"
																					},
																					"nativeSrc": "4748:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:9"
																				},
																				"nativeSrc": "4745:179:9",
																				"nodeType": "YulIf",
																				"src": "4745:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:9",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:9"
																									},
																									"nativeSrc": "4954:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:9",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:9"
																							},
																							"nativeSrc": "4950:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:9"
																					},
																					"nativeSrc": "4937:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:9"
																				},
																				"nativeSrc": "4937:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:9"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:9",
																	"nodeType": "YulCase",
																	"src": "4365:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:9",
																		"nodeType": "YulBlock",
																		"src": "5000:222:9",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:9",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:9",
																					"nodeType": "YulBlock",
																					"src": "5051:67:9",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:9",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:9"
																										},
																										"nativeSrc": "5084:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:9"
																								},
																								"nativeSrc": "5078:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:9"
																				},
																				"nativeSrc": "5041:77:9",
																				"nodeType": "YulIf",
																				"src": "5041:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:9"
																							},
																							"nativeSrc": "5144:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:9"
																					},
																					"nativeSrc": "5131:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:9"
																				},
																				"nativeSrc": "5131:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:9"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:9",
																	"nodeType": "YulCase",
																	"src": "4992:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:9"
																},
																"nativeSrc": "4342:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:9"
															},
															"nativeSrc": "4335:887:9",
															"nodeType": "YulSwitch",
															"src": "4335:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:9",
														"nodeType": "YulTypedName",
														"src": "3914:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:9",
														"nodeType": "YulTypedName",
														"src": "3920:3:9",
														"type": ""
													}
												],
												"src": "3833:1395:9"
											},
											{
												"body": {
													"nativeSrc": "5279:81:9",
													"nodeType": "YulBlock",
													"src": "5279:81:9",
													"statements": [
														{
															"nativeSrc": "5289:65:9",
															"nodeType": "YulAssignment",
															"src": "5289:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:9",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:9"
																},
																"nativeSrc": "5300:54:9",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:9",
														"nodeType": "YulTypedName",
														"src": "5261:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:9",
														"nodeType": "YulTypedName",
														"src": "5271:7:9",
														"type": ""
													}
												],
												"src": "5234:126:9"
											},
											{
												"body": {
													"nativeSrc": "5411:51:9",
													"nodeType": "YulBlock",
													"src": "5411:51:9",
													"statements": [
														{
															"nativeSrc": "5421:35:9",
															"nodeType": "YulAssignment",
															"src": "5421:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:9"
																},
																"nativeSrc": "5432:24:9",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:9",
														"nodeType": "YulTypedName",
														"src": "5393:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:9",
														"nodeType": "YulTypedName",
														"src": "5403:7:9",
														"type": ""
													}
												],
												"src": "5366:96:9"
											},
											{
												"body": {
													"nativeSrc": "5533:53:9",
													"nodeType": "YulBlock",
													"src": "5533:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:9"
																		},
																		"nativeSrc": "5555:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:9"
																},
																"nativeSrc": "5543:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:9"
															},
															"nativeSrc": "5543:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:9",
														"nodeType": "YulTypedName",
														"src": "5521:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:9",
														"nodeType": "YulTypedName",
														"src": "5528:3:9",
														"type": ""
													}
												],
												"src": "5468:118:9"
											},
											{
												"body": {
													"nativeSrc": "5690:124:9",
													"nodeType": "YulBlock",
													"src": "5690:124:9",
													"statements": [
														{
															"nativeSrc": "5700:26:9",
															"nodeType": "YulAssignment",
															"src": "5700:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:9"
																},
																"nativeSrc": "5708:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:9"
																		},
																		"nativeSrc": "5789:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:9"
																},
																"nativeSrc": "5736:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:9"
															},
															"nativeSrc": "5736:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:9",
														"nodeType": "YulTypedName",
														"src": "5662:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:9",
														"nodeType": "YulTypedName",
														"src": "5674:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:9",
														"nodeType": "YulTypedName",
														"src": "5685:4:9",
														"type": ""
													}
												],
												"src": "5592:222:9"
											},
											{
												"body": {
													"nativeSrc": "5916:73:9",
													"nodeType": "YulBlock",
													"src": "5916:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5933:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5933:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5938:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5938:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5926:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5926:6:9"
																},
																"nativeSrc": "5926:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5926:19:9"
															},
															"nativeSrc": "5926:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "5926:19:9"
														},
														{
															"nativeSrc": "5954:29:9",
															"nodeType": "YulAssignment",
															"src": "5954:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5973:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5973:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5978:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5978:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5969:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5969:3:9"
																},
																"nativeSrc": "5969:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5969:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5954:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "5954:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5820:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5888:3:9",
														"nodeType": "YulTypedName",
														"src": "5888:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5893:6:9",
														"nodeType": "YulTypedName",
														"src": "5893:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5904:11:9",
														"nodeType": "YulTypedName",
														"src": "5904:11:9",
														"type": ""
													}
												],
												"src": "5820:169:9"
											},
											{
												"body": {
													"nativeSrc": "6101:63:9",
													"nodeType": "YulBlock",
													"src": "6101:63:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6123:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6123:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6131:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6131:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6119:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6119:3:9"
																		},
																		"nativeSrc": "6119:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6119:14:9"
																	},
																	{
																		"hexValue": "416c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "6135:21:9",
																		"nodeType": "YulLiteral",
																		"src": "6135:21:9",
																		"type": "",
																		"value": "Already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6112:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6112:6:9"
																},
																"nativeSrc": "6112:45:9",
																"nodeType": "YulFunctionCall",
																"src": "6112:45:9"
															},
															"nativeSrc": "6112:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "6112:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
												"nativeSrc": "5995:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6093:6:9",
														"nodeType": "YulTypedName",
														"src": "6093:6:9",
														"type": ""
													}
												],
												"src": "5995:169:9"
											},
											{
												"body": {
													"nativeSrc": "6316:220:9",
													"nodeType": "YulBlock",
													"src": "6316:220:9",
													"statements": [
														{
															"nativeSrc": "6326:74:9",
															"nodeType": "YulAssignment",
															"src": "6326:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6392:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6392:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6397:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6397:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6333:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "6333:58:9"
																},
																"nativeSrc": "6333:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6333:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6326:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6326:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6498:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6498:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																	"nativeSrc": "6409:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "6409:88:9"
																},
																"nativeSrc": "6409:93:9",
																"nodeType": "YulFunctionCall",
																"src": "6409:93:9"
															},
															"nativeSrc": "6409:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "6409:93:9"
														},
														{
															"nativeSrc": "6511:19:9",
															"nodeType": "YulAssignment",
															"src": "6511:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6522:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6522:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6527:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6527:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6518:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6518:3:9"
																},
																"nativeSrc": "6518:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6518:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6511:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6511:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6170:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6304:3:9",
														"nodeType": "YulTypedName",
														"src": "6304:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6312:3:9",
														"nodeType": "YulTypedName",
														"src": "6312:3:9",
														"type": ""
													}
												],
												"src": "6170:366:9"
											},
											{
												"body": {
													"nativeSrc": "6713:248:9",
													"nodeType": "YulBlock",
													"src": "6713:248:9",
													"statements": [
														{
															"nativeSrc": "6723:26:9",
															"nodeType": "YulAssignment",
															"src": "6723:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6735:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6735:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6746:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6731:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:9"
																},
																"nativeSrc": "6731:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6731:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6723:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6723:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6770:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6770:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6781:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6781:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6766:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6766:3:9"
																		},
																		"nativeSrc": "6766:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6766:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6789:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6789:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6795:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6795:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6785:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6785:3:9"
																		},
																		"nativeSrc": "6785:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6785:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:9"
																},
																"nativeSrc": "6759:47:9",
																"nodeType": "YulFunctionCall",
																"src": "6759:47:9"
															},
															"nativeSrc": "6759:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "6759:47:9"
														},
														{
															"nativeSrc": "6815:139:9",
															"nodeType": "YulAssignment",
															"src": "6815:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6949:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6949:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6823:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "6823:124:9"
																},
																"nativeSrc": "6823:131:9",
																"nodeType": "YulFunctionCall",
																"src": "6823:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6815:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6815:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6542:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6693:9:9",
														"nodeType": "YulTypedName",
														"src": "6693:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6708:4:9",
														"nodeType": "YulTypedName",
														"src": "6708:4:9",
														"type": ""
													}
												],
												"src": "6542:419:9"
											},
											{
												"body": {
													"nativeSrc": "7032:53:9",
													"nodeType": "YulBlock",
													"src": "7032:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7049:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7049:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7072:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7072:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7054:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "7054:17:9"
																		},
																		"nativeSrc": "7054:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7054:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7042:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7042:6:9"
																},
																"nativeSrc": "7042:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7042:37:9"
															},
															"nativeSrc": "7042:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "7042:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6967:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7020:5:9",
														"nodeType": "YulTypedName",
														"src": "7020:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7027:3:9",
														"nodeType": "YulTypedName",
														"src": "7027:3:9",
														"type": ""
													}
												],
												"src": "6967:118:9"
											},
											{
												"body": {
													"nativeSrc": "7189:124:9",
													"nodeType": "YulBlock",
													"src": "7189:124:9",
													"statements": [
														{
															"nativeSrc": "7199:26:9",
															"nodeType": "YulAssignment",
															"src": "7199:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7211:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7211:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7222:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7222:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7207:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7207:3:9"
																},
																"nativeSrc": "7207:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7207:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7199:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7199:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7279:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7279:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7292:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7292:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7303:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7303:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7288:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7288:3:9"
																		},
																		"nativeSrc": "7288:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7288:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7235:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7235:43:9"
																},
																"nativeSrc": "7235:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7235:71:9"
															},
															"nativeSrc": "7235:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7235:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7091:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7161:9:9",
														"nodeType": "YulTypedName",
														"src": "7161:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7173:6:9",
														"nodeType": "YulTypedName",
														"src": "7173:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7184:4:9",
														"nodeType": "YulTypedName",
														"src": "7184:4:9",
														"type": ""
													}
												],
												"src": "7091:222:9"
											},
											{
												"body": {
													"nativeSrc": "7347:152:9",
													"nodeType": "YulBlock",
													"src": "7347:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7364:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7364:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7367:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7367:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7357:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7357:6:9"
																},
																"nativeSrc": "7357:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7357:88:9"
															},
															"nativeSrc": "7357:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7357:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7461:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7461:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7464:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7464:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7454:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7454:6:9"
																},
																"nativeSrc": "7454:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7454:15:9"
															},
															"nativeSrc": "7454:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7454:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7485:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7485:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7488:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7488:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7478:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7478:6:9"
																},
																"nativeSrc": "7478:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7478:15:9"
															},
															"nativeSrc": "7478:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7478:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7319:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7319:180:9"
											},
											{
												"body": {
													"nativeSrc": "7549:147:9",
													"nodeType": "YulBlock",
													"src": "7549:147:9",
													"statements": [
														{
															"nativeSrc": "7559:25:9",
															"nodeType": "YulAssignment",
															"src": "7559:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7582:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7582:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7564:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7564:17:9"
																},
																"nativeSrc": "7564:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7564:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7559:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7559:1:9"
																}
															]
														},
														{
															"nativeSrc": "7593:25:9",
															"nodeType": "YulAssignment",
															"src": "7593:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7616:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7616:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7598:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7598:17:9"
																},
																"nativeSrc": "7598:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7598:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7593:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7593:1:9"
																}
															]
														},
														{
															"nativeSrc": "7627:16:9",
															"nodeType": "YulAssignment",
															"src": "7627:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7638:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7638:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7641:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7641:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7634:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7634:3:9"
																},
																"nativeSrc": "7634:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7634:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7627:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7627:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7667:22:9",
																"nodeType": "YulBlock",
																"src": "7667:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7669:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7669:16:9"
																			},
																			"nativeSrc": "7669:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7669:18:9"
																		},
																		"nativeSrc": "7669:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7669:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7659:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7659:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7662:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7662:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7656:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7656:2:9"
																},
																"nativeSrc": "7656:10:9",
																"nodeType": "YulFunctionCall",
																"src": "7656:10:9"
															},
															"nativeSrc": "7653:36:9",
															"nodeType": "YulIf",
															"src": "7653:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7505:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7536:1:9",
														"nodeType": "YulTypedName",
														"src": "7536:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7539:1:9",
														"nodeType": "YulTypedName",
														"src": "7539:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7545:3:9",
														"nodeType": "YulTypedName",
														"src": "7545:3:9",
														"type": ""
													}
												],
												"src": "7505:191:9"
											},
											{
												"body": {
													"nativeSrc": "7856:288:9",
													"nodeType": "YulBlock",
													"src": "7856:288:9",
													"statements": [
														{
															"nativeSrc": "7866:26:9",
															"nodeType": "YulAssignment",
															"src": "7866:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7878:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7878:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7889:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7874:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7874:3:9"
																},
																"nativeSrc": "7874:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7874:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7866:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7866:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7946:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7946:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7959:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7959:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7970:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7970:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7955:3:9"
																		},
																		"nativeSrc": "7955:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7955:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7902:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7902:43:9"
																},
																"nativeSrc": "7902:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7902:71:9"
															},
															"nativeSrc": "7902:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7902:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8027:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8027:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8040:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8040:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8051:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8051:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8036:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8036:3:9"
																		},
																		"nativeSrc": "8036:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8036:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7983:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7983:43:9"
																},
																"nativeSrc": "7983:72:9",
																"nodeType": "YulFunctionCall",
																"src": "7983:72:9"
															},
															"nativeSrc": "7983:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "7983:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8109:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8109:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8122:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8122:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8133:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8133:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8118:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:9"
																		},
																		"nativeSrc": "8118:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8118:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8065:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8065:43:9"
																},
																"nativeSrc": "8065:72:9",
																"nodeType": "YulFunctionCall",
																"src": "8065:72:9"
															},
															"nativeSrc": "8065:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "8065:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7702:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7812:9:9",
														"nodeType": "YulTypedName",
														"src": "7812:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7824:6:9",
														"nodeType": "YulTypedName",
														"src": "7824:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7832:6:9",
														"nodeType": "YulTypedName",
														"src": "7832:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7840:6:9",
														"nodeType": "YulTypedName",
														"src": "7840:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7851:4:9",
														"nodeType": "YulTypedName",
														"src": "7851:4:9",
														"type": ""
													}
												],
												"src": "7702:442:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50336040518060400160405280601181526020017f50726f7068656379204a696d70736f6e730000000000000000000000000000008152506040518060400160405280600481526020017f5a696d7000000000000000000000000000000000000000000000000000000000815250816003908161008c9190610810565b50806004908161009c9190610810565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010f575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610106919061091e565b60405180910390fd5b61011e8161027260201b60201c565b50600160068190555060075f9054906101000a900460ff1615610176576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016d90610991565b60405180910390fd5b610192336b204fce5e3e2502611000000061033560201b60201c565b600160075f6101000a81548160ff02191690831515021790555062015180600881905550603c600d819055506001600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f9d5570c03a71af73640da09c132d73bb3efe7ca4f55516a1afc2597cbdfd620c6b204fce5e3e2502611000000060405161026591906109be565b60405180910390a2610a6c565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103a5575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161039c919061091e565b60405180910390fd5b6103b65f83836103ba60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361040a578060025f8282546103fe9190610a04565b925050819055506104d8565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610493578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161048a93929190610a37565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361051f578060025f8282540392505081905550610569565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105c691906109be565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061064e57607f821691505b6020821081036106615761066061060a565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106c37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610688565b6106cd8683610688565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61071161070c610707846106e5565b6106ee565b6106e5565b9050919050565b5f819050919050565b61072a836106f7565b61073e61073682610718565b848454610694565b825550505050565b5f5f905090565b610755610746565b610760818484610721565b505050565b5b81811015610783576107785f8261074d565b600181019050610766565b5050565b601f8211156107c85761079981610667565b6107a284610679565b810160208510156107b1578190505b6107c56107bd85610679565b830182610765565b50505b505050565b5f82821c905092915050565b5f6107e85f19846008026107cd565b1980831691505092915050565b5f61080083836107d9565b9150826002028217905092915050565b610819826105d3565b67ffffffffffffffff811115610832576108316105dd565b5b61083c8254610637565b610847828285610787565b5f60209050601f831160018114610878575f8415610866578287015190505b61087085826107f5565b8655506108d7565b601f19841661088686610667565b5f5b828110156108ad57848901518255600182019150602085019450602081019050610888565b868310156108ca57848901516108c6601f8916826107d9565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610908826108df565b9050919050565b610918816108fe565b82525050565b5f6020820190506109315f83018461090f565b92915050565b5f82825260208201905092915050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f61097b601383610937565b915061098682610947565b602082019050919050565b5f6020820190508181035f8301526109a88161096f565b9050919050565b6109b8816106e5565b82525050565b5f6020820190506109d15f8301846109af565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a0e826106e5565b9150610a19836106e5565b9250828201905080821115610a3157610a306109d7565b5b92915050565b5f606082019050610a4a5f83018661090f565b610a5760208301856109af565b610a6460408301846109af565b949350505050565b61315780610a795f395ff3fe608060405234801561000f575f5ffd5b506004361061020f575f3560e01c80636072e6a81161012357806395d89b41116100ab578063dd62ed3e1161007a578063dd62ed3e14610625578063e26ffe0814610655578063f2fde38b14610685578063fc1b3113146106a1578063fe575a87146106bf5761020f565b806395d89b411461058b578063a9059cbb146105a9578063ab09413d146105d9578063dd386477146105f55761020f565b8063715018a6116100f2578063715018a6146104fb5780638b6a8fbf146105055780638da5cb5b1461053557806390389b83146105535780639155e0831461056f5761020f565b80636072e6a814610475578063611274c51461049157806368f16293146104ad57806370a08231146104cb5761020f565b806323b872dd116101a6578063330671ad11610175578063330671ad146103d15780633af32abf146103ef5780635112f2971461041f578063566e59931461043b5780635f87f0eb146104595761020f565b806323b872dd14610335578063283af01914610365578063313ce5671461039557806332cb6b0c146103b35761020f565b80630d392cd9116101e25780630d392cd9146102ad578063158ef93e146102c957806318160ddd146102e75780632357edb3146103055761020f565b8063058c72fc1461021357806306fdde031461022f578063095ea7b31461024d5780630d2d8a311461027d575b5f5ffd5b61022d60048036038101906102289190612949565b6106ef565b005b610237610742565b60405161024491906129f7565b60405180910390f35b61026760048036038101906102629190612a71565b6107d2565b6040516102749190612ac9565b60405180910390f35b61029760048036038101906102929190612ae2565b6107f4565b6040516102a49190612b1c565b60405180910390f35b6102c760048036038101906102c29190612b5f565b610809565b005b6102d16108b7565b6040516102de9190612ac9565b60405180910390f35b6102ef6108c9565b6040516102fc9190612b1c565b60405180910390f35b61031f600480360381019061031a9190612ae2565b6108d2565b60405161032c9190612ac9565b60405180910390f35b61034f600480360381019061034a9190612b9d565b6108ef565b60405161035c9190612ac9565b60405180910390f35b61037f600480360381019061037a9190612ae2565b611088565b60405161038c9190612b1c565b60405180910390f35b61039d61109d565b6040516103aa9190612c08565b60405180910390f35b6103bb6110a5565b6040516103c89190612b1c565b60405180910390f35b6103d96110b5565b6040516103e69190612b1c565b60405180910390f35b61040960048036038101906104049190612ae2565b6110bb565b6040516104169190612ac9565b60405180910390f35b61043960048036038101906104349190612b5f565b6110d8565b005b610443611186565b6040516104509190612b1c565b60405180910390f35b610473600480360381019061046e9190612c82565b611195565b005b61048f600480360381019061048a9190612c82565b6112b0565b005b6104ab60048036038101906104a69190612c82565b6113cb565b005b6104b56114e6565b6040516104c29190612b1c565b60405180910390f35b6104e560048036038101906104e09190612ae2565b6114ec565b6040516104f29190612b1c565b60405180910390f35b610503611531565b005b61051f600480360381019061051a9190612ae2565b611544565b60405161052c9190612b1c565b60405180910390f35b61053d611559565b60405161054a9190612cee565b60405180910390f35b61056d60048036038101906105689190612b5f565b611581565b005b61058960048036038101906105849190612b5f565b61162f565b005b6105936116dd565b6040516105a091906129f7565b60405180910390f35b6105c360048036038101906105be9190612a71565b61176d565b6040516105d09190612ac9565b60405180910390f35b6105f360048036038101906105ee9190612c82565b611f04565b005b61060f600480360381019061060a9190612ae2565b61201f565b60405161061c9190612ac9565b60405180910390f35b61063f600480360381019061063a9190612d07565b61203c565b60405161064c9190612b1c565b60405180910390f35b61066f600480360381019061066a9190612ae2565b6120be565b60405161067c9190612b1c565b60405180910390f35b61069f600480360381019061069a9190612ae2565b6120d3565b005b6106a9612157565b6040516106b69190612b1c565b60405180910390f35b6106d960048036038101906106d49190612ae2565b612166565b6040516106e69190612ac9565b60405180910390f35b6106f7612183565b8160088190555080600d819055507f2c406ebfcb3eb7487c720dd90f3be04648d6606bad1837fd5363cd02f3dd1ef68282604051610736929190612d45565b60405180910390a15050565b60606003805461075190612d99565b80601f016020809104026020016040519081016040528092919081815260200182805461077d90612d99565b80156107c85780601f1061079f576101008083540402835291602001916107c8565b820191905f5260205f20905b8154815290600101906020018083116107ab57829003601f168201915b5050505050905090565b5f5f6107dc61220a565b90506107e9818585612211565b600191505092915050565b6009602052805f5260405f205f915090505481565b610811612183565b80600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d826040516108ab9190612ac9565b60405180910390a25050565b60075f9054906101000a900460ff1681565b5f600254905090565b600e602052805f5260405f205f915054906101000a900460ff1681565b5f838383600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156109915750600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b6109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c790612e13565b60405180910390fd5b600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff168015610a595750610a29611559565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b8015610aac5750600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15610cb8576201518060115f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610afd9190612e5e565b421115610b89575f60105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260115f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b6a52b7d2dcc80cd2e4000000610be58260105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b1115610c26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1d90612f01565b60405180910390fd5b610c768160105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b60105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015610d565750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015610da95750600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015610dfc5750600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15610f6f57610e53600d5460095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b421015610e95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8c90612f69565b60405180910390fd5b5f600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414610f6e57610f2b600854600a5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b421015610f6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6490612fd1565b60405180910390fd5b5b5b610f77612238565b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdc90613039565b60405180910390fd5b42600a5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260095f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611074878787612287565b935061107e6122b5565b5050509392505050565b600a602052805f5260405f205f915090505481565b5f6012905090565b6b204fce5e3e2502611000000081565b60085481565b600c602052805f5260405f205f915054906101000a900460ff1681565b6110e0612183565b80600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f087ae58f1cb2baf6f5ac7d2f6391a7f26d2e2951312c6eab3761fc754d202de78260405161117a9190612ac9565b60405180910390a25050565b6a52b7d2dcc80cd2e400000081565b61119d612183565b5f5f90505b838390508110156112aa5781600f5f8686858181106111c4576111c3613057565b5b90506020020160208101906111d99190612ae2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555083838281811061123b5761123a613057565b5b90506020020160208101906112509190612ae2565b73ffffffffffffffffffffffffffffffffffffffff167f8295e5e995acec8dc9c9248f8db461aeba392bc756bb3db82e642667cc464ae6836040516112959190612ac9565b60405180910390a280806001019150506111a2565b50505050565b6112b8612183565b5f5f90505b838390508110156113c55781600b5f8686858181106112df576112de613057565b5b90506020020160208101906112f49190612ae2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555083838281811061135657611355613057565b5b905060200201602081019061136b9190612ae2565b73ffffffffffffffffffffffffffffffffffffffff167f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac836040516113b09190612ac9565b60405180910390a280806001019150506112bd565b50505050565b6113d3612183565b5f5f90505b838390508110156114e05781600c5f8686858181106113fa576113f9613057565b5b905060200201602081019061140f9190612ae2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555083838281811061147157611470613057565b5b90506020020160208101906114869190612ae2565b73ffffffffffffffffffffffffffffffffffffffff167ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d836040516114cb9190612ac9565b60405180910390a280806001019150506113d8565b50505050565b600d5481565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b611539612183565b6115425f6122bf565b565b6010602052805f5260405f205f915090505481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611589612183565b80600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f8295e5e995acec8dc9c9248f8db461aeba392bc756bb3db82e642667cc464ae6826040516116239190612ac9565b60405180910390a25050565b611637612183565b80600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac826040516116d19190612ac9565b60405180910390a25050565b6060600480546116ec90612d99565b80601f016020809104026020016040519081016040528092919081815260200182805461171890612d99565b80156117635780601f1061173a57610100808354040283529160200191611763565b820191905f5260205f20905b81548152906001019060200180831161174657829003601f168201915b5050505050905090565b5f338383600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615801561180f5750600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b61184e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184590612e13565b60405180910390fd5b600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680156118d757506118a7611559565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b801561192a5750600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15611b36576201518060115f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461197b9190612e5e565b421115611a07575f60105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260115f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b6a52b7d2dcc80cd2e4000000611a638260105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b1115611aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9b90612f01565b60405180910390fd5b611af48160105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b60105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015611bd45750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015611c275750600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015611c7a5750600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15611ded57611cd1600d5460095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b421015611d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0a90612f69565b60405180910390fd5b5f600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414611dec57611da9600854600a5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b421015611deb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de290612fd1565b60405180910390fd5b5b5b611df5612238565b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603611e63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5a90613039565b60405180910390fd5b42600a5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611ef18686612382565b9350611efb6122b5565b50505092915050565b611f0c612183565b5f5f90505b838390508110156120195781600e5f868685818110611f3357611f32613057565b5b9050602002016020810190611f489190612ae2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550838382818110611faa57611fa9613057565b5b9050602002016020810190611fbf9190612ae2565b73ffffffffffffffffffffffffffffffffffffffff167f087ae58f1cb2baf6f5ac7d2f6391a7f26d2e2951312c6eab3761fc754d202de7836040516120049190612ac9565b60405180910390a28080600101915050611f11565b50505050565b600f602052805f5260405f205f915054906101000a900460ff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6011602052805f5260405f205f915090505481565b6120db612183565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361214b575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016121429190612cee565b60405180910390fd5b612154816122bf565b50565b6a084595161401484a00000081565b600b602052805f5260405f205f915054906101000a900460ff1681565b61218b61220a565b73ffffffffffffffffffffffffffffffffffffffff166121a9611559565b73ffffffffffffffffffffffffffffffffffffffff1614612208576121cc61220a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016121ff9190612cee565b60405180910390fd5b565b5f33905090565b61221e83838360016123a4565b505050565b5f81836122309190612e5e565b905092915050565b60026006540361227d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612274906130ce565b60405180910390fd5b6002600681905550565b5f5f61229161220a565b905061229e858285612573565b6122a9858585612605565b60019150509392505050565b6001600681905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f61238c61220a565b9050612399818585612605565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612414575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161240b9190612cee565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612484575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161247b9190612cee565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561256d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516125649190612b1c565b60405180910390a35b50505050565b5f61257e848461203c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146125ff57818110156125f0578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016125e7939291906130ec565b60405180910390fd5b6125fe84848484035f6123a4565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612675575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161266c9190612cee565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036126e5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016126dc9190612cee565b60405180910390fd5b6126f08383836126f5565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612745578060025f8282546127399190612e5e565b92505081905550612813565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156127ce578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016127c5939291906130ec565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361285a578060025f82825403925050819055506128a4565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516129019190612b1c565b60405180910390a3505050565b5f5ffd5b5f5ffd5b5f819050919050565b61292881612916565b8114612932575f5ffd5b50565b5f813590506129438161291f565b92915050565b5f5f6040838503121561295f5761295e61290e565b5b5f61296c85828601612935565b925050602061297d85828601612935565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6129c982612987565b6129d38185612991565b93506129e38185602086016129a1565b6129ec816129af565b840191505092915050565b5f6020820190508181035f830152612a0f81846129bf565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612a4082612a17565b9050919050565b612a5081612a36565b8114612a5a575f5ffd5b50565b5f81359050612a6b81612a47565b92915050565b5f5f60408385031215612a8757612a8661290e565b5b5f612a9485828601612a5d565b9250506020612aa585828601612935565b9150509250929050565b5f8115159050919050565b612ac381612aaf565b82525050565b5f602082019050612adc5f830184612aba565b92915050565b5f60208284031215612af757612af661290e565b5b5f612b0484828501612a5d565b91505092915050565b612b1681612916565b82525050565b5f602082019050612b2f5f830184612b0d565b92915050565b612b3e81612aaf565b8114612b48575f5ffd5b50565b5f81359050612b5981612b35565b92915050565b5f5f60408385031215612b7557612b7461290e565b5b5f612b8285828601612a5d565b9250506020612b9385828601612b4b565b9150509250929050565b5f5f5f60608486031215612bb457612bb361290e565b5b5f612bc186828701612a5d565b9350506020612bd286828701612a5d565b9250506040612be386828701612935565b9150509250925092565b5f60ff82169050919050565b612c0281612bed565b82525050565b5f602082019050612c1b5f830184612bf9565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112612c4257612c41612c21565b5b8235905067ffffffffffffffff811115612c5f57612c5e612c25565b5b602083019150836020820283011115612c7b57612c7a612c29565b5b9250929050565b5f5f5f60408486031215612c9957612c9861290e565b5b5f84013567ffffffffffffffff811115612cb657612cb5612912565b5b612cc286828701612c2d565b93509350506020612cd586828701612b4b565b9150509250925092565b612ce881612a36565b82525050565b5f602082019050612d015f830184612cdf565b92915050565b5f5f60408385031215612d1d57612d1c61290e565b5b5f612d2a85828601612a5d565b9250506020612d3b85828601612a5d565b9150509250929050565b5f604082019050612d585f830185612b0d565b612d656020830184612b0d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612db057607f821691505b602082108103612dc357612dc2612d6c565b5b50919050565b7f4164647265737320697320626c61636b6c6973746564000000000000000000005f82015250565b5f612dfd601683612991565b9150612e0882612dc9565b602082019050919050565b5f6020820190508181035f830152612e2a81612df1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612e6882612916565b9150612e7383612916565b9250828201905080821115612e8b57612e8a612e31565b5b92915050565b7f45786365656473206461696c79204445582074726164696e67206c696d6974205f8201527f6f66203130206d696c6c696f6e20746f6b656e73000000000000000000000000602082015250565b5f612eeb603483612991565b9150612ef682612e91565b604082019050919050565b5f6020820190508181035f830152612f1881612edf565b9050919050565b7f436f6f6c646f776e2061637469766500000000000000000000000000000000005f82015250565b5f612f53600f83612991565b9150612f5e82612f1f565b602082019050919050565b5f6020820190508181035f830152612f8081612f47565b9050919050565b7f486f6c642074696d65206e6f74206d65740000000000000000000000000000005f82015250565b5f612fbb601183612991565b9150612fc682612f87565b602082019050919050565b5f6020820190508181035f830152612fe881612faf565b9050919050565b7f496e76616c696420726563697069656e740000000000000000000000000000005f82015250565b5f613023601183612991565b915061302e82612fef565b602082019050919050565b5f6020820190508181035f83015261305081613017565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6130b8601f83612991565b91506130c382613084565b602082019050919050565b5f6020820190508181035f8301526130e5816130ac565b9050919050565b5f6060820190506130ff5f830186612cdf565b61310c6020830185612b0d565b6131196040830184612b0d565b94935050505056fea26469706673582212202f0b8cf1ef6feb34436b10e5f0edd47effbd5b3cee9b9551498a3f1fb502b1fd64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F7068656379204A696D70736F6E73000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5A696D7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x810 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x810 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x272 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x176 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D SWAP1 PUSH2 0x991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x192 CALLER PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x335 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x15180 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x3C PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9D5570C03A71AF73640DA09C132D73BB3EFE7CA4F55516A1AFC2597CBDFD620C PUSH12 0x204FCE5E3E25026110000000 PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xA6C JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B6 PUSH0 DUP4 DUP4 PUSH2 0x3BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x40A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4D8 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x493 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x51F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x569 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x64E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x661 JUMPI PUSH2 0x660 PUSH2 0x60A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x6C3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x6CD DUP7 DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x711 PUSH2 0x70C PUSH2 0x707 DUP5 PUSH2 0x6E5 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x72A DUP4 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x73E PUSH2 0x736 DUP3 PUSH2 0x718 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x694 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x755 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x760 DUP2 DUP5 DUP5 PUSH2 0x721 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x783 JUMPI PUSH2 0x778 PUSH0 DUP3 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x766 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7C8 JUMPI PUSH2 0x799 DUP2 PUSH2 0x667 JUMP JUMPDEST PUSH2 0x7A2 DUP5 PUSH2 0x679 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x7B1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x7C5 PUSH2 0x7BD DUP6 PUSH2 0x679 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x765 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7E8 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x7CD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x800 DUP4 DUP4 PUSH2 0x7D9 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x819 DUP3 PUSH2 0x5D3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x832 JUMPI PUSH2 0x831 PUSH2 0x5DD JUMP JUMPDEST JUMPDEST PUSH2 0x83C DUP3 SLOAD PUSH2 0x637 JUMP JUMPDEST PUSH2 0x847 DUP3 DUP3 DUP6 PUSH2 0x787 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x878 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x866 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x870 DUP6 DUP3 PUSH2 0x7F5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x886 DUP7 PUSH2 0x667 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8AD JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x888 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x8CA JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x8C6 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x7D9 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x908 DUP3 PUSH2 0x8DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x918 DUP2 PUSH2 0x8FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x931 PUSH0 DUP4 ADD DUP5 PUSH2 0x90F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x97B PUSH1 0x13 DUP4 PUSH2 0x937 JUMP JUMPDEST SWAP2 POP PUSH2 0x986 DUP3 PUSH2 0x947 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9A8 DUP2 PUSH2 0x96F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B8 DUP2 PUSH2 0x6E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x9AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA0E DUP3 PUSH2 0x6E5 JUMP JUMPDEST SWAP2 POP PUSH2 0xA19 DUP4 PUSH2 0x6E5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA31 JUMPI PUSH2 0xA30 PUSH2 0x9D7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA4A PUSH0 DUP4 ADD DUP7 PUSH2 0x90F JUMP JUMPDEST PUSH2 0xA57 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0xA64 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9AF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3157 DUP1 PUSH2 0xA79 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6072E6A8 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xE26FFE08 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xFC1B3113 EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x6BF JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xAB09413D EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xDD386477 EQ PUSH2 0x5F5 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x8B6A8FBF EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0x90389B83 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x9155E083 EQ PUSH2 0x56F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x6072E6A8 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x611274C5 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x68F16293 EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4CB JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x330671AD GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x330671AD EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x5112F297 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x566E5993 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x5F87F0EB EQ PUSH2 0x459 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x283AF019 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x3B3 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xD392CD9 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xD392CD9 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x2357EDB3 EQ PUSH2 0x305 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x58C72FC EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xD2D8A31 EQ PUSH2 0x27D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x237 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x2A71 JUMP JUMPDEST PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x2B9D JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39D PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x409 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x10D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x443 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x473 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x2C82 JUMP JUMPDEST PUSH2 0x1195 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x2C82 JUMP JUMPDEST PUSH2 0x12B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x2C82 JUMP JUMPDEST PUSH2 0x13CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B5 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH2 0x1531 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53D PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x568 SWAP2 SWAP1 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x1581 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x589 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x162F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x593 PUSH2 0x16DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0x2A71 JUMP JUMPDEST PUSH2 0x176D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x2C82 JUMP JUMPDEST PUSH2 0x1F04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x201F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x20D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A9 PUSH2 0x2157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F7 PUSH2 0x2183 JUMP JUMPDEST DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH32 0x2C406EBFCB3EB7487C720DD90F3BE04648D6606BAD1837FD5363CD02F3DD1EF6 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x736 SWAP3 SWAP2 SWAP1 PUSH2 0x2D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x751 SWAP1 PUSH2 0x2D99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77D SWAP1 PUSH2 0x2D99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7DC PUSH2 0x220A JUMP JUMPDEST SWAP1 POP PUSH2 0x7E9 DUP2 DUP6 DUP6 PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x811 PUSH2 0x2183 JUMP JUMPDEST DUP1 PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D DUP3 PUSH1 0x40 MLOAD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP4 DUP4 DUP4 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x991 JUMPI POP PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C7 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xA59 JUMPI POP PUSH2 0xA29 PUSH2 0x1559 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xAAC JUMPI POP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xCB8 JUMPI PUSH3 0x15180 PUSH1 0x11 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xB89 JUMPI PUSH0 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x11 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xBE5 DUP3 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP1 PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC76 DUP2 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xD56 JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xDA9 JUMPI POP PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xDFC JUMPI POP PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xF6F JUMPI PUSH2 0xE53 PUSH1 0xD SLOAD PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8C SWAP1 PUSH2 0x2F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0xF6E JUMPI PUSH2 0xF2B PUSH1 0x8 SLOAD PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xF6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF64 SWAP1 PUSH2 0x2FD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH2 0xF77 PUSH2 0x2238 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDC SWAP1 PUSH2 0x3039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xA PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1074 DUP8 DUP8 DUP8 PUSH2 0x2287 JUMP JUMPDEST SWAP4 POP PUSH2 0x107E PUSH2 0x22B5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH12 0x204FCE5E3E25026110000000 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x10E0 PUSH2 0x2183 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87AE58F1CB2BAF6F5AC7D2F6391A7F26D2E2951312C6EAB3761FC754D202DE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x117A SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 JUMP JUMPDEST PUSH2 0x119D PUSH2 0x2183 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x12AA JUMPI DUP2 PUSH1 0xF PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x11C4 JUMPI PUSH2 0x11C3 PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x123B JUMPI PUSH2 0x123A PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1250 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8295E5E995ACEC8DC9C9248F8DB461AEBA392BC756BB3DB82E642667CC464AE6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x11A2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x12B8 PUSH2 0x2183 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x13C5 JUMPI DUP2 PUSH1 0xB PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x12DF JUMPI PUSH2 0x12DE PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x1356 JUMPI PUSH2 0x1355 PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x136B SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC DUP4 PUSH1 0x40 MLOAD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x12BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x13D3 PUSH2 0x2183 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x14E0 JUMPI DUP2 PUSH1 0xC PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x13FA JUMPI PUSH2 0x13F9 PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x140F SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x1471 JUMPI PUSH2 0x1470 PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1486 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D DUP4 PUSH1 0x40 MLOAD PUSH2 0x14CB SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x13D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1539 PUSH2 0x2183 JUMP JUMPDEST PUSH2 0x1542 PUSH0 PUSH2 0x22BF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1589 PUSH2 0x2183 JUMP JUMPDEST DUP1 PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8295E5E995ACEC8DC9C9248F8DB461AEBA392BC756BB3DB82E642667CC464AE6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1623 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1637 PUSH2 0x2183 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC DUP3 PUSH1 0x40 MLOAD PUSH2 0x16D1 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x16EC SWAP1 PUSH2 0x2D99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1718 SWAP1 PUSH2 0x2D99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1763 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x173A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1763 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1746 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER DUP4 DUP4 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x180F JUMPI POP PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x184E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1845 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x18D7 JUMPI POP PUSH2 0x18A7 PUSH2 0x1559 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x192A JUMPI POP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1B36 JUMPI PUSH3 0x15180 PUSH1 0x11 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x197B SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x1A07 JUMPI PUSH0 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x11 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x1A63 DUP3 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x1AA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9B SWAP1 PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AF4 DUP2 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1BD4 JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1C27 JUMPI POP PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1C7A JUMPI POP PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1DED JUMPI PUSH2 0x1CD1 PUSH1 0xD SLOAD PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1D13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0A SWAP1 PUSH2 0x2F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x1DEC JUMPI PUSH2 0x1DA9 PUSH1 0x8 SLOAD PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1DEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE2 SWAP1 PUSH2 0x2FD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1DF5 PUSH2 0x2238 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E5A SWAP1 PUSH2 0x3039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xA PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1EF1 DUP7 DUP7 PUSH2 0x2382 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EFB PUSH2 0x22B5 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F0C PUSH2 0x2183 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x2019 JUMPI DUP2 PUSH1 0xE PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x1F33 JUMPI PUSH2 0x1F32 PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F48 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1FBF SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87AE58F1CB2BAF6F5AC7D2F6391A7F26D2E2951312C6EAB3761FC754D202DE7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2004 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1F11 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20DB PUSH2 0x2183 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x214B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2142 SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2154 DUP2 PUSH2 0x22BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x218B PUSH2 0x220A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21A9 PUSH2 0x1559 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2208 JUMPI PUSH2 0x21CC PUSH2 0x220A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21FF SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x221E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x23A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x2230 SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x227D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2274 SWAP1 PUSH2 0x30CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2291 PUSH2 0x220A JUMP JUMPDEST SWAP1 POP PUSH2 0x229E DUP6 DUP3 DUP6 PUSH2 0x2573 JUMP JUMPDEST PUSH2 0x22A9 DUP6 DUP6 DUP6 PUSH2 0x2605 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x238C PUSH2 0x220A JUMP JUMPDEST SWAP1 POP PUSH2 0x2399 DUP2 DUP6 DUP6 PUSH2 0x2605 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2414 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x240B SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2484 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x247B SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x256D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2564 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x257E DUP5 DUP5 PUSH2 0x203C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x25FF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x25F0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25FE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2675 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x266C SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26DC SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26F0 DUP4 DUP4 DUP4 PUSH2 0x26F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2745 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2739 SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2813 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x27CE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27C5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x285A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x28A4 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2901 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2928 DUP2 PUSH2 0x2916 JUMP JUMPDEST DUP2 EQ PUSH2 0x2932 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2943 DUP2 PUSH2 0x291F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x295F JUMPI PUSH2 0x295E PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x296C DUP6 DUP3 DUP7 ADD PUSH2 0x2935 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x297D DUP6 DUP3 DUP7 ADD PUSH2 0x2935 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29C9 DUP3 PUSH2 0x2987 JUMP JUMPDEST PUSH2 0x29D3 DUP2 DUP6 PUSH2 0x2991 JUMP JUMPDEST SWAP4 POP PUSH2 0x29E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29A1 JUMP JUMPDEST PUSH2 0x29EC DUP2 PUSH2 0x29AF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A0F DUP2 DUP5 PUSH2 0x29BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A40 DUP3 PUSH2 0x2A17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A50 DUP2 PUSH2 0x2A36 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A5A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A6B DUP2 PUSH2 0x2A47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A87 JUMPI PUSH2 0x2A86 PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A94 DUP6 DUP3 DUP7 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AA5 DUP6 DUP3 DUP7 ADD PUSH2 0x2935 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC3 DUP2 PUSH2 0x2AAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2ADC PUSH0 DUP4 ADD DUP5 PUSH2 0x2ABA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF7 JUMPI PUSH2 0x2AF6 PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B04 DUP5 DUP3 DUP6 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B16 DUP2 PUSH2 0x2916 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B2F PUSH0 DUP4 ADD DUP5 PUSH2 0x2B0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B3E DUP2 PUSH2 0x2AAF JUMP JUMPDEST DUP2 EQ PUSH2 0x2B48 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B59 DUP2 PUSH2 0x2B35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B75 JUMPI PUSH2 0x2B74 PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B82 DUP6 DUP3 DUP7 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B93 DUP6 DUP3 DUP7 ADD PUSH2 0x2B4B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2BB4 JUMPI PUSH2 0x2BB3 PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BC1 DUP7 DUP3 DUP8 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2BD2 DUP7 DUP3 DUP8 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2BE3 DUP7 DUP3 DUP8 ADD PUSH2 0x2935 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C02 DUP2 PUSH2 0x2BED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C1B PUSH0 DUP4 ADD DUP5 PUSH2 0x2BF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2C42 JUMPI PUSH2 0x2C41 PUSH2 0x2C21 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C5F JUMPI PUSH2 0x2C5E PUSH2 0x2C25 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2C7B JUMPI PUSH2 0x2C7A PUSH2 0x2C29 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C99 JUMPI PUSH2 0x2C98 PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB6 JUMPI PUSH2 0x2CB5 PUSH2 0x2912 JUMP JUMPDEST JUMPDEST PUSH2 0x2CC2 DUP7 DUP3 DUP8 ADD PUSH2 0x2C2D JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x2CD5 DUP7 DUP3 DUP8 ADD PUSH2 0x2B4B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2CE8 DUP2 PUSH2 0x2A36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D01 PUSH0 DUP4 ADD DUP5 PUSH2 0x2CDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D1D JUMPI PUSH2 0x2D1C PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D2A DUP6 DUP3 DUP7 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D3B DUP6 DUP3 DUP7 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D58 PUSH0 DUP4 ADD DUP6 PUSH2 0x2B0D JUMP JUMPDEST PUSH2 0x2D65 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B0D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2DB0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2DC3 JUMPI PUSH2 0x2DC2 PUSH2 0x2D6C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320697320626C61636B6C697374656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DFD PUSH1 0x16 DUP4 PUSH2 0x2991 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E08 DUP3 PUSH2 0x2DC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E2A DUP2 PUSH2 0x2DF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2E68 DUP3 PUSH2 0x2916 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E73 DUP4 PUSH2 0x2916 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E8B JUMPI PUSH2 0x2E8A PUSH2 0x2E31 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206461696C79204445582074726164696E67206C696D697420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F66203130206D696C6C696F6E20746F6B656E73000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EEB PUSH1 0x34 DUP4 PUSH2 0x2991 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF6 DUP3 PUSH2 0x2E91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F18 DUP2 PUSH2 0x2EDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E206163746976650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F53 PUSH1 0xF DUP4 PUSH2 0x2991 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F5E DUP3 PUSH2 0x2F1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F80 DUP2 PUSH2 0x2F47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x486F6C642074696D65206E6F74206D6574000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FBB PUSH1 0x11 DUP4 PUSH2 0x2991 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC6 DUP3 PUSH2 0x2F87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FE8 DUP2 PUSH2 0x2FAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3023 PUSH1 0x11 DUP4 PUSH2 0x2991 JUMP JUMPDEST SWAP2 POP PUSH2 0x302E DUP3 PUSH2 0x2FEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3050 DUP2 PUSH2 0x3017 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x30B8 PUSH1 0x1F DUP4 PUSH2 0x2991 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C3 DUP3 PUSH2 0x3084 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30E5 DUP2 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x30FF PUSH0 DUP4 ADD DUP7 PUSH2 0x2CDF JUMP JUMPDEST PUSH2 0x310C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2B0D JUMP JUMPDEST PUSH2 0x3119 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B0D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F SIGNEXTEND DUP13 CALL 0xEF PUSH16 0xEB34436B10E5F0EDD47EFFBD5B3CEE9B SWAP6 MLOAD BLOBHASH DUP11 EXTCODEHASH 0x1F 0xB5 MUL 0xB1 REVERT PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "297:6503:8:-:0;;;1826:384;;;;;;;;;;342:10;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;1895:11:8::1;;;;;;;;;;;1894:12;1886:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1951:29;1957:10;450:23;1951:5;;;:29;;:::i;:::-;2015:4;2001:11;;:18;;;;;;;;;;;;;;;;;;2044:6;2030:11;:20;;;;2080:2;2061:16;:21;;;;2131:4;2103:13;:25;2117:10;2103:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;2179:10;2161:41;;;450:23;2161:41;;;;;;:::i;:::-;;;;;;;;297:6503:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:169::-;5904:11;5938:6;5933:3;5926:19;5978:4;5973:3;5969:14;5954:29;;5820:169;;;;:::o;5995:::-;6135:21;6131:1;6123:6;6119:14;6112:45;5995:169;:::o;6170:366::-;6312:3;6333:67;6397:2;6392:3;6333:67;:::i;:::-;6326:74;;6409:93;6498:3;6409:93;:::i;:::-;6527:2;6522:3;6518:12;6511:19;;6170:366;;;:::o;6542:419::-;6708:4;6746:2;6735:9;6731:18;6723:26;;6795:9;6789:4;6785:20;6781:1;6770:9;6766:17;6759:47;6823:131;6949:4;6823:131;:::i;:::-;6815:139;;6542:419;;;:::o;6967:118::-;7054:24;7072:5;7054:24;:::i;:::-;7049:3;7042:37;6967:118;;:::o;7091:222::-;7184:4;7222:2;7211:9;7207:18;7199:26;;7235:71;7303:1;7292:9;7288:17;7279:6;7235:71;:::i;:::-;7091:222;;;;:::o;7319:180::-;7367:77;7364:1;7357:88;7464:4;7461:1;7454:15;7488:4;7485:1;7478:15;7505:191;7545:3;7564:20;7582:1;7564:20;:::i;:::-;7559:25;;7598:20;7616:1;7598:20;:::i;:::-;7593:25;;7641:1;7638;7634:9;7627:16;;7662:3;7659:1;7656:10;7653:36;;;7669:18;;:::i;:::-;7653:36;7505:191;;;;:::o;7702:442::-;7851:4;7889:2;7878:9;7874:18;7866:26;;7902:71;7970:1;7959:9;7955:17;7946:6;7902:71;:::i;:::-;7983:72;8051:2;8040:9;8036:18;8027:6;7983:72;:::i;:::-;8065;8133:2;8122:9;8118:18;8109:6;8065:72;:::i;:::-;7702:442;;;;;;:::o;297:6503:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAILY_TRADE_LIMIT_1341": {
									"entryPoint": 4486,
									"id": 1341,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_SUPPLY_1334": {
									"entryPoint": 4261,
									"id": 1334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_TRANSFER_AMOUNT_1348": {
									"entryPoint": 8535,
									"id": 1348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_755": {
									"entryPoint": 8721,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 9124,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 8579,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": 8714,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 8885,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 8760,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_863": {
									"entryPoint": 9587,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 8895,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 9733,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 9973,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1174": {
									"entryPoint": 8739,
									"id": 1174,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_491": {
									"entryPoint": 8252,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 2002,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_450": {
									"entryPoint": 5356,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchSetCexAddresses_1834": {
									"entryPoint": 4501,
									"id": 1834,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@batchSetDexPools_1795": {
									"entryPoint": 7940,
									"id": 1795,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@batchUpdateBlacklist_1938": {
									"entryPoint": 4784,
									"id": 1938,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@batchUpdateWhitelist_1977": {
									"entryPoint": 5067,
									"id": 1977,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@dailyTradedAmount_1382": {
									"entryPoint": 5444,
									"id": 1382,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_428": {
									"entryPoint": 4253,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialized_1350": {
									"entryPoint": 2231,
									"id": 1350,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isBlacklisted_1364": {
									"entryPoint": 8550,
									"id": 1364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isCexAddress_1378": {
									"entryPoint": 8223,
									"id": 1378,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isDexPool_1374": {
									"entryPoint": 2258,
									"id": 1374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isWhitelisted_1368": {
									"entryPoint": 4283,
									"id": 1368,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTradeTimestamp_1386": {
									"entryPoint": 8382,
									"id": 1386,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTransferTime_1356": {
									"entryPoint": 2036,
									"id": 1356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minHoldTime_1352": {
									"entryPoint": 4277,
									"id": 1352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_410": {
									"entryPoint": 1858,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 5465,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 5425,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCexAddress_1756": {
									"entryPoint": 5505,
									"id": 1756,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setDexPool_1735": {
									"entryPoint": 4312,
									"id": 1735,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_419": {
									"entryPoint": 5853,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenReceiveTime_1360": {
									"entryPoint": 4232,
									"id": 1360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_437": {
									"entryPoint": 2249,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferCooldown_1370": {
									"entryPoint": 5350,
									"id": 1370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_1714": {
									"entryPoint": 2287,
									"id": 1714,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_547": {
									"entryPoint": 8839,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 8403,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1663": {
									"entryPoint": 5997,
									"id": 1663,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_474": {
									"entryPoint": 9090,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateBlacklist_1855": {
									"entryPoint": 5679,
									"id": 1855,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateSecurityParams_1899": {
									"entryPoint": 1775,
									"id": 1899,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateWhitelist_1876": {
									"entryPoint": 2057,
									"id": 1876,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 10845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 11309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool": {
									"entryPoint": 11083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 11165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 11103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool": {
									"entryPoint": 11394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 10569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 11487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 11021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 11257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 12524,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 11036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11589,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 11245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10657,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 11673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 11628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 12375,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 11301,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 11297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 11305,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 10514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10510,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5": {
									"entryPoint": 12063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d": {
									"entryPoint": 12271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73": {
									"entryPoint": 11921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374": {
									"entryPoint": 12167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53": {
									"entryPoint": 11721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 12420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 11061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16565:9",
										"nodeType": "YulBlock",
										"src": "0:16565:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:32:9",
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nativeSrc": "389:16:9",
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:9",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nativeSrc": "460:79:9",
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:9",
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:9",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:9",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nativeSrc": "519:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nativeSrc": "519:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nativeSrc": "490:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nativeSrc": "480:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nativeSrc": "473:43:9",
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nativeSrc": "470:63:9",
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:9",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nativeSrc": "597:87:9",
													"nodeType": "YulBlock",
													"src": "597:87:9",
													"statements": [
														{
															"nativeSrc": "607:29:9",
															"nodeType": "YulAssignment",
															"src": "607:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:9"
																},
																"nativeSrc": "616:20:9",
																"nodeType": "YulFunctionCall",
																"src": "616:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:9"
																},
																"nativeSrc": "645:33:9",
																"nodeType": "YulFunctionCall",
																"src": "645:33:9"
															},
															"nativeSrc": "645:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:9",
														"nodeType": "YulTypedName",
														"src": "575:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:9",
														"nodeType": "YulTypedName",
														"src": "583:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:9",
														"nodeType": "YulTypedName",
														"src": "591:5:9",
														"type": ""
													}
												],
												"src": "545:139:9"
											},
											{
												"body": {
													"nativeSrc": "773:391:9",
													"nodeType": "YulBlock",
													"src": "773:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "819:83:9",
																"nodeType": "YulBlock",
																"src": "819:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "821:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:9"
																			},
																			"nativeSrc": "821:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:9"
																		},
																		"nativeSrc": "821:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "794:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "803:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "790:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:9"
																		},
																		"nativeSrc": "790:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "815:2:9",
																		"nodeType": "YulLiteral",
																		"src": "815:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "786:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:9"
																},
																"nativeSrc": "786:32:9",
																"nodeType": "YulFunctionCall",
																"src": "786:32:9"
															},
															"nativeSrc": "783:119:9",
															"nodeType": "YulIf",
															"src": "783:119:9"
														},
														{
															"nativeSrc": "912:117:9",
															"nodeType": "YulBlock",
															"src": "912:117:9",
															"statements": [
																{
																	"nativeSrc": "927:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "941:1:9",
																		"nodeType": "YulLiteral",
																		"src": "941:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "931:6:9",
																			"nodeType": "YulTypedName",
																			"src": "931:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "956:63:9",
																	"nodeType": "YulAssignment",
																	"src": "956:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "991:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1002:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "987:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:9"
																				},
																				"nativeSrc": "987:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1011:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "966:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:9"
																		},
																		"nativeSrc": "966:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "956:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1039:118:9",
															"nodeType": "YulBlock",
															"src": "1039:118:9",
															"statements": [
																{
																	"nativeSrc": "1054:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1068:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1058:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1084:63:9",
																	"nodeType": "YulAssignment",
																	"src": "1084:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1119:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1130:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1115:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:9"
																				},
																				"nativeSrc": "1115:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1139:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1094:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:9"
																		},
																		"nativeSrc": "1094:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1084:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "690:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "735:9:9",
														"nodeType": "YulTypedName",
														"src": "735:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "746:7:9",
														"nodeType": "YulTypedName",
														"src": "746:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "758:6:9",
														"nodeType": "YulTypedName",
														"src": "758:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "766:6:9",
														"nodeType": "YulTypedName",
														"src": "766:6:9",
														"type": ""
													}
												],
												"src": "690:474:9"
											},
											{
												"body": {
													"nativeSrc": "1229:40:9",
													"nodeType": "YulBlock",
													"src": "1229:40:9",
													"statements": [
														{
															"nativeSrc": "1240:22:9",
															"nodeType": "YulAssignment",
															"src": "1240:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1256:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1256:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1250:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1250:5:9"
																},
																"nativeSrc": "1250:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1250:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1240:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1240:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1170:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1212:5:9",
														"nodeType": "YulTypedName",
														"src": "1212:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1222:6:9",
														"nodeType": "YulTypedName",
														"src": "1222:6:9",
														"type": ""
													}
												],
												"src": "1170:99:9"
											},
											{
												"body": {
													"nativeSrc": "1371:73:9",
													"nodeType": "YulBlock",
													"src": "1371:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1388:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1388:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1393:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1393:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1381:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1381:6:9"
																},
																"nativeSrc": "1381:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1381:19:9"
															},
															"nativeSrc": "1381:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "1381:19:9"
														},
														{
															"nativeSrc": "1409:29:9",
															"nodeType": "YulAssignment",
															"src": "1409:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1428:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1428:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1433:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1433:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1424:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1424:3:9"
																},
																"nativeSrc": "1424:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1424:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1409:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "1409:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1275:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1343:3:9",
														"nodeType": "YulTypedName",
														"src": "1343:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1348:6:9",
														"nodeType": "YulTypedName",
														"src": "1348:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1359:11:9",
														"nodeType": "YulTypedName",
														"src": "1359:11:9",
														"type": ""
													}
												],
												"src": "1275:169:9"
											},
											{
												"body": {
													"nativeSrc": "1512:77:9",
													"nodeType": "YulBlock",
													"src": "1512:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1529:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1529:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1534:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1534:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1539:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1539:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1523:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1523:5:9"
																},
																"nativeSrc": "1523:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1523:23:9"
															},
															"nativeSrc": "1523:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "1523:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1566:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1566:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1571:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1571:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1562:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1562:3:9"
																		},
																		"nativeSrc": "1562:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1562:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1580:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1580:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1555:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1555:6:9"
																},
																"nativeSrc": "1555:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1555:27:9"
															},
															"nativeSrc": "1555:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1555:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1450:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1494:3:9",
														"nodeType": "YulTypedName",
														"src": "1494:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1499:3:9",
														"nodeType": "YulTypedName",
														"src": "1499:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1504:6:9",
														"nodeType": "YulTypedName",
														"src": "1504:6:9",
														"type": ""
													}
												],
												"src": "1450:139:9"
											},
											{
												"body": {
													"nativeSrc": "1643:54:9",
													"nodeType": "YulBlock",
													"src": "1643:54:9",
													"statements": [
														{
															"nativeSrc": "1653:38:9",
															"nodeType": "YulAssignment",
															"src": "1653:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1671:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1671:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1678:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1678:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1667:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1667:3:9"
																		},
																		"nativeSrc": "1667:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1667:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1687:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1687:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1683:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1683:3:9"
																		},
																		"nativeSrc": "1683:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1683:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1663:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1663:3:9"
																},
																"nativeSrc": "1663:28:9",
																"nodeType": "YulFunctionCall",
																"src": "1663:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1653:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1653:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1595:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1626:5:9",
														"nodeType": "YulTypedName",
														"src": "1626:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1636:6:9",
														"nodeType": "YulTypedName",
														"src": "1636:6:9",
														"type": ""
													}
												],
												"src": "1595:102:9"
											},
											{
												"body": {
													"nativeSrc": "1795:285:9",
													"nodeType": "YulBlock",
													"src": "1795:285:9",
													"statements": [
														{
															"nativeSrc": "1805:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1805:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1852:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1852:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1819:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "1819:32:9"
																},
																"nativeSrc": "1819:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1819:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1809:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1809:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1867:78:9",
															"nodeType": "YulAssignment",
															"src": "1867:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1933:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1933:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1938:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1938:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1874:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "1874:58:9"
																},
																"nativeSrc": "1874:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1874:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1867:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1867:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1993:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1993:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2000:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2000:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1989:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1989:3:9"
																		},
																		"nativeSrc": "1989:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1989:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2007:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2007:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2012:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2012:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1954:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "1954:34:9"
																},
																"nativeSrc": "1954:65:9",
																"nodeType": "YulFunctionCall",
																"src": "1954:65:9"
															},
															"nativeSrc": "1954:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "1954:65:9"
														},
														{
															"nativeSrc": "2028:46:9",
															"nodeType": "YulAssignment",
															"src": "2028:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2039:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2039:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2066:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2066:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2044:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "2044:21:9"
																		},
																		"nativeSrc": "2044:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2044:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2035:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2035:3:9"
																},
																"nativeSrc": "2035:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2035:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2028:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2028:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1703:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1776:5:9",
														"nodeType": "YulTypedName",
														"src": "1776:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1783:3:9",
														"nodeType": "YulTypedName",
														"src": "1783:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1791:3:9",
														"nodeType": "YulTypedName",
														"src": "1791:3:9",
														"type": ""
													}
												],
												"src": "1703:377:9"
											},
											{
												"body": {
													"nativeSrc": "2204:195:9",
													"nodeType": "YulBlock",
													"src": "2204:195:9",
													"statements": [
														{
															"nativeSrc": "2214:26:9",
															"nodeType": "YulAssignment",
															"src": "2214:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2226:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2226:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2237:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2237:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2222:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2222:3:9"
																},
																"nativeSrc": "2222:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2222:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2214:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2214:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2261:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2261:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2272:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2272:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2257:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2257:3:9"
																		},
																		"nativeSrc": "2257:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2257:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2280:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2280:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2286:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2286:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2276:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2276:3:9"
																		},
																		"nativeSrc": "2276:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2250:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2250:6:9"
																},
																"nativeSrc": "2250:47:9",
																"nodeType": "YulFunctionCall",
																"src": "2250:47:9"
															},
															"nativeSrc": "2250:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "2250:47:9"
														},
														{
															"nativeSrc": "2306:86:9",
															"nodeType": "YulAssignment",
															"src": "2306:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2378:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2378:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2387:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2387:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2314:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "2314:63:9"
																},
																"nativeSrc": "2314:78:9",
																"nodeType": "YulFunctionCall",
																"src": "2314:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2306:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2306:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2086:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2176:9:9",
														"nodeType": "YulTypedName",
														"src": "2176:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2188:6:9",
														"nodeType": "YulTypedName",
														"src": "2188:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2199:4:9",
														"nodeType": "YulTypedName",
														"src": "2199:4:9",
														"type": ""
													}
												],
												"src": "2086:313:9"
											},
											{
												"body": {
													"nativeSrc": "2450:81:9",
													"nodeType": "YulBlock",
													"src": "2450:81:9",
													"statements": [
														{
															"nativeSrc": "2460:65:9",
															"nodeType": "YulAssignment",
															"src": "2460:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2475:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2475:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2482:42:9",
																		"nodeType": "YulLiteral",
																		"src": "2482:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2471:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2471:3:9"
																},
																"nativeSrc": "2471:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2471:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2460:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2460:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2405:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2432:5:9",
														"nodeType": "YulTypedName",
														"src": "2432:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2442:7:9",
														"nodeType": "YulTypedName",
														"src": "2442:7:9",
														"type": ""
													}
												],
												"src": "2405:126:9"
											},
											{
												"body": {
													"nativeSrc": "2582:51:9",
													"nodeType": "YulBlock",
													"src": "2582:51:9",
													"statements": [
														{
															"nativeSrc": "2592:35:9",
															"nodeType": "YulAssignment",
															"src": "2592:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2621:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2621:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2603:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2603:17:9"
																},
																"nativeSrc": "2603:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2603:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2592:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2592:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2537:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2564:5:9",
														"nodeType": "YulTypedName",
														"src": "2564:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2574:7:9",
														"nodeType": "YulTypedName",
														"src": "2574:7:9",
														"type": ""
													}
												],
												"src": "2537:96:9"
											},
											{
												"body": {
													"nativeSrc": "2682:79:9",
													"nodeType": "YulBlock",
													"src": "2682:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2739:16:9",
																"nodeType": "YulBlock",
																"src": "2739:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2748:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2748:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2751:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2751:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2741:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2741:6:9"
																			},
																			"nativeSrc": "2741:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2741:12:9"
																		},
																		"nativeSrc": "2741:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2741:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2705:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2705:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2730:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2730:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2712:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2712:17:9"
																				},
																				"nativeSrc": "2712:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2712:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2702:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2702:2:9"
																		},
																		"nativeSrc": "2702:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2702:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2695:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:9"
																},
																"nativeSrc": "2695:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2695:43:9"
															},
															"nativeSrc": "2692:63:9",
															"nodeType": "YulIf",
															"src": "2692:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2639:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2675:5:9",
														"nodeType": "YulTypedName",
														"src": "2675:5:9",
														"type": ""
													}
												],
												"src": "2639:122:9"
											},
											{
												"body": {
													"nativeSrc": "2819:87:9",
													"nodeType": "YulBlock",
													"src": "2819:87:9",
													"statements": [
														{
															"nativeSrc": "2829:29:9",
															"nodeType": "YulAssignment",
															"src": "2829:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2851:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2851:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2838:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2838:12:9"
																},
																"nativeSrc": "2838:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2838:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2829:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2829:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2894:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2894:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2867:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2867:26:9"
																},
																"nativeSrc": "2867:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2867:33:9"
															},
															"nativeSrc": "2867:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2867:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2767:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2797:6:9",
														"nodeType": "YulTypedName",
														"src": "2797:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2805:3:9",
														"nodeType": "YulTypedName",
														"src": "2805:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2813:5:9",
														"nodeType": "YulTypedName",
														"src": "2813:5:9",
														"type": ""
													}
												],
												"src": "2767:139:9"
											},
											{
												"body": {
													"nativeSrc": "2995:391:9",
													"nodeType": "YulBlock",
													"src": "2995:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3041:83:9",
																"nodeType": "YulBlock",
																"src": "3041:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3043:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3043:77:9"
																			},
																			"nativeSrc": "3043:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3043:79:9"
																		},
																		"nativeSrc": "3043:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3043:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3016:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3016:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3025:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3025:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3012:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3012:3:9"
																		},
																		"nativeSrc": "3012:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3012:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3037:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3037:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3008:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3008:3:9"
																},
																"nativeSrc": "3008:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3008:32:9"
															},
															"nativeSrc": "3005:119:9",
															"nodeType": "YulIf",
															"src": "3005:119:9"
														},
														{
															"nativeSrc": "3134:117:9",
															"nodeType": "YulBlock",
															"src": "3134:117:9",
															"statements": [
																{
																	"nativeSrc": "3149:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3149:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3163:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3163:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3153:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3153:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:9"
																				},
																				"nativeSrc": "3209:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3188:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:9"
																		},
																		"nativeSrc": "3188:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3178:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3261:118:9",
															"nodeType": "YulBlock",
															"src": "3261:118:9",
															"statements": [
																{
																	"nativeSrc": "3276:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3276:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3290:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3290:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3280:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3280:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3306:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3306:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3341:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3341:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3352:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3352:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3337:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3337:3:9"
																				},
																				"nativeSrc": "3337:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3337:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3361:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3361:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3316:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3316:20:9"
																		},
																		"nativeSrc": "3316:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3316:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3306:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3306:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2912:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2957:9:9",
														"nodeType": "YulTypedName",
														"src": "2957:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2968:7:9",
														"nodeType": "YulTypedName",
														"src": "2968:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2980:6:9",
														"nodeType": "YulTypedName",
														"src": "2980:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2988:6:9",
														"nodeType": "YulTypedName",
														"src": "2988:6:9",
														"type": ""
													}
												],
												"src": "2912:474:9"
											},
											{
												"body": {
													"nativeSrc": "3434:48:9",
													"nodeType": "YulBlock",
													"src": "3434:48:9",
													"statements": [
														{
															"nativeSrc": "3444:32:9",
															"nodeType": "YulAssignment",
															"src": "3444:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3469:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3469:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3462:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:9"
																		},
																		"nativeSrc": "3462:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3462:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3455:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:9"
																},
																"nativeSrc": "3455:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3455:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3444:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3444:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3392:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3416:5:9",
														"nodeType": "YulTypedName",
														"src": "3416:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3426:7:9",
														"nodeType": "YulTypedName",
														"src": "3426:7:9",
														"type": ""
													}
												],
												"src": "3392:90:9"
											},
											{
												"body": {
													"nativeSrc": "3547:50:9",
													"nodeType": "YulBlock",
													"src": "3547:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3564:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3564:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3584:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3584:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3569:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3569:14:9"
																		},
																		"nativeSrc": "3569:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3569:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3557:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3557:6:9"
																},
																"nativeSrc": "3557:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3557:34:9"
															},
															"nativeSrc": "3557:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3557:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3488:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3535:5:9",
														"nodeType": "YulTypedName",
														"src": "3535:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3542:3:9",
														"nodeType": "YulTypedName",
														"src": "3542:3:9",
														"type": ""
													}
												],
												"src": "3488:109:9"
											},
											{
												"body": {
													"nativeSrc": "3695:118:9",
													"nodeType": "YulBlock",
													"src": "3695:118:9",
													"statements": [
														{
															"nativeSrc": "3705:26:9",
															"nodeType": "YulAssignment",
															"src": "3705:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3717:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3717:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3728:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3728:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3713:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3713:3:9"
																},
																"nativeSrc": "3713:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3713:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3705:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3705:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3779:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3779:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3792:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3792:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3803:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3803:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3788:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3788:3:9"
																		},
																		"nativeSrc": "3788:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3788:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3741:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3741:37:9"
																},
																"nativeSrc": "3741:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3741:65:9"
															},
															"nativeSrc": "3741:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3741:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3603:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3667:9:9",
														"nodeType": "YulTypedName",
														"src": "3667:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3679:6:9",
														"nodeType": "YulTypedName",
														"src": "3679:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3690:4:9",
														"nodeType": "YulTypedName",
														"src": "3690:4:9",
														"type": ""
													}
												],
												"src": "3603:210:9"
											},
											{
												"body": {
													"nativeSrc": "3885:263:9",
													"nodeType": "YulBlock",
													"src": "3885:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3931:83:9",
																"nodeType": "YulBlock",
																"src": "3931:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3933:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3933:77:9"
																			},
																			"nativeSrc": "3933:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3933:79:9"
																		},
																		"nativeSrc": "3933:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3933:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3906:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3906:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3915:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3915:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3902:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3902:3:9"
																		},
																		"nativeSrc": "3902:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3902:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3927:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3927:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3898:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:9"
																},
																"nativeSrc": "3898:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3898:32:9"
															},
															"nativeSrc": "3895:119:9",
															"nodeType": "YulIf",
															"src": "3895:119:9"
														},
														{
															"nativeSrc": "4024:117:9",
															"nodeType": "YulBlock",
															"src": "4024:117:9",
															"statements": [
																{
																	"nativeSrc": "4039:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4039:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4053:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4053:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4043:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4043:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4068:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4068:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4103:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4103:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4114:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4114:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4099:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4099:3:9"
																				},
																				"nativeSrc": "4099:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4099:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4123:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4123:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4078:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4078:20:9"
																		},
																		"nativeSrc": "4078:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4078:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4068:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4068:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3819:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3855:9:9",
														"nodeType": "YulTypedName",
														"src": "3855:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3866:7:9",
														"nodeType": "YulTypedName",
														"src": "3866:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3878:6:9",
														"nodeType": "YulTypedName",
														"src": "3878:6:9",
														"type": ""
													}
												],
												"src": "3819:329:9"
											},
											{
												"body": {
													"nativeSrc": "4219:53:9",
													"nodeType": "YulBlock",
													"src": "4219:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4236:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4259:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4259:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4241:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "4241:17:9"
																		},
																		"nativeSrc": "4241:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4241:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4229:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:9"
																},
																"nativeSrc": "4229:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4229:37:9"
															},
															"nativeSrc": "4229:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "4229:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4154:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4207:5:9",
														"nodeType": "YulTypedName",
														"src": "4207:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4214:3:9",
														"nodeType": "YulTypedName",
														"src": "4214:3:9",
														"type": ""
													}
												],
												"src": "4154:118:9"
											},
											{
												"body": {
													"nativeSrc": "4376:124:9",
													"nodeType": "YulBlock",
													"src": "4376:124:9",
													"statements": [
														{
															"nativeSrc": "4386:26:9",
															"nodeType": "YulAssignment",
															"src": "4386:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4398:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4398:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4409:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4409:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4394:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4394:3:9"
																},
																"nativeSrc": "4394:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4394:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4386:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4386:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4466:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4466:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4479:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4479:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4490:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4490:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4475:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4475:3:9"
																		},
																		"nativeSrc": "4475:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4475:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4422:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4422:43:9"
																},
																"nativeSrc": "4422:71:9",
																"nodeType": "YulFunctionCall",
																"src": "4422:71:9"
															},
															"nativeSrc": "4422:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "4422:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4278:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:9",
														"nodeType": "YulTypedName",
														"src": "4348:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4360:6:9",
														"nodeType": "YulTypedName",
														"src": "4360:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4371:4:9",
														"nodeType": "YulTypedName",
														"src": "4371:4:9",
														"type": ""
													}
												],
												"src": "4278:222:9"
											},
											{
												"body": {
													"nativeSrc": "4546:76:9",
													"nodeType": "YulBlock",
													"src": "4546:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4600:16:9",
																"nodeType": "YulBlock",
																"src": "4600:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4609:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4609:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4612:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4612:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4602:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4602:6:9"
																			},
																			"nativeSrc": "4602:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4602:12:9"
																		},
																		"nativeSrc": "4602:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4602:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4569:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4569:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4591:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4591:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4576:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "4576:14:9"
																				},
																				"nativeSrc": "4576:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4576:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4566:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4566:2:9"
																		},
																		"nativeSrc": "4566:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4566:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4559:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4559:6:9"
																},
																"nativeSrc": "4559:40:9",
																"nodeType": "YulFunctionCall",
																"src": "4559:40:9"
															},
															"nativeSrc": "4556:60:9",
															"nodeType": "YulIf",
															"src": "4556:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4506:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4539:5:9",
														"nodeType": "YulTypedName",
														"src": "4539:5:9",
														"type": ""
													}
												],
												"src": "4506:116:9"
											},
											{
												"body": {
													"nativeSrc": "4677:84:9",
													"nodeType": "YulBlock",
													"src": "4677:84:9",
													"statements": [
														{
															"nativeSrc": "4687:29:9",
															"nodeType": "YulAssignment",
															"src": "4687:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4709:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4709:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4696:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "4696:12:9"
																},
																"nativeSrc": "4696:20:9",
																"nodeType": "YulFunctionCall",
																"src": "4696:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4687:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4687:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4749:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4749:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4725:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "4725:23:9"
																},
																"nativeSrc": "4725:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4725:30:9"
															},
															"nativeSrc": "4725:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4725:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4628:133:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4655:6:9",
														"nodeType": "YulTypedName",
														"src": "4655:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4663:3:9",
														"nodeType": "YulTypedName",
														"src": "4663:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4671:5:9",
														"nodeType": "YulTypedName",
														"src": "4671:5:9",
														"type": ""
													}
												],
												"src": "4628:133:9"
											},
											{
												"body": {
													"nativeSrc": "4847:388:9",
													"nodeType": "YulBlock",
													"src": "4847:388:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4893:83:9",
																"nodeType": "YulBlock",
																"src": "4893:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4895:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4895:77:9"
																			},
																			"nativeSrc": "4895:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4895:79:9"
																		},
																		"nativeSrc": "4895:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4895:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4868:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4868:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4877:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4877:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4864:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:9"
																		},
																		"nativeSrc": "4864:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4864:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4889:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4889:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4860:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4860:3:9"
																},
																"nativeSrc": "4860:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4860:32:9"
															},
															"nativeSrc": "4857:119:9",
															"nodeType": "YulIf",
															"src": "4857:119:9"
														},
														{
															"nativeSrc": "4986:117:9",
															"nodeType": "YulBlock",
															"src": "4986:117:9",
															"statements": [
																{
																	"nativeSrc": "5001:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5001:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5015:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5015:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5005:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5005:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5030:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5030:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5065:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5065:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5076:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5076:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5061:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5061:3:9"
																				},
																				"nativeSrc": "5061:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5061:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5085:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5085:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5040:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5040:20:9"
																		},
																		"nativeSrc": "5040:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5040:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5030:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5030:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5113:115:9",
															"nodeType": "YulBlock",
															"src": "5113:115:9",
															"statements": [
																{
																	"nativeSrc": "5128:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5128:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5142:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5142:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5132:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5132:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5158:60:9",
																	"nodeType": "YulAssignment",
																	"src": "5158:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5190:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5190:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5201:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5201:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5186:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5186:3:9"
																				},
																				"nativeSrc": "5186:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5186:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5210:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5210:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5168:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:9"
																		},
																		"nativeSrc": "5168:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5158:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5158:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4767:468:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4809:9:9",
														"nodeType": "YulTypedName",
														"src": "4809:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4820:7:9",
														"nodeType": "YulTypedName",
														"src": "4820:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4832:6:9",
														"nodeType": "YulTypedName",
														"src": "4832:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4840:6:9",
														"nodeType": "YulTypedName",
														"src": "4840:6:9",
														"type": ""
													}
												],
												"src": "4767:468:9"
											},
											{
												"body": {
													"nativeSrc": "5341:519:9",
													"nodeType": "YulBlock",
													"src": "5341:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5387:83:9",
																"nodeType": "YulBlock",
																"src": "5387:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5389:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5389:77:9"
																			},
																			"nativeSrc": "5389:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5389:79:9"
																		},
																		"nativeSrc": "5389:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5389:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5362:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5362:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5371:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5371:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5358:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5358:3:9"
																		},
																		"nativeSrc": "5358:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5358:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5383:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5383:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5354:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5354:3:9"
																},
																"nativeSrc": "5354:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5354:32:9"
															},
															"nativeSrc": "5351:119:9",
															"nodeType": "YulIf",
															"src": "5351:119:9"
														},
														{
															"nativeSrc": "5480:117:9",
															"nodeType": "YulBlock",
															"src": "5480:117:9",
															"statements": [
																{
																	"nativeSrc": "5495:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5495:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5509:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5509:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5499:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5499:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5524:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5524:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5559:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5559:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5570:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5570:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5555:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5555:3:9"
																				},
																				"nativeSrc": "5555:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5555:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5579:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5579:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5534:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5534:20:9"
																		},
																		"nativeSrc": "5534:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5534:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5524:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5524:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5607:118:9",
															"nodeType": "YulBlock",
															"src": "5607:118:9",
															"statements": [
																{
																	"nativeSrc": "5622:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5622:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5636:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5636:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5626:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5626:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5652:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5652:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5687:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5687:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5698:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5698:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5683:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5683:3:9"
																				},
																				"nativeSrc": "5683:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5683:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5707:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5707:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5662:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5662:20:9"
																		},
																		"nativeSrc": "5662:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5662:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5652:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5652:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5735:118:9",
															"nodeType": "YulBlock",
															"src": "5735:118:9",
															"statements": [
																{
																	"nativeSrc": "5750:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5750:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5764:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5764:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5754:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5754:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5780:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5780:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5815:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5815:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5826:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5826:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5811:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5811:3:9"
																				},
																				"nativeSrc": "5811:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5811:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5835:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5835:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5790:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5790:20:9"
																		},
																		"nativeSrc": "5790:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5790:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5780:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5780:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5241:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5295:9:9",
														"nodeType": "YulTypedName",
														"src": "5295:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5306:7:9",
														"nodeType": "YulTypedName",
														"src": "5306:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5318:6:9",
														"nodeType": "YulTypedName",
														"src": "5318:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5326:6:9",
														"nodeType": "YulTypedName",
														"src": "5326:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5334:6:9",
														"nodeType": "YulTypedName",
														"src": "5334:6:9",
														"type": ""
													}
												],
												"src": "5241:619:9"
											},
											{
												"body": {
													"nativeSrc": "5909:43:9",
													"nodeType": "YulBlock",
													"src": "5909:43:9",
													"statements": [
														{
															"nativeSrc": "5919:27:9",
															"nodeType": "YulAssignment",
															"src": "5919:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5934:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5934:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5941:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5941:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5930:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5930:3:9"
																},
																"nativeSrc": "5930:16:9",
																"nodeType": "YulFunctionCall",
																"src": "5930:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5919:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5919:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5866:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5891:5:9",
														"nodeType": "YulTypedName",
														"src": "5891:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5901:7:9",
														"nodeType": "YulTypedName",
														"src": "5901:7:9",
														"type": ""
													}
												],
												"src": "5866:86:9"
											},
											{
												"body": {
													"nativeSrc": "6019:51:9",
													"nodeType": "YulBlock",
													"src": "6019:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6036:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6036:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6057:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6057:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6041:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "6041:15:9"
																		},
																		"nativeSrc": "6041:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6041:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6029:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6029:6:9"
																},
																"nativeSrc": "6029:35:9",
																"nodeType": "YulFunctionCall",
																"src": "6029:35:9"
															},
															"nativeSrc": "6029:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "6029:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5958:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6007:5:9",
														"nodeType": "YulTypedName",
														"src": "6007:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6014:3:9",
														"nodeType": "YulTypedName",
														"src": "6014:3:9",
														"type": ""
													}
												],
												"src": "5958:112:9"
											},
											{
												"body": {
													"nativeSrc": "6170:120:9",
													"nodeType": "YulBlock",
													"src": "6170:120:9",
													"statements": [
														{
															"nativeSrc": "6180:26:9",
															"nodeType": "YulAssignment",
															"src": "6180:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6192:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6192:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6203:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6203:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6188:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6188:3:9"
																},
																"nativeSrc": "6188:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6188:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6180:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6180:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6256:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6256:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6269:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6269:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6280:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6280:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6265:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6265:3:9"
																		},
																		"nativeSrc": "6265:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6265:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6216:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "6216:39:9"
																},
																"nativeSrc": "6216:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6216:67:9"
															},
															"nativeSrc": "6216:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "6216:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6076:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6142:9:9",
														"nodeType": "YulTypedName",
														"src": "6142:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6154:6:9",
														"nodeType": "YulTypedName",
														"src": "6154:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6165:4:9",
														"nodeType": "YulTypedName",
														"src": "6165:4:9",
														"type": ""
													}
												],
												"src": "6076:214:9"
											},
											{
												"body": {
													"nativeSrc": "6385:28:9",
													"nodeType": "YulBlock",
													"src": "6385:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6402:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6402:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6405:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6405:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6395:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6395:6:9"
																},
																"nativeSrc": "6395:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6395:12:9"
															},
															"nativeSrc": "6395:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6395:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6296:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6296:117:9"
											},
											{
												"body": {
													"nativeSrc": "6508:28:9",
													"nodeType": "YulBlock",
													"src": "6508:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6525:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6525:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6528:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6528:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6518:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6518:6:9"
																},
																"nativeSrc": "6518:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6518:12:9"
															},
															"nativeSrc": "6518:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6518:12:9"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "6419:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6419:117:9"
											},
											{
												"body": {
													"nativeSrc": "6631:28:9",
													"nodeType": "YulBlock",
													"src": "6631:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6648:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6648:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6651:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6651:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6641:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6641:6:9"
																},
																"nativeSrc": "6641:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6641:12:9"
															},
															"nativeSrc": "6641:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6641:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6542:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6542:117:9"
											},
											{
												"body": {
													"nativeSrc": "6772:478:9",
													"nodeType": "YulBlock",
													"src": "6772:478:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6821:83:9",
																"nodeType": "YulBlock",
																"src": "6821:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6823:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6823:77:9"
																			},
																			"nativeSrc": "6823:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6823:79:9"
																		},
																		"nativeSrc": "6823:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6823:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6800:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6800:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6808:4:9",
																						"nodeType": "YulLiteral",
																						"src": "6808:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6796:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6796:3:9"
																				},
																				"nativeSrc": "6796:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6796:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6815:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6815:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6792:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6792:3:9"
																		},
																		"nativeSrc": "6792:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6792:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6785:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6785:6:9"
																},
																"nativeSrc": "6785:35:9",
																"nodeType": "YulFunctionCall",
																"src": "6785:35:9"
															},
															"nativeSrc": "6782:122:9",
															"nodeType": "YulIf",
															"src": "6782:122:9"
														},
														{
															"nativeSrc": "6913:30:9",
															"nodeType": "YulAssignment",
															"src": "6913:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6936:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6936:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6923:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "6923:12:9"
																},
																"nativeSrc": "6923:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6923:20:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6913:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6913:6:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6986:83:9",
																"nodeType": "YulBlock",
																"src": "6986:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "6988:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6988:77:9"
																			},
																			"nativeSrc": "6988:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6988:79:9"
																		},
																		"nativeSrc": "6988:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6988:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6958:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6958:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6966:18:9",
																		"nodeType": "YulLiteral",
																		"src": "6966:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6955:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6955:2:9"
																},
																"nativeSrc": "6955:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6955:30:9"
															},
															"nativeSrc": "6952:117:9",
															"nodeType": "YulIf",
															"src": "6952:117:9"
														},
														{
															"nativeSrc": "7078:29:9",
															"nodeType": "YulAssignment",
															"src": "7078:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7094:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7094:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7102:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7102:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7090:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7090:3:9"
																},
																"nativeSrc": "7090:17:9",
																"nodeType": "YulFunctionCall",
																"src": "7090:17:9"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "7078:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "7078:8:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7161:83:9",
																"nodeType": "YulBlock",
																"src": "7161:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7163:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7163:77:9"
																			},
																			"nativeSrc": "7163:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7163:79:9"
																		},
																		"nativeSrc": "7163:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7163:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "7126:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "7126:8:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "7140:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7140:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7148:4:9",
																						"nodeType": "YulLiteral",
																						"src": "7148:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7136:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7136:3:9"
																				},
																				"nativeSrc": "7136:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7136:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7122:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7122:3:9"
																		},
																		"nativeSrc": "7122:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7122:32:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7156:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7156:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7119:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7119:2:9"
																},
																"nativeSrc": "7119:41:9",
																"nodeType": "YulFunctionCall",
																"src": "7119:41:9"
															},
															"nativeSrc": "7116:128:9",
															"nodeType": "YulIf",
															"src": "7116:128:9"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "6682:568:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6739:6:9",
														"nodeType": "YulTypedName",
														"src": "6739:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6747:3:9",
														"nodeType": "YulTypedName",
														"src": "6747:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "6755:8:9",
														"nodeType": "YulTypedName",
														"src": "6755:8:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6765:6:9",
														"nodeType": "YulTypedName",
														"src": "6765:6:9",
														"type": ""
													}
												],
												"src": "6682:568:9"
											},
											{
												"body": {
													"nativeSrc": "7371:583:9",
													"nodeType": "YulBlock",
													"src": "7371:583:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7417:83:9",
																"nodeType": "YulBlock",
																"src": "7417:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7419:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7419:77:9"
																			},
																			"nativeSrc": "7419:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7419:79:9"
																		},
																		"nativeSrc": "7419:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7419:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7392:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7392:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7401:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7401:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7388:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7388:3:9"
																		},
																		"nativeSrc": "7388:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7388:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7413:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7413:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7384:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7384:3:9"
																},
																"nativeSrc": "7384:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7384:32:9"
															},
															"nativeSrc": "7381:119:9",
															"nodeType": "YulIf",
															"src": "7381:119:9"
														},
														{
															"nativeSrc": "7510:312:9",
															"nodeType": "YulBlock",
															"src": "7510:312:9",
															"statements": [
																{
																	"nativeSrc": "7525:45:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7525:45:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7556:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7556:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7567:1:9",
																						"nodeType": "YulLiteral",
																						"src": "7567:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7552:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7552:3:9"
																				},
																				"nativeSrc": "7552:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7552:17:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7539:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "7539:12:9"
																		},
																		"nativeSrc": "7539:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7539:31:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7529:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7529:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7617:83:9",
																		"nodeType": "YulBlock",
																		"src": "7617:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7619:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "7619:77:9"
																					},
																					"nativeSrc": "7619:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7619:79:9"
																				},
																				"nativeSrc": "7619:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "7619:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7589:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7589:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7597:18:9",
																				"nodeType": "YulLiteral",
																				"src": "7597:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7586:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7586:2:9"
																		},
																		"nativeSrc": "7586:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7586:30:9"
																	},
																	"nativeSrc": "7583:117:9",
																	"nodeType": "YulIf",
																	"src": "7583:117:9"
																},
																{
																	"nativeSrc": "7714:98:9",
																	"nodeType": "YulAssignment",
																	"src": "7714:98:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7784:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7784:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7795:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7795:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7780:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7780:3:9"
																				},
																				"nativeSrc": "7780:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7780:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7804:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7804:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "7732:47:9",
																			"nodeType": "YulIdentifier",
																			"src": "7732:47:9"
																		},
																		"nativeSrc": "7732:80:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7732:80:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7714:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7714:6:9"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "7722:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7722:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7832:115:9",
															"nodeType": "YulBlock",
															"src": "7832:115:9",
															"statements": [
																{
																	"nativeSrc": "7847:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7847:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7861:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7861:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7851:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7851:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7877:60:9",
																	"nodeType": "YulAssignment",
																	"src": "7877:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7909:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7909:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7920:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7920:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7905:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7905:3:9"
																				},
																				"nativeSrc": "7905:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7905:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7929:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7929:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7887:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "7887:17:9"
																		},
																		"nativeSrc": "7887:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7887:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7877:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7877:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool",
												"nativeSrc": "7256:698:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7325:9:9",
														"nodeType": "YulTypedName",
														"src": "7325:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7336:7:9",
														"nodeType": "YulTypedName",
														"src": "7336:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7348:6:9",
														"nodeType": "YulTypedName",
														"src": "7348:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7356:6:9",
														"nodeType": "YulTypedName",
														"src": "7356:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7364:6:9",
														"nodeType": "YulTypedName",
														"src": "7364:6:9",
														"type": ""
													}
												],
												"src": "7256:698:9"
											},
											{
												"body": {
													"nativeSrc": "8025:53:9",
													"nodeType": "YulBlock",
													"src": "8025:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8042:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8042:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8065:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8065:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8047:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8047:17:9"
																		},
																		"nativeSrc": "8047:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8047:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8035:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8035:6:9"
																},
																"nativeSrc": "8035:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8035:37:9"
															},
															"nativeSrc": "8035:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8035:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7960:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8013:5:9",
														"nodeType": "YulTypedName",
														"src": "8013:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8020:3:9",
														"nodeType": "YulTypedName",
														"src": "8020:3:9",
														"type": ""
													}
												],
												"src": "7960:118:9"
											},
											{
												"body": {
													"nativeSrc": "8182:124:9",
													"nodeType": "YulBlock",
													"src": "8182:124:9",
													"statements": [
														{
															"nativeSrc": "8192:26:9",
															"nodeType": "YulAssignment",
															"src": "8192:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8204:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8204:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8215:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8215:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8200:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8200:3:9"
																},
																"nativeSrc": "8200:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8200:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8192:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8192:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8272:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8272:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8285:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8285:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8296:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8296:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8281:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8281:3:9"
																		},
																		"nativeSrc": "8281:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8281:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8228:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8228:43:9"
																},
																"nativeSrc": "8228:71:9",
																"nodeType": "YulFunctionCall",
																"src": "8228:71:9"
															},
															"nativeSrc": "8228:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "8228:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8084:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8154:9:9",
														"nodeType": "YulTypedName",
														"src": "8154:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8166:6:9",
														"nodeType": "YulTypedName",
														"src": "8166:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8177:4:9",
														"nodeType": "YulTypedName",
														"src": "8177:4:9",
														"type": ""
													}
												],
												"src": "8084:222:9"
											},
											{
												"body": {
													"nativeSrc": "8395:391:9",
													"nodeType": "YulBlock",
													"src": "8395:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8441:83:9",
																"nodeType": "YulBlock",
																"src": "8441:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8443:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8443:77:9"
																			},
																			"nativeSrc": "8443:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8443:79:9"
																		},
																		"nativeSrc": "8443:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8443:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8416:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8416:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8425:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8425:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8412:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8412:3:9"
																		},
																		"nativeSrc": "8412:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8412:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8437:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8437:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8408:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8408:3:9"
																},
																"nativeSrc": "8408:32:9",
																"nodeType": "YulFunctionCall",
																"src": "8408:32:9"
															},
															"nativeSrc": "8405:119:9",
															"nodeType": "YulIf",
															"src": "8405:119:9"
														},
														{
															"nativeSrc": "8534:117:9",
															"nodeType": "YulBlock",
															"src": "8534:117:9",
															"statements": [
																{
																	"nativeSrc": "8549:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8549:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8563:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8553:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8553:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8578:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8578:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8613:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8613:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8624:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8624:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8609:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8609:3:9"
																				},
																				"nativeSrc": "8609:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8609:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8633:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8633:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8588:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8588:20:9"
																		},
																		"nativeSrc": "8588:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8588:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8578:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8578:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8661:118:9",
															"nodeType": "YulBlock",
															"src": "8661:118:9",
															"statements": [
																{
																	"nativeSrc": "8676:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8676:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8690:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8690:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8680:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8680:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8706:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8706:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8741:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8741:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8752:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8752:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8737:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8737:3:9"
																				},
																				"nativeSrc": "8737:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8737:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8761:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8761:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8716:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8716:20:9"
																		},
																		"nativeSrc": "8716:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8716:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8706:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8706:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8312:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8357:9:9",
														"nodeType": "YulTypedName",
														"src": "8357:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8368:7:9",
														"nodeType": "YulTypedName",
														"src": "8368:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8380:6:9",
														"nodeType": "YulTypedName",
														"src": "8380:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8388:6:9",
														"nodeType": "YulTypedName",
														"src": "8388:6:9",
														"type": ""
													}
												],
												"src": "8312:474:9"
											},
											{
												"body": {
													"nativeSrc": "8918:206:9",
													"nodeType": "YulBlock",
													"src": "8918:206:9",
													"statements": [
														{
															"nativeSrc": "8928:26:9",
															"nodeType": "YulAssignment",
															"src": "8928:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8940:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8940:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8951:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8951:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8936:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8936:3:9"
																},
																"nativeSrc": "8936:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8936:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8928:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8928:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9008:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9008:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9021:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9021:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9032:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9032:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9017:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9017:3:9"
																		},
																		"nativeSrc": "9017:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9017:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8964:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8964:43:9"
																},
																"nativeSrc": "8964:71:9",
																"nodeType": "YulFunctionCall",
																"src": "8964:71:9"
															},
															"nativeSrc": "8964:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "8964:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9089:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9089:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9102:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9102:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9113:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9113:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9098:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9098:3:9"
																		},
																		"nativeSrc": "9098:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9098:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9045:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9045:43:9"
																},
																"nativeSrc": "9045:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9045:72:9"
															},
															"nativeSrc": "9045:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9045:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8792:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8882:9:9",
														"nodeType": "YulTypedName",
														"src": "8882:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8894:6:9",
														"nodeType": "YulTypedName",
														"src": "8894:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8902:6:9",
														"nodeType": "YulTypedName",
														"src": "8902:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8913:4:9",
														"nodeType": "YulTypedName",
														"src": "8913:4:9",
														"type": ""
													}
												],
												"src": "8792:332:9"
											},
											{
												"body": {
													"nativeSrc": "9158:152:9",
													"nodeType": "YulBlock",
													"src": "9158:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9175:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9175:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9178:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9178:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9168:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9168:6:9"
																},
																"nativeSrc": "9168:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9168:88:9"
															},
															"nativeSrc": "9168:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9168:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9272:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9272:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9275:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9275:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9265:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9265:6:9"
																},
																"nativeSrc": "9265:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9265:15:9"
															},
															"nativeSrc": "9265:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9265:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9296:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9296:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9299:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9299:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9289:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9289:6:9"
																},
																"nativeSrc": "9289:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9289:15:9"
															},
															"nativeSrc": "9289:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9289:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9130:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9130:180:9"
											},
											{
												"body": {
													"nativeSrc": "9367:269:9",
													"nodeType": "YulBlock",
													"src": "9367:269:9",
													"statements": [
														{
															"nativeSrc": "9377:22:9",
															"nodeType": "YulAssignment",
															"src": "9377:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9391:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9391:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9397:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9397:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9387:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9387:3:9"
																},
																"nativeSrc": "9387:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9387:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9377:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9377:6:9"
																}
															]
														},
														{
															"nativeSrc": "9408:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9408:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9438:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9438:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9444:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9444:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9434:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9434:3:9"
																},
																"nativeSrc": "9434:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9434:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9412:18:9",
																	"nodeType": "YulTypedName",
																	"src": "9412:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9485:51:9",
																"nodeType": "YulBlock",
																"src": "9485:51:9",
																"statements": [
																	{
																		"nativeSrc": "9499:27:9",
																		"nodeType": "YulAssignment",
																		"src": "9499:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9513:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "9513:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9521:4:9",
																					"nodeType": "YulLiteral",
																					"src": "9521:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9509:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "9509:3:9"
																			},
																			"nativeSrc": "9509:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9509:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9499:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9499:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9465:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "9465:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9458:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9458:6:9"
																},
																"nativeSrc": "9458:26:9",
																"nodeType": "YulFunctionCall",
																"src": "9458:26:9"
															},
															"nativeSrc": "9455:81:9",
															"nodeType": "YulIf",
															"src": "9455:81:9"
														},
														{
															"body": {
																"nativeSrc": "9588:42:9",
																"nodeType": "YulBlock",
																"src": "9588:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9602:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9602:16:9"
																			},
																			"nativeSrc": "9602:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9602:18:9"
																		},
																		"nativeSrc": "9602:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9602:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9552:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "9552:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9575:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9575:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9583:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9583:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9572:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9572:2:9"
																		},
																		"nativeSrc": "9572:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9572:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9549:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9549:2:9"
																},
																"nativeSrc": "9549:38:9",
																"nodeType": "YulFunctionCall",
																"src": "9549:38:9"
															},
															"nativeSrc": "9546:84:9",
															"nodeType": "YulIf",
															"src": "9546:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9316:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9351:4:9",
														"nodeType": "YulTypedName",
														"src": "9351:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9360:6:9",
														"nodeType": "YulTypedName",
														"src": "9360:6:9",
														"type": ""
													}
												],
												"src": "9316:320:9"
											},
											{
												"body": {
													"nativeSrc": "9748:66:9",
													"nodeType": "YulBlock",
													"src": "9748:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9770:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9770:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9778:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9778:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9766:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9766:3:9"
																		},
																		"nativeSrc": "9766:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9766:14:9"
																	},
																	{
																		"hexValue": "4164647265737320697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "9782:24:9",
																		"nodeType": "YulLiteral",
																		"src": "9782:24:9",
																		"type": "",
																		"value": "Address is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9759:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9759:6:9"
																},
																"nativeSrc": "9759:48:9",
																"nodeType": "YulFunctionCall",
																"src": "9759:48:9"
															},
															"nativeSrc": "9759:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "9759:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
												"nativeSrc": "9642:172:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9740:6:9",
														"nodeType": "YulTypedName",
														"src": "9740:6:9",
														"type": ""
													}
												],
												"src": "9642:172:9"
											},
											{
												"body": {
													"nativeSrc": "9966:220:9",
													"nodeType": "YulBlock",
													"src": "9966:220:9",
													"statements": [
														{
															"nativeSrc": "9976:74:9",
															"nodeType": "YulAssignment",
															"src": "9976:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10042:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10042:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10047:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10047:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9983:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9983:58:9"
																},
																"nativeSrc": "9983:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9983:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9976:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9976:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10148:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10148:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																	"nativeSrc": "10059:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10059:88:9"
																},
																"nativeSrc": "10059:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10059:93:9"
															},
															"nativeSrc": "10059:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10059:93:9"
														},
														{
															"nativeSrc": "10161:19:9",
															"nodeType": "YulAssignment",
															"src": "10161:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10172:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10172:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10177:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10177:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10168:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10168:3:9"
																},
																"nativeSrc": "10168:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10168:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10161:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10161:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9820:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9954:3:9",
														"nodeType": "YulTypedName",
														"src": "9954:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9962:3:9",
														"nodeType": "YulTypedName",
														"src": "9962:3:9",
														"type": ""
													}
												],
												"src": "9820:366:9"
											},
											{
												"body": {
													"nativeSrc": "10363:248:9",
													"nodeType": "YulBlock",
													"src": "10363:248:9",
													"statements": [
														{
															"nativeSrc": "10373:26:9",
															"nodeType": "YulAssignment",
															"src": "10373:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10385:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10385:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10396:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10396:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10381:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10381:3:9"
																},
																"nativeSrc": "10381:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10381:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10373:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10373:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10420:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10420:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10431:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10431:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10416:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10416:3:9"
																		},
																		"nativeSrc": "10416:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10416:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10439:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10439:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10445:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10445:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10435:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10435:3:9"
																		},
																		"nativeSrc": "10435:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10435:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10409:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10409:6:9"
																},
																"nativeSrc": "10409:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10409:47:9"
															},
															"nativeSrc": "10409:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10409:47:9"
														},
														{
															"nativeSrc": "10465:139:9",
															"nodeType": "YulAssignment",
															"src": "10465:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10599:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10599:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10473:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10473:124:9"
																},
																"nativeSrc": "10473:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10473:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10465:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10465:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10192:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10343:9:9",
														"nodeType": "YulTypedName",
														"src": "10343:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10358:4:9",
														"nodeType": "YulTypedName",
														"src": "10358:4:9",
														"type": ""
													}
												],
												"src": "10192:419:9"
											},
											{
												"body": {
													"nativeSrc": "10645:152:9",
													"nodeType": "YulBlock",
													"src": "10645:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10662:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10662:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10665:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10665:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10655:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10655:6:9"
																},
																"nativeSrc": "10655:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10655:88:9"
															},
															"nativeSrc": "10655:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10655:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10759:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10759:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10762:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10762:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10752:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10752:6:9"
																},
																"nativeSrc": "10752:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10752:15:9"
															},
															"nativeSrc": "10752:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10752:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10783:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10783:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10786:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10786:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10776:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10776:6:9"
																},
																"nativeSrc": "10776:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10776:15:9"
															},
															"nativeSrc": "10776:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10776:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10617:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10617:180:9"
											},
											{
												"body": {
													"nativeSrc": "10847:147:9",
													"nodeType": "YulBlock",
													"src": "10847:147:9",
													"statements": [
														{
															"nativeSrc": "10857:25:9",
															"nodeType": "YulAssignment",
															"src": "10857:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10880:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10880:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10862:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10862:17:9"
																},
																"nativeSrc": "10862:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10862:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10857:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10857:1:9"
																}
															]
														},
														{
															"nativeSrc": "10891:25:9",
															"nodeType": "YulAssignment",
															"src": "10891:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10914:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10914:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10896:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10896:17:9"
																},
																"nativeSrc": "10896:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10896:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10891:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10891:1:9"
																}
															]
														},
														{
															"nativeSrc": "10925:16:9",
															"nodeType": "YulAssignment",
															"src": "10925:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10936:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10936:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10939:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10939:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10932:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10932:3:9"
																},
																"nativeSrc": "10932:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10932:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10925:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10925:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10965:22:9",
																"nodeType": "YulBlock",
																"src": "10965:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10967:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10967:16:9"
																			},
																			"nativeSrc": "10967:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10967:18:9"
																		},
																		"nativeSrc": "10967:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10967:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10957:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10957:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10960:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10960:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10954:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10954:2:9"
																},
																"nativeSrc": "10954:10:9",
																"nodeType": "YulFunctionCall",
																"src": "10954:10:9"
															},
															"nativeSrc": "10951:36:9",
															"nodeType": "YulIf",
															"src": "10951:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10803:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10834:1:9",
														"nodeType": "YulTypedName",
														"src": "10834:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10837:1:9",
														"nodeType": "YulTypedName",
														"src": "10837:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10843:3:9",
														"nodeType": "YulTypedName",
														"src": "10843:3:9",
														"type": ""
													}
												],
												"src": "10803:191:9"
											},
											{
												"body": {
													"nativeSrc": "11106:133:9",
													"nodeType": "YulBlock",
													"src": "11106:133:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11128:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11128:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11136:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11136:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11124:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11124:3:9"
																		},
																		"nativeSrc": "11124:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11124:14:9"
																	},
																	{
																		"hexValue": "45786365656473206461696c79204445582074726164696e67206c696d697420",
																		"kind": "string",
																		"nativeSrc": "11140:34:9",
																		"nodeType": "YulLiteral",
																		"src": "11140:34:9",
																		"type": "",
																		"value": "Exceeds daily DEX trading limit "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11117:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11117:6:9"
																},
																"nativeSrc": "11117:58:9",
																"nodeType": "YulFunctionCall",
																"src": "11117:58:9"
															},
															"nativeSrc": "11117:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "11117:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11196:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11196:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11204:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11204:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11192:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11192:3:9"
																		},
																		"nativeSrc": "11192:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11192:15:9"
																	},
																	{
																		"hexValue": "6f66203130206d696c6c696f6e20746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "11209:22:9",
																		"nodeType": "YulLiteral",
																		"src": "11209:22:9",
																		"type": "",
																		"value": "of 10 million tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11185:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11185:6:9"
																},
																"nativeSrc": "11185:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11185:47:9"
															},
															"nativeSrc": "11185:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11185:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73",
												"nativeSrc": "11000:239:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11098:6:9",
														"nodeType": "YulTypedName",
														"src": "11098:6:9",
														"type": ""
													}
												],
												"src": "11000:239:9"
											},
											{
												"body": {
													"nativeSrc": "11391:220:9",
													"nodeType": "YulBlock",
													"src": "11391:220:9",
													"statements": [
														{
															"nativeSrc": "11401:74:9",
															"nodeType": "YulAssignment",
															"src": "11401:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11467:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11467:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11472:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11472:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11408:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11408:58:9"
																},
																"nativeSrc": "11408:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11408:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11401:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11401:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11573:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11573:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73",
																	"nativeSrc": "11484:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11484:88:9"
																},
																"nativeSrc": "11484:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11484:93:9"
															},
															"nativeSrc": "11484:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11484:93:9"
														},
														{
															"nativeSrc": "11586:19:9",
															"nodeType": "YulAssignment",
															"src": "11586:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11597:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11597:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11602:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11602:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11593:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11593:3:9"
																},
																"nativeSrc": "11593:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11593:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11586:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11586:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11245:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11379:3:9",
														"nodeType": "YulTypedName",
														"src": "11379:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11387:3:9",
														"nodeType": "YulTypedName",
														"src": "11387:3:9",
														"type": ""
													}
												],
												"src": "11245:366:9"
											},
											{
												"body": {
													"nativeSrc": "11788:248:9",
													"nodeType": "YulBlock",
													"src": "11788:248:9",
													"statements": [
														{
															"nativeSrc": "11798:26:9",
															"nodeType": "YulAssignment",
															"src": "11798:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11810:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11810:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11821:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11821:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11806:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11806:3:9"
																},
																"nativeSrc": "11806:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11806:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11798:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11798:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11845:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11845:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11856:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11856:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11841:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11841:3:9"
																		},
																		"nativeSrc": "11841:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11841:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11864:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11864:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11870:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11870:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11860:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11860:3:9"
																		},
																		"nativeSrc": "11860:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11860:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11834:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11834:6:9"
																},
																"nativeSrc": "11834:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11834:47:9"
															},
															"nativeSrc": "11834:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11834:47:9"
														},
														{
															"nativeSrc": "11890:139:9",
															"nodeType": "YulAssignment",
															"src": "11890:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12024:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12024:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11898:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11898:124:9"
																},
																"nativeSrc": "11898:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11898:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11890:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11890:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11617:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11768:9:9",
														"nodeType": "YulTypedName",
														"src": "11768:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11783:4:9",
														"nodeType": "YulTypedName",
														"src": "11783:4:9",
														"type": ""
													}
												],
												"src": "11617:419:9"
											},
											{
												"body": {
													"nativeSrc": "12148:59:9",
													"nodeType": "YulBlock",
													"src": "12148:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12170:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12170:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12178:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12178:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12166:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12166:3:9"
																		},
																		"nativeSrc": "12166:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12166:14:9"
																	},
																	{
																		"hexValue": "436f6f6c646f776e20616374697665",
																		"kind": "string",
																		"nativeSrc": "12182:17:9",
																		"nodeType": "YulLiteral",
																		"src": "12182:17:9",
																		"type": "",
																		"value": "Cooldown active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12159:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12159:6:9"
																},
																"nativeSrc": "12159:41:9",
																"nodeType": "YulFunctionCall",
																"src": "12159:41:9"
															},
															"nativeSrc": "12159:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "12159:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5",
												"nativeSrc": "12042:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12140:6:9",
														"nodeType": "YulTypedName",
														"src": "12140:6:9",
														"type": ""
													}
												],
												"src": "12042:165:9"
											},
											{
												"body": {
													"nativeSrc": "12359:220:9",
													"nodeType": "YulBlock",
													"src": "12359:220:9",
													"statements": [
														{
															"nativeSrc": "12369:74:9",
															"nodeType": "YulAssignment",
															"src": "12369:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12435:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12435:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12440:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12440:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12376:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12376:58:9"
																},
																"nativeSrc": "12376:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12376:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12369:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12369:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12541:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12541:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5",
																	"nativeSrc": "12452:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12452:88:9"
																},
																"nativeSrc": "12452:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12452:93:9"
															},
															"nativeSrc": "12452:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12452:93:9"
														},
														{
															"nativeSrc": "12554:19:9",
															"nodeType": "YulAssignment",
															"src": "12554:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12565:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12565:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12570:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12570:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12561:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12561:3:9"
																},
																"nativeSrc": "12561:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12561:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12554:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12554:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12213:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12347:3:9",
														"nodeType": "YulTypedName",
														"src": "12347:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12355:3:9",
														"nodeType": "YulTypedName",
														"src": "12355:3:9",
														"type": ""
													}
												],
												"src": "12213:366:9"
											},
											{
												"body": {
													"nativeSrc": "12756:248:9",
													"nodeType": "YulBlock",
													"src": "12756:248:9",
													"statements": [
														{
															"nativeSrc": "12766:26:9",
															"nodeType": "YulAssignment",
															"src": "12766:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12778:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12778:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12789:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12789:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12774:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12774:3:9"
																},
																"nativeSrc": "12774:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12774:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12766:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12766:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12813:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12813:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12824:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12824:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12809:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12809:3:9"
																		},
																		"nativeSrc": "12809:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12809:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12832:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12832:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12838:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12838:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12828:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12828:3:9"
																		},
																		"nativeSrc": "12828:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12828:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12802:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12802:6:9"
																},
																"nativeSrc": "12802:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12802:47:9"
															},
															"nativeSrc": "12802:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12802:47:9"
														},
														{
															"nativeSrc": "12858:139:9",
															"nodeType": "YulAssignment",
															"src": "12858:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12992:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12992:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12866:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12866:124:9"
																},
																"nativeSrc": "12866:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12866:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12858:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12858:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12585:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12736:9:9",
														"nodeType": "YulTypedName",
														"src": "12736:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12751:4:9",
														"nodeType": "YulTypedName",
														"src": "12751:4:9",
														"type": ""
													}
												],
												"src": "12585:419:9"
											},
											{
												"body": {
													"nativeSrc": "13116:61:9",
													"nodeType": "YulBlock",
													"src": "13116:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13138:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13138:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13146:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13146:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13134:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13134:3:9"
																		},
																		"nativeSrc": "13134:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13134:14:9"
																	},
																	{
																		"hexValue": "486f6c642074696d65206e6f74206d6574",
																		"kind": "string",
																		"nativeSrc": "13150:19:9",
																		"nodeType": "YulLiteral",
																		"src": "13150:19:9",
																		"type": "",
																		"value": "Hold time not met"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13127:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13127:6:9"
																},
																"nativeSrc": "13127:43:9",
																"nodeType": "YulFunctionCall",
																"src": "13127:43:9"
															},
															"nativeSrc": "13127:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "13127:43:9"
														}
													]
												},
												"name": "store_literal_in_memory_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374",
												"nativeSrc": "13010:167:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13108:6:9",
														"nodeType": "YulTypedName",
														"src": "13108:6:9",
														"type": ""
													}
												],
												"src": "13010:167:9"
											},
											{
												"body": {
													"nativeSrc": "13329:220:9",
													"nodeType": "YulBlock",
													"src": "13329:220:9",
													"statements": [
														{
															"nativeSrc": "13339:74:9",
															"nodeType": "YulAssignment",
															"src": "13339:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13405:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13405:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13410:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13410:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13346:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13346:58:9"
																},
																"nativeSrc": "13346:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13346:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13339:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13339:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13511:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13511:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374",
																	"nativeSrc": "13422:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13422:88:9"
																},
																"nativeSrc": "13422:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13422:93:9"
															},
															"nativeSrc": "13422:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13422:93:9"
														},
														{
															"nativeSrc": "13524:19:9",
															"nodeType": "YulAssignment",
															"src": "13524:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13535:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13535:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13540:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13540:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13531:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13531:3:9"
																},
																"nativeSrc": "13531:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13531:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13524:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13524:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13183:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13317:3:9",
														"nodeType": "YulTypedName",
														"src": "13317:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13325:3:9",
														"nodeType": "YulTypedName",
														"src": "13325:3:9",
														"type": ""
													}
												],
												"src": "13183:366:9"
											},
											{
												"body": {
													"nativeSrc": "13726:248:9",
													"nodeType": "YulBlock",
													"src": "13726:248:9",
													"statements": [
														{
															"nativeSrc": "13736:26:9",
															"nodeType": "YulAssignment",
															"src": "13736:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13748:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13748:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13759:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13759:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13744:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13744:3:9"
																},
																"nativeSrc": "13744:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13744:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13736:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13736:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13783:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13783:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13794:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13794:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13779:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13779:3:9"
																		},
																		"nativeSrc": "13779:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13779:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13802:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13802:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13808:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13808:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13798:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13798:3:9"
																		},
																		"nativeSrc": "13798:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13798:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13772:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13772:6:9"
																},
																"nativeSrc": "13772:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13772:47:9"
															},
															"nativeSrc": "13772:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13772:47:9"
														},
														{
															"nativeSrc": "13828:139:9",
															"nodeType": "YulAssignment",
															"src": "13828:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13962:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13962:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13836:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13836:124:9"
																},
																"nativeSrc": "13836:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13836:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13828:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13828:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13555:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13706:9:9",
														"nodeType": "YulTypedName",
														"src": "13706:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13721:4:9",
														"nodeType": "YulTypedName",
														"src": "13721:4:9",
														"type": ""
													}
												],
												"src": "13555:419:9"
											},
											{
												"body": {
													"nativeSrc": "14086:61:9",
													"nodeType": "YulBlock",
													"src": "14086:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14108:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14108:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14116:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14116:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14104:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14104:3:9"
																		},
																		"nativeSrc": "14104:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14104:14:9"
																	},
																	{
																		"hexValue": "496e76616c696420726563697069656e74",
																		"kind": "string",
																		"nativeSrc": "14120:19:9",
																		"nodeType": "YulLiteral",
																		"src": "14120:19:9",
																		"type": "",
																		"value": "Invalid recipient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14097:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14097:6:9"
																},
																"nativeSrc": "14097:43:9",
																"nodeType": "YulFunctionCall",
																"src": "14097:43:9"
															},
															"nativeSrc": "14097:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "14097:43:9"
														}
													]
												},
												"name": "store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
												"nativeSrc": "13980:167:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14078:6:9",
														"nodeType": "YulTypedName",
														"src": "14078:6:9",
														"type": ""
													}
												],
												"src": "13980:167:9"
											},
											{
												"body": {
													"nativeSrc": "14299:220:9",
													"nodeType": "YulBlock",
													"src": "14299:220:9",
													"statements": [
														{
															"nativeSrc": "14309:74:9",
															"nodeType": "YulAssignment",
															"src": "14309:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14375:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14375:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14380:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14380:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14316:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14316:58:9"
																},
																"nativeSrc": "14316:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14316:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14309:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14309:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14481:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14481:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																	"nativeSrc": "14392:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14392:88:9"
																},
																"nativeSrc": "14392:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14392:93:9"
															},
															"nativeSrc": "14392:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14392:93:9"
														},
														{
															"nativeSrc": "14494:19:9",
															"nodeType": "YulAssignment",
															"src": "14494:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14505:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14505:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14510:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14510:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14501:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14501:3:9"
																},
																"nativeSrc": "14501:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14501:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14494:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14494:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14153:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14287:3:9",
														"nodeType": "YulTypedName",
														"src": "14287:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14295:3:9",
														"nodeType": "YulTypedName",
														"src": "14295:3:9",
														"type": ""
													}
												],
												"src": "14153:366:9"
											},
											{
												"body": {
													"nativeSrc": "14696:248:9",
													"nodeType": "YulBlock",
													"src": "14696:248:9",
													"statements": [
														{
															"nativeSrc": "14706:26:9",
															"nodeType": "YulAssignment",
															"src": "14706:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14718:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14718:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14729:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14729:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14714:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14714:3:9"
																},
																"nativeSrc": "14714:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14714:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14706:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14706:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14753:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14753:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14764:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14764:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14749:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14749:3:9"
																		},
																		"nativeSrc": "14749:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14749:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14772:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14772:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14778:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14778:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14768:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14768:3:9"
																		},
																		"nativeSrc": "14768:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14768:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14742:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14742:6:9"
																},
																"nativeSrc": "14742:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14742:47:9"
															},
															"nativeSrc": "14742:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14742:47:9"
														},
														{
															"nativeSrc": "14798:139:9",
															"nodeType": "YulAssignment",
															"src": "14798:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14932:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14932:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14806:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14806:124:9"
																},
																"nativeSrc": "14806:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14806:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14798:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14798:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14525:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14676:9:9",
														"nodeType": "YulTypedName",
														"src": "14676:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14691:4:9",
														"nodeType": "YulTypedName",
														"src": "14691:4:9",
														"type": ""
													}
												],
												"src": "14525:419:9"
											},
											{
												"body": {
													"nativeSrc": "14978:152:9",
													"nodeType": "YulBlock",
													"src": "14978:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14995:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14995:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14998:77:9",
																		"nodeType": "YulLiteral",
																		"src": "14998:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14988:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14988:6:9"
																},
																"nativeSrc": "14988:88:9",
																"nodeType": "YulFunctionCall",
																"src": "14988:88:9"
															},
															"nativeSrc": "14988:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "14988:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15092:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15092:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15095:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15095:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15085:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15085:6:9"
																},
																"nativeSrc": "15085:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15085:15:9"
															},
															"nativeSrc": "15085:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "15085:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15116:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15116:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15119:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15119:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15109:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15109:6:9"
																},
																"nativeSrc": "15109:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15109:15:9"
															},
															"nativeSrc": "15109:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "15109:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "14950:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14950:180:9"
											},
											{
												"body": {
													"nativeSrc": "15242:75:9",
													"nodeType": "YulBlock",
													"src": "15242:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15264:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15264:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15272:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15272:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15260:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15260:3:9"
																		},
																		"nativeSrc": "15260:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15260:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "15276:33:9",
																		"nodeType": "YulLiteral",
																		"src": "15276:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15253:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15253:6:9"
																},
																"nativeSrc": "15253:57:9",
																"nodeType": "YulFunctionCall",
																"src": "15253:57:9"
															},
															"nativeSrc": "15253:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "15253:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "15136:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15234:6:9",
														"nodeType": "YulTypedName",
														"src": "15234:6:9",
														"type": ""
													}
												],
												"src": "15136:181:9"
											},
											{
												"body": {
													"nativeSrc": "15469:220:9",
													"nodeType": "YulBlock",
													"src": "15469:220:9",
													"statements": [
														{
															"nativeSrc": "15479:74:9",
															"nodeType": "YulAssignment",
															"src": "15479:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15545:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15545:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15550:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15550:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15486:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15486:58:9"
																},
																"nativeSrc": "15486:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15486:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15479:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15479:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15651:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15651:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "15562:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15562:88:9"
																},
																"nativeSrc": "15562:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15562:93:9"
															},
															"nativeSrc": "15562:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15562:93:9"
														},
														{
															"nativeSrc": "15664:19:9",
															"nodeType": "YulAssignment",
															"src": "15664:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15675:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15675:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15680:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15680:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15671:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15671:3:9"
																},
																"nativeSrc": "15671:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15671:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15664:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15664:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15323:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15457:3:9",
														"nodeType": "YulTypedName",
														"src": "15457:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15465:3:9",
														"nodeType": "YulTypedName",
														"src": "15465:3:9",
														"type": ""
													}
												],
												"src": "15323:366:9"
											},
											{
												"body": {
													"nativeSrc": "15866:248:9",
													"nodeType": "YulBlock",
													"src": "15866:248:9",
													"statements": [
														{
															"nativeSrc": "15876:26:9",
															"nodeType": "YulAssignment",
															"src": "15876:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15888:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15888:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15899:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15899:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15884:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15884:3:9"
																},
																"nativeSrc": "15884:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15884:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15876:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15876:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15923:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15923:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15934:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15934:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15919:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15919:3:9"
																		},
																		"nativeSrc": "15919:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15919:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15942:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15942:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15948:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15948:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15938:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15938:3:9"
																		},
																		"nativeSrc": "15938:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15938:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15912:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15912:6:9"
																},
																"nativeSrc": "15912:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15912:47:9"
															},
															"nativeSrc": "15912:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15912:47:9"
														},
														{
															"nativeSrc": "15968:139:9",
															"nodeType": "YulAssignment",
															"src": "15968:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16102:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16102:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15976:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15976:124:9"
																},
																"nativeSrc": "15976:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15976:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15968:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15968:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15695:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15846:9:9",
														"nodeType": "YulTypedName",
														"src": "15846:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15861:4:9",
														"nodeType": "YulTypedName",
														"src": "15861:4:9",
														"type": ""
													}
												],
												"src": "15695:419:9"
											},
											{
												"body": {
													"nativeSrc": "16274:288:9",
													"nodeType": "YulBlock",
													"src": "16274:288:9",
													"statements": [
														{
															"nativeSrc": "16284:26:9",
															"nodeType": "YulAssignment",
															"src": "16284:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16296:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16296:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16307:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16307:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16292:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16292:3:9"
																},
																"nativeSrc": "16292:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16292:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16284:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16284:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16364:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16364:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16377:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16377:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16388:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16388:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16373:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16373:3:9"
																		},
																		"nativeSrc": "16373:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16373:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16320:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "16320:43:9"
																},
																"nativeSrc": "16320:71:9",
																"nodeType": "YulFunctionCall",
																"src": "16320:71:9"
															},
															"nativeSrc": "16320:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "16320:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16445:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16445:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16458:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16458:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16469:2:9",
																				"nodeType": "YulLiteral",
																				"src": "16469:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16454:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16454:3:9"
																		},
																		"nativeSrc": "16454:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16454:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16401:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "16401:43:9"
																},
																"nativeSrc": "16401:72:9",
																"nodeType": "YulFunctionCall",
																"src": "16401:72:9"
															},
															"nativeSrc": "16401:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "16401:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16527:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16527:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16540:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16540:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16551:2:9",
																				"nodeType": "YulLiteral",
																				"src": "16551:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16536:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16536:3:9"
																		},
																		"nativeSrc": "16536:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16536:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16483:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "16483:43:9"
																},
																"nativeSrc": "16483:72:9",
																"nodeType": "YulFunctionCall",
																"src": "16483:72:9"
															},
															"nativeSrc": "16483:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "16483:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16120:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16230:9:9",
														"nodeType": "YulTypedName",
														"src": "16230:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16242:6:9",
														"nodeType": "YulTypedName",
														"src": "16242:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16250:6:9",
														"nodeType": "YulTypedName",
														"src": "16250:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16258:6:9",
														"nodeType": "YulTypedName",
														"src": "16258:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16269:4:9",
														"nodeType": "YulTypedName",
														"src": "16269:4:9",
														"type": ""
													}
												],
												"src": "16120:442:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds daily DEX trading limit \")\n\n        mstore(add(memPtr, 32), \"of 10 million tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cooldown active\")\n\n    }\n\n    function abi_encode_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374(memPtr) {\n\n        mstore(add(memPtr, 0), \"Hold time not met\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid recipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061020f575f3560e01c80636072e6a81161012357806395d89b41116100ab578063dd62ed3e1161007a578063dd62ed3e14610625578063e26ffe0814610655578063f2fde38b14610685578063fc1b3113146106a1578063fe575a87146106bf5761020f565b806395d89b411461058b578063a9059cbb146105a9578063ab09413d146105d9578063dd386477146105f55761020f565b8063715018a6116100f2578063715018a6146104fb5780638b6a8fbf146105055780638da5cb5b1461053557806390389b83146105535780639155e0831461056f5761020f565b80636072e6a814610475578063611274c51461049157806368f16293146104ad57806370a08231146104cb5761020f565b806323b872dd116101a6578063330671ad11610175578063330671ad146103d15780633af32abf146103ef5780635112f2971461041f578063566e59931461043b5780635f87f0eb146104595761020f565b806323b872dd14610335578063283af01914610365578063313ce5671461039557806332cb6b0c146103b35761020f565b80630d392cd9116101e25780630d392cd9146102ad578063158ef93e146102c957806318160ddd146102e75780632357edb3146103055761020f565b8063058c72fc1461021357806306fdde031461022f578063095ea7b31461024d5780630d2d8a311461027d575b5f5ffd5b61022d60048036038101906102289190612949565b6106ef565b005b610237610742565b60405161024491906129f7565b60405180910390f35b61026760048036038101906102629190612a71565b6107d2565b6040516102749190612ac9565b60405180910390f35b61029760048036038101906102929190612ae2565b6107f4565b6040516102a49190612b1c565b60405180910390f35b6102c760048036038101906102c29190612b5f565b610809565b005b6102d16108b7565b6040516102de9190612ac9565b60405180910390f35b6102ef6108c9565b6040516102fc9190612b1c565b60405180910390f35b61031f600480360381019061031a9190612ae2565b6108d2565b60405161032c9190612ac9565b60405180910390f35b61034f600480360381019061034a9190612b9d565b6108ef565b60405161035c9190612ac9565b60405180910390f35b61037f600480360381019061037a9190612ae2565b611088565b60405161038c9190612b1c565b60405180910390f35b61039d61109d565b6040516103aa9190612c08565b60405180910390f35b6103bb6110a5565b6040516103c89190612b1c565b60405180910390f35b6103d96110b5565b6040516103e69190612b1c565b60405180910390f35b61040960048036038101906104049190612ae2565b6110bb565b6040516104169190612ac9565b60405180910390f35b61043960048036038101906104349190612b5f565b6110d8565b005b610443611186565b6040516104509190612b1c565b60405180910390f35b610473600480360381019061046e9190612c82565b611195565b005b61048f600480360381019061048a9190612c82565b6112b0565b005b6104ab60048036038101906104a69190612c82565b6113cb565b005b6104b56114e6565b6040516104c29190612b1c565b60405180910390f35b6104e560048036038101906104e09190612ae2565b6114ec565b6040516104f29190612b1c565b60405180910390f35b610503611531565b005b61051f600480360381019061051a9190612ae2565b611544565b60405161052c9190612b1c565b60405180910390f35b61053d611559565b60405161054a9190612cee565b60405180910390f35b61056d60048036038101906105689190612b5f565b611581565b005b61058960048036038101906105849190612b5f565b61162f565b005b6105936116dd565b6040516105a091906129f7565b60405180910390f35b6105c360048036038101906105be9190612a71565b61176d565b6040516105d09190612ac9565b60405180910390f35b6105f360048036038101906105ee9190612c82565b611f04565b005b61060f600480360381019061060a9190612ae2565b61201f565b60405161061c9190612ac9565b60405180910390f35b61063f600480360381019061063a9190612d07565b61203c565b60405161064c9190612b1c565b60405180910390f35b61066f600480360381019061066a9190612ae2565b6120be565b60405161067c9190612b1c565b60405180910390f35b61069f600480360381019061069a9190612ae2565b6120d3565b005b6106a9612157565b6040516106b69190612b1c565b60405180910390f35b6106d960048036038101906106d49190612ae2565b612166565b6040516106e69190612ac9565b60405180910390f35b6106f7612183565b8160088190555080600d819055507f2c406ebfcb3eb7487c720dd90f3be04648d6606bad1837fd5363cd02f3dd1ef68282604051610736929190612d45565b60405180910390a15050565b60606003805461075190612d99565b80601f016020809104026020016040519081016040528092919081815260200182805461077d90612d99565b80156107c85780601f1061079f576101008083540402835291602001916107c8565b820191905f5260205f20905b8154815290600101906020018083116107ab57829003601f168201915b5050505050905090565b5f5f6107dc61220a565b90506107e9818585612211565b600191505092915050565b6009602052805f5260405f205f915090505481565b610811612183565b80600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d826040516108ab9190612ac9565b60405180910390a25050565b60075f9054906101000a900460ff1681565b5f600254905090565b600e602052805f5260405f205f915054906101000a900460ff1681565b5f838383600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156109915750600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b6109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c790612e13565b60405180910390fd5b600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff168015610a595750610a29611559565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b8015610aac5750600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15610cb8576201518060115f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610afd9190612e5e565b421115610b89575f60105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260115f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b6a52b7d2dcc80cd2e4000000610be58260105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b1115610c26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1d90612f01565b60405180910390fd5b610c768160105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b60105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015610d565750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015610da95750600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015610dfc5750600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15610f6f57610e53600d5460095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b421015610e95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8c90612f69565b60405180910390fd5b5f600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414610f6e57610f2b600854600a5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b421015610f6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6490612fd1565b60405180910390fd5b5b5b610f77612238565b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdc90613039565b60405180910390fd5b42600a5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260095f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611074878787612287565b935061107e6122b5565b5050509392505050565b600a602052805f5260405f205f915090505481565b5f6012905090565b6b204fce5e3e2502611000000081565b60085481565b600c602052805f5260405f205f915054906101000a900460ff1681565b6110e0612183565b80600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f087ae58f1cb2baf6f5ac7d2f6391a7f26d2e2951312c6eab3761fc754d202de78260405161117a9190612ac9565b60405180910390a25050565b6a52b7d2dcc80cd2e400000081565b61119d612183565b5f5f90505b838390508110156112aa5781600f5f8686858181106111c4576111c3613057565b5b90506020020160208101906111d99190612ae2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555083838281811061123b5761123a613057565b5b90506020020160208101906112509190612ae2565b73ffffffffffffffffffffffffffffffffffffffff167f8295e5e995acec8dc9c9248f8db461aeba392bc756bb3db82e642667cc464ae6836040516112959190612ac9565b60405180910390a280806001019150506111a2565b50505050565b6112b8612183565b5f5f90505b838390508110156113c55781600b5f8686858181106112df576112de613057565b5b90506020020160208101906112f49190612ae2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555083838281811061135657611355613057565b5b905060200201602081019061136b9190612ae2565b73ffffffffffffffffffffffffffffffffffffffff167f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac836040516113b09190612ac9565b60405180910390a280806001019150506112bd565b50505050565b6113d3612183565b5f5f90505b838390508110156114e05781600c5f8686858181106113fa576113f9613057565b5b905060200201602081019061140f9190612ae2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555083838281811061147157611470613057565b5b90506020020160208101906114869190612ae2565b73ffffffffffffffffffffffffffffffffffffffff167ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d836040516114cb9190612ac9565b60405180910390a280806001019150506113d8565b50505050565b600d5481565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b611539612183565b6115425f6122bf565b565b6010602052805f5260405f205f915090505481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611589612183565b80600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f8295e5e995acec8dc9c9248f8db461aeba392bc756bb3db82e642667cc464ae6826040516116239190612ac9565b60405180910390a25050565b611637612183565b80600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac826040516116d19190612ac9565b60405180910390a25050565b6060600480546116ec90612d99565b80601f016020809104026020016040519081016040528092919081815260200182805461171890612d99565b80156117635780601f1061173a57610100808354040283529160200191611763565b820191905f5260205f20905b81548152906001019060200180831161174657829003601f168201915b5050505050905090565b5f338383600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615801561180f5750600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b61184e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184590612e13565b60405180910390fd5b600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680156118d757506118a7611559565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b801561192a5750600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15611b36576201518060115f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461197b9190612e5e565b421115611a07575f60105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260115f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b6a52b7d2dcc80cd2e4000000611a638260105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b1115611aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9b90612f01565b60405180910390fd5b611af48160105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b60105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015611bd45750600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015611c275750600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015611c7a5750600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15611ded57611cd1600d5460095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b421015611d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0a90612f69565b60405180910390fd5b5f600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414611dec57611da9600854600a5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461222390919063ffffffff16565b421015611deb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de290612fd1565b60405180910390fd5b5b5b611df5612238565b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603611e63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5a90613039565b60405180910390fd5b42600a5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611ef18686612382565b9350611efb6122b5565b50505092915050565b611f0c612183565b5f5f90505b838390508110156120195781600e5f868685818110611f3357611f32613057565b5b9050602002016020810190611f489190612ae2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550838382818110611faa57611fa9613057565b5b9050602002016020810190611fbf9190612ae2565b73ffffffffffffffffffffffffffffffffffffffff167f087ae58f1cb2baf6f5ac7d2f6391a7f26d2e2951312c6eab3761fc754d202de7836040516120049190612ac9565b60405180910390a28080600101915050611f11565b50505050565b600f602052805f5260405f205f915054906101000a900460ff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6011602052805f5260405f205f915090505481565b6120db612183565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361214b575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016121429190612cee565b60405180910390fd5b612154816122bf565b50565b6a084595161401484a00000081565b600b602052805f5260405f205f915054906101000a900460ff1681565b61218b61220a565b73ffffffffffffffffffffffffffffffffffffffff166121a9611559565b73ffffffffffffffffffffffffffffffffffffffff1614612208576121cc61220a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016121ff9190612cee565b60405180910390fd5b565b5f33905090565b61221e83838360016123a4565b505050565b5f81836122309190612e5e565b905092915050565b60026006540361227d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612274906130ce565b60405180910390fd5b6002600681905550565b5f5f61229161220a565b905061229e858285612573565b6122a9858585612605565b60019150509392505050565b6001600681905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f61238c61220a565b9050612399818585612605565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612414575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161240b9190612cee565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612484575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161247b9190612cee565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561256d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516125649190612b1c565b60405180910390a35b50505050565b5f61257e848461203c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146125ff57818110156125f0578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016125e7939291906130ec565b60405180910390fd5b6125fe84848484035f6123a4565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612675575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161266c9190612cee565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036126e5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016126dc9190612cee565b60405180910390fd5b6126f08383836126f5565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612745578060025f8282546127399190612e5e565b92505081905550612813565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156127ce578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016127c5939291906130ec565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361285a578060025f82825403925050819055506128a4565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516129019190612b1c565b60405180910390a3505050565b5f5ffd5b5f5ffd5b5f819050919050565b61292881612916565b8114612932575f5ffd5b50565b5f813590506129438161291f565b92915050565b5f5f6040838503121561295f5761295e61290e565b5b5f61296c85828601612935565b925050602061297d85828601612935565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6129c982612987565b6129d38185612991565b93506129e38185602086016129a1565b6129ec816129af565b840191505092915050565b5f6020820190508181035f830152612a0f81846129bf565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612a4082612a17565b9050919050565b612a5081612a36565b8114612a5a575f5ffd5b50565b5f81359050612a6b81612a47565b92915050565b5f5f60408385031215612a8757612a8661290e565b5b5f612a9485828601612a5d565b9250506020612aa585828601612935565b9150509250929050565b5f8115159050919050565b612ac381612aaf565b82525050565b5f602082019050612adc5f830184612aba565b92915050565b5f60208284031215612af757612af661290e565b5b5f612b0484828501612a5d565b91505092915050565b612b1681612916565b82525050565b5f602082019050612b2f5f830184612b0d565b92915050565b612b3e81612aaf565b8114612b48575f5ffd5b50565b5f81359050612b5981612b35565b92915050565b5f5f60408385031215612b7557612b7461290e565b5b5f612b8285828601612a5d565b9250506020612b9385828601612b4b565b9150509250929050565b5f5f5f60608486031215612bb457612bb361290e565b5b5f612bc186828701612a5d565b9350506020612bd286828701612a5d565b9250506040612be386828701612935565b9150509250925092565b5f60ff82169050919050565b612c0281612bed565b82525050565b5f602082019050612c1b5f830184612bf9565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112612c4257612c41612c21565b5b8235905067ffffffffffffffff811115612c5f57612c5e612c25565b5b602083019150836020820283011115612c7b57612c7a612c29565b5b9250929050565b5f5f5f60408486031215612c9957612c9861290e565b5b5f84013567ffffffffffffffff811115612cb657612cb5612912565b5b612cc286828701612c2d565b93509350506020612cd586828701612b4b565b9150509250925092565b612ce881612a36565b82525050565b5f602082019050612d015f830184612cdf565b92915050565b5f5f60408385031215612d1d57612d1c61290e565b5b5f612d2a85828601612a5d565b9250506020612d3b85828601612a5d565b9150509250929050565b5f604082019050612d585f830185612b0d565b612d656020830184612b0d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612db057607f821691505b602082108103612dc357612dc2612d6c565b5b50919050565b7f4164647265737320697320626c61636b6c6973746564000000000000000000005f82015250565b5f612dfd601683612991565b9150612e0882612dc9565b602082019050919050565b5f6020820190508181035f830152612e2a81612df1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612e6882612916565b9150612e7383612916565b9250828201905080821115612e8b57612e8a612e31565b5b92915050565b7f45786365656473206461696c79204445582074726164696e67206c696d6974205f8201527f6f66203130206d696c6c696f6e20746f6b656e73000000000000000000000000602082015250565b5f612eeb603483612991565b9150612ef682612e91565b604082019050919050565b5f6020820190508181035f830152612f1881612edf565b9050919050565b7f436f6f6c646f776e2061637469766500000000000000000000000000000000005f82015250565b5f612f53600f83612991565b9150612f5e82612f1f565b602082019050919050565b5f6020820190508181035f830152612f8081612f47565b9050919050565b7f486f6c642074696d65206e6f74206d65740000000000000000000000000000005f82015250565b5f612fbb601183612991565b9150612fc682612f87565b602082019050919050565b5f6020820190508181035f830152612fe881612faf565b9050919050565b7f496e76616c696420726563697069656e740000000000000000000000000000005f82015250565b5f613023601183612991565b915061302e82612fef565b602082019050919050565b5f6020820190508181035f83015261305081613017565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6130b8601f83612991565b91506130c382613084565b602082019050919050565b5f6020820190508181035f8301526130e5816130ac565b9050919050565b5f6060820190506130ff5f830186612cdf565b61310c6020830185612b0d565b6131196040830184612b0d565b94935050505056fea26469706673582212202f0b8cf1ef6feb34436b10e5f0edd47effbd5b3cee9b9551498a3f1fb502b1fd64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6072E6A8 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xE26FFE08 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xFC1B3113 EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x6BF JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xAB09413D EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xDD386477 EQ PUSH2 0x5F5 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x8B6A8FBF EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0x90389B83 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x9155E083 EQ PUSH2 0x56F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x6072E6A8 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x611274C5 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x68F16293 EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4CB JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x330671AD GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x330671AD EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x5112F297 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x566E5993 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x5F87F0EB EQ PUSH2 0x459 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x283AF019 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x3B3 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xD392CD9 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xD392CD9 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x2357EDB3 EQ PUSH2 0x305 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x58C72FC EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xD2D8A31 EQ PUSH2 0x27D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x237 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x2A71 JUMP JUMPDEST PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x2B9D JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39D PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x409 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x10D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x443 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x473 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x2C82 JUMP JUMPDEST PUSH2 0x1195 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x2C82 JUMP JUMPDEST PUSH2 0x12B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x2C82 JUMP JUMPDEST PUSH2 0x13CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B5 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH2 0x1531 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53D PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x568 SWAP2 SWAP1 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x1581 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x589 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x162F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x593 PUSH2 0x16DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0x2A71 JUMP JUMPDEST PUSH2 0x176D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x2C82 JUMP JUMPDEST PUSH2 0x1F04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x201F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x20D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A9 PUSH2 0x2157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F7 PUSH2 0x2183 JUMP JUMPDEST DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH32 0x2C406EBFCB3EB7487C720DD90F3BE04648D6606BAD1837FD5363CD02F3DD1EF6 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x736 SWAP3 SWAP2 SWAP1 PUSH2 0x2D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x751 SWAP1 PUSH2 0x2D99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77D SWAP1 PUSH2 0x2D99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7DC PUSH2 0x220A JUMP JUMPDEST SWAP1 POP PUSH2 0x7E9 DUP2 DUP6 DUP6 PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x811 PUSH2 0x2183 JUMP JUMPDEST DUP1 PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D DUP3 PUSH1 0x40 MLOAD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP4 DUP4 DUP4 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x991 JUMPI POP PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C7 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xA59 JUMPI POP PUSH2 0xA29 PUSH2 0x1559 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xAAC JUMPI POP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xCB8 JUMPI PUSH3 0x15180 PUSH1 0x11 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xB89 JUMPI PUSH0 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x11 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xBE5 DUP3 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP1 PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC76 DUP2 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xD56 JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xDA9 JUMPI POP PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xDFC JUMPI POP PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xF6F JUMPI PUSH2 0xE53 PUSH1 0xD SLOAD PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8C SWAP1 PUSH2 0x2F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0xF6E JUMPI PUSH2 0xF2B PUSH1 0x8 SLOAD PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xF6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF64 SWAP1 PUSH2 0x2FD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH2 0xF77 PUSH2 0x2238 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDC SWAP1 PUSH2 0x3039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xA PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1074 DUP8 DUP8 DUP8 PUSH2 0x2287 JUMP JUMPDEST SWAP4 POP PUSH2 0x107E PUSH2 0x22B5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH12 0x204FCE5E3E25026110000000 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x10E0 PUSH2 0x2183 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87AE58F1CB2BAF6F5AC7D2F6391A7F26D2E2951312C6EAB3761FC754D202DE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x117A SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 JUMP JUMPDEST PUSH2 0x119D PUSH2 0x2183 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x12AA JUMPI DUP2 PUSH1 0xF PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x11C4 JUMPI PUSH2 0x11C3 PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x123B JUMPI PUSH2 0x123A PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1250 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8295E5E995ACEC8DC9C9248F8DB461AEBA392BC756BB3DB82E642667CC464AE6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x11A2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x12B8 PUSH2 0x2183 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x13C5 JUMPI DUP2 PUSH1 0xB PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x12DF JUMPI PUSH2 0x12DE PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x1356 JUMPI PUSH2 0x1355 PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x136B SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC DUP4 PUSH1 0x40 MLOAD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x12BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x13D3 PUSH2 0x2183 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x14E0 JUMPI DUP2 PUSH1 0xC PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x13FA JUMPI PUSH2 0x13F9 PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x140F SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x1471 JUMPI PUSH2 0x1470 PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1486 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D DUP4 PUSH1 0x40 MLOAD PUSH2 0x14CB SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x13D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1539 PUSH2 0x2183 JUMP JUMPDEST PUSH2 0x1542 PUSH0 PUSH2 0x22BF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1589 PUSH2 0x2183 JUMP JUMPDEST DUP1 PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8295E5E995ACEC8DC9C9248F8DB461AEBA392BC756BB3DB82E642667CC464AE6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1623 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1637 PUSH2 0x2183 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC DUP3 PUSH1 0x40 MLOAD PUSH2 0x16D1 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x16EC SWAP1 PUSH2 0x2D99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1718 SWAP1 PUSH2 0x2D99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1763 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x173A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1763 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1746 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER DUP4 DUP4 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x180F JUMPI POP PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x184E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1845 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x18D7 JUMPI POP PUSH2 0x18A7 PUSH2 0x1559 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x192A JUMPI POP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1B36 JUMPI PUSH3 0x15180 PUSH1 0x11 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x197B SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x1A07 JUMPI PUSH0 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x11 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x1A63 DUP3 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x1AA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9B SWAP1 PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AF4 DUP2 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1BD4 JUMPI POP PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1C27 JUMPI POP PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1C7A JUMPI POP PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1DED JUMPI PUSH2 0x1CD1 PUSH1 0xD SLOAD PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1D13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0A SWAP1 PUSH2 0x2F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x1DEC JUMPI PUSH2 0x1DA9 PUSH1 0x8 SLOAD PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2223 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1DEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE2 SWAP1 PUSH2 0x2FD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1DF5 PUSH2 0x2238 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E5A SWAP1 PUSH2 0x3039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xA PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1EF1 DUP7 DUP7 PUSH2 0x2382 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EFB PUSH2 0x22B5 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F0C PUSH2 0x2183 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x2019 JUMPI DUP2 PUSH1 0xE PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x1F33 JUMPI PUSH2 0x1F32 PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F48 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x3057 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1FBF SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87AE58F1CB2BAF6F5AC7D2F6391A7F26D2E2951312C6EAB3761FC754D202DE7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2004 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1F11 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20DB PUSH2 0x2183 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x214B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2142 SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2154 DUP2 PUSH2 0x22BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x218B PUSH2 0x220A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21A9 PUSH2 0x1559 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2208 JUMPI PUSH2 0x21CC PUSH2 0x220A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21FF SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x221E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x23A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x2230 SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x227D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2274 SWAP1 PUSH2 0x30CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2291 PUSH2 0x220A JUMP JUMPDEST SWAP1 POP PUSH2 0x229E DUP6 DUP3 DUP6 PUSH2 0x2573 JUMP JUMPDEST PUSH2 0x22A9 DUP6 DUP6 DUP6 PUSH2 0x2605 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x238C PUSH2 0x220A JUMP JUMPDEST SWAP1 POP PUSH2 0x2399 DUP2 DUP6 DUP6 PUSH2 0x2605 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2414 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x240B SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2484 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x247B SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x256D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2564 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x257E DUP5 DUP5 PUSH2 0x203C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x25FF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x25F0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25FE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2675 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x266C SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26DC SWAP2 SWAP1 PUSH2 0x2CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26F0 DUP4 DUP4 DUP4 PUSH2 0x26F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2745 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2739 SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2813 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x27CE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27C5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x285A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x28A4 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2901 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2928 DUP2 PUSH2 0x2916 JUMP JUMPDEST DUP2 EQ PUSH2 0x2932 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2943 DUP2 PUSH2 0x291F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x295F JUMPI PUSH2 0x295E PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x296C DUP6 DUP3 DUP7 ADD PUSH2 0x2935 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x297D DUP6 DUP3 DUP7 ADD PUSH2 0x2935 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29C9 DUP3 PUSH2 0x2987 JUMP JUMPDEST PUSH2 0x29D3 DUP2 DUP6 PUSH2 0x2991 JUMP JUMPDEST SWAP4 POP PUSH2 0x29E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29A1 JUMP JUMPDEST PUSH2 0x29EC DUP2 PUSH2 0x29AF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A0F DUP2 DUP5 PUSH2 0x29BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A40 DUP3 PUSH2 0x2A17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A50 DUP2 PUSH2 0x2A36 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A5A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A6B DUP2 PUSH2 0x2A47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A87 JUMPI PUSH2 0x2A86 PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A94 DUP6 DUP3 DUP7 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AA5 DUP6 DUP3 DUP7 ADD PUSH2 0x2935 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC3 DUP2 PUSH2 0x2AAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2ADC PUSH0 DUP4 ADD DUP5 PUSH2 0x2ABA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF7 JUMPI PUSH2 0x2AF6 PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B04 DUP5 DUP3 DUP6 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B16 DUP2 PUSH2 0x2916 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B2F PUSH0 DUP4 ADD DUP5 PUSH2 0x2B0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B3E DUP2 PUSH2 0x2AAF JUMP JUMPDEST DUP2 EQ PUSH2 0x2B48 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B59 DUP2 PUSH2 0x2B35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B75 JUMPI PUSH2 0x2B74 PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B82 DUP6 DUP3 DUP7 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B93 DUP6 DUP3 DUP7 ADD PUSH2 0x2B4B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2BB4 JUMPI PUSH2 0x2BB3 PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BC1 DUP7 DUP3 DUP8 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2BD2 DUP7 DUP3 DUP8 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2BE3 DUP7 DUP3 DUP8 ADD PUSH2 0x2935 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C02 DUP2 PUSH2 0x2BED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C1B PUSH0 DUP4 ADD DUP5 PUSH2 0x2BF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2C42 JUMPI PUSH2 0x2C41 PUSH2 0x2C21 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C5F JUMPI PUSH2 0x2C5E PUSH2 0x2C25 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2C7B JUMPI PUSH2 0x2C7A PUSH2 0x2C29 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C99 JUMPI PUSH2 0x2C98 PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB6 JUMPI PUSH2 0x2CB5 PUSH2 0x2912 JUMP JUMPDEST JUMPDEST PUSH2 0x2CC2 DUP7 DUP3 DUP8 ADD PUSH2 0x2C2D JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x2CD5 DUP7 DUP3 DUP8 ADD PUSH2 0x2B4B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2CE8 DUP2 PUSH2 0x2A36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D01 PUSH0 DUP4 ADD DUP5 PUSH2 0x2CDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D1D JUMPI PUSH2 0x2D1C PUSH2 0x290E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D2A DUP6 DUP3 DUP7 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D3B DUP6 DUP3 DUP7 ADD PUSH2 0x2A5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D58 PUSH0 DUP4 ADD DUP6 PUSH2 0x2B0D JUMP JUMPDEST PUSH2 0x2D65 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B0D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2DB0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2DC3 JUMPI PUSH2 0x2DC2 PUSH2 0x2D6C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320697320626C61636B6C697374656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DFD PUSH1 0x16 DUP4 PUSH2 0x2991 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E08 DUP3 PUSH2 0x2DC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E2A DUP2 PUSH2 0x2DF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2E68 DUP3 PUSH2 0x2916 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E73 DUP4 PUSH2 0x2916 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E8B JUMPI PUSH2 0x2E8A PUSH2 0x2E31 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206461696C79204445582074726164696E67206C696D697420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F66203130206D696C6C696F6E20746F6B656E73000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EEB PUSH1 0x34 DUP4 PUSH2 0x2991 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF6 DUP3 PUSH2 0x2E91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F18 DUP2 PUSH2 0x2EDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E206163746976650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F53 PUSH1 0xF DUP4 PUSH2 0x2991 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F5E DUP3 PUSH2 0x2F1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F80 DUP2 PUSH2 0x2F47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x486F6C642074696D65206E6F74206D6574000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FBB PUSH1 0x11 DUP4 PUSH2 0x2991 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC6 DUP3 PUSH2 0x2F87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FE8 DUP2 PUSH2 0x2FAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3023 PUSH1 0x11 DUP4 PUSH2 0x2991 JUMP JUMPDEST SWAP2 POP PUSH2 0x302E DUP3 PUSH2 0x2FEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3050 DUP2 PUSH2 0x3017 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x30B8 PUSH1 0x1F DUP4 PUSH2 0x2991 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C3 DUP3 PUSH2 0x3084 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30E5 DUP2 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x30FF PUSH0 DUP4 ADD DUP7 PUSH2 0x2CDF JUMP JUMPDEST PUSH2 0x310C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2B0D JUMP JUMPDEST PUSH2 0x3119 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B0D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F SIGNEXTEND DUP13 CALL 0xEF PUSH16 0xEB34436B10E5F0EDD47EFFBD5B3CEE9B SWAP6 MLOAD BLOBHASH DUP11 EXTCODEHASH 0x1F 0xB5 MUL 0xB1 REVERT PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "297:6503:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5914:299;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;808:51:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5692:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;686:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1116:41:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4122:414;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;866:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;413:60:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;761:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;986:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4581:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;480:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:261;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6243:273;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6524;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1046:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1246:52:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4742:159:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5511:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3710:404:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4944:251;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1164:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1305:53:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;580:65:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;926:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5914:299;1531:13:0;:11;:13::i;:::-;6051:9:8::1;6037:11;:23;;;;6090:9;6071:16;:28;;;;6125:80;6161:9;6185;6125:80;;;;;;;:::i;:::-;;;;;;;;5914:299:::0;;:::o;1779:89:3:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;808:51:8:-;;;;;;;;;;;;;;;;;:::o;5692:173::-;1531:13:0;:11;:13::i;:::-;5802:6:8::1;5777:13;:22;5791:7;5777:22;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;5841:7;5824:33;;;5850:6;5824:33;;;;;;:::i;:::-;;;;;;;;5692:173:::0;;:::o;686:23::-;;;;;;;;;;;;;:::o;2849:97:3:-;2901:7;2927:12;;2920:19;;2849:97;:::o;1116:41:8:-;;;;;;;;;;;;;;;;;;;;;;:::o;4122:414::-;4306:4;4248;4254:2;4258:6;2412:13;:19;2426:4;2412:19;;;;;;;;;;;;;;;;;;;;;;;;;2411:20;:42;;;;;2436:13;:17;2450:2;2436:17;;;;;;;;;;;;;;;;;;;;;;;;;2435:18;2411:42;2403:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2585:9;:15;2595:4;2585:15;;;;;;;;;;;;;;;;;;;;;;;;;:40;;;;;2618:7;:5;:7::i;:::-;2604:21;;:10;:21;;;;2585:40;:70;;;;;2630:13;:25;2644:10;2630:25;;;;;;;;;;;;;;;;;;;;;;;;;2629:26;2585:70;2581:677;;;2806:6;2773:18;:30;2792:10;2773:30;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;2755:15;:57;2751:186;;;2861:1;2829:17;:29;2847:10;2829:29;;;;;;;;;;;;;;;:33;;;;2910:15;2877:18;:30;2896:10;2877:30;;;;;;;;;;;;;;;:48;;;;2751:186;524:20;2983:41;3017:6;2983:17;:29;3001:10;2983:29;;;;;;;;;;;;;;;;:33;;:41;;;;:::i;:::-;:62;;2949:176;;;;;;;;;;;;:::i;:::-;;;;;;;;;3209:41;3243:6;3209:17;:29;3227:10;3209:29;;;;;;;;;;;;;;;;:33;;:41;;;;:::i;:::-;3177:17;:29;3195:10;3177:29;;;;;;;;;;;;;;;:73;;;;2581:677;3326:12;:18;3339:4;3326:18;;;;;;;;;;;;;;;;;;;;;;;;;3325:19;:40;;;;;3349:12;:16;3362:2;3349:16;;;;;;;;;;;;;;;;;;;;;;;;;3348:17;3325:40;:64;;;;;3370:13;:19;3384:4;3370:19;;;;;;;;;;;;;;;;;;;;;;;;;3369:20;3325:64;:86;;;;;3394:13;:17;3408:2;3394:17;;;;;;;;;;;;;;;;;;;;;;;;;3393:18;3325:86;3321:370;;;3451:44;3478:16;;3451;:22;3468:4;3451:22;;;;;;;;;;;;;;;;:26;;:44;;;;:::i;:::-;3432:15;:63;;3424:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;3566:1;3540:16;:22;3557:4;3540:22;;;;;;;;;;;;;;;;:27;3536:148;;3611:39;3638:11;;3611:16;:22;3628:4;3611:22;;;;;;;;;;;;;;;;:26;;:39;;;;:::i;:::-;3592:15;:58;;3584:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;3536:148;3321:370;2261:21:2::1;:19;:21::i;:::-;4350:1:8::2;4336:16;;:2;:16;;::::0;4328:46:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;4408:15;4385:16;:20;4402:2;4385:20;;;;;;;;;;;;;;;:38;;;;4459:15;4434:16;:22;4451:4;4434:22;;;;;;;;;;;;;;;:40;;;;4492:36;4511:4;4517:2;4521:6;4492:18;:36::i;:::-;4485:43;;2303:20:2::1;:18;:20::i;:::-;4122:414:8::0;;;;;;;;:::o;866:51::-;;;;;;;;;;;;;;;;;:::o;2707:82:3:-;2756:5;2780:2;2773:9;;2707:82;:::o;413:60:8:-;450:23;413:60;:::o;761:26::-;;;;:::o;986:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;4581:153::-;1531:13:0;:11;:13::i;:::-;4676:6:8::1;4658:9;:15;4668:4;4658:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;4713:4;4698:28;;;4719:6;4698:28;;;;;;:::i;:::-;;;;;;;;4581:153:::0;;:::o;480:64::-;524:20;480:64;:::o;5203:261::-;1531:13:0;:11;:13::i;:::-;5306:9:8::1;5318:1;5306:13;;5302:155;5325:5;;:12;;5321:1;:16;5302:155;;;5384:6;5359:12;:22;5372:5;;5378:1;5372:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5359:22;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;5428:5;;5434:1;5428:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5410:35;;;5438:6;5410:35;;;;;;:::i;:::-;;;;;;;;5339:3;;;;;;;5302:155;;;;5203:261:::0;;;:::o;6243:273::-;1531:13:0;:11;:13::i;:::-;6349:9:8::1;6361:1;6349:13;;6345:164;6368:8;;:15;;6364:1;:19;6345:164;;;6434:6;6405:13;:26;6419:8;;6428:1;6419:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6405:26;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;6477:8;;6486:1;6477:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6460:37;;;6490:6;6460:37;;;;;;:::i;:::-;;;;;;;;6385:3;;;;;;;6345:164;;;;6243:273:::0;;;:::o;6524:::-;1531:13:0;:11;:13::i;:::-;6630:9:8::1;6642:1;6630:13;;6626:164;6649:8;;:15;;6645:1;:19;6626:164;;;6715:6;6686:13;:26;6700:8;;6709:1;6700:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6686:26;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;6758:8;;6767:1;6758:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6741:37;;;6771:6;6741:37;;;;;;:::i;:::-;;;;;;;;6666:3;;;;;;;6626:164;;;;6524:273:::0;;;:::o;1046:31::-;;;;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1246:52:8:-;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4742:159:8:-;1531:13:0;:11;:13::i;:::-;4841:6:8::1;4821:12;:17;4834:3;4821:17;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;4881:3;4863:30;;;4886:6;4863:30;;;;;;:::i;:::-;;;;;;;;4742:159:::0;;:::o;5511:173::-;1531:13:0;:11;:13::i;:::-;5621:6:8::1;5596:13;:22;5610:7;5596:22;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;5660:7;5643:33;;;5669:6;5643:33;;;;;;:::i;:::-;;;;;;;;5511:173:::0;;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3710:404:8:-;3887:4;3821:10;3833:2;3837:6;2412:13;:19;2426:4;2412:19;;;;;;;;;;;;;;;;;;;;;;;;;2411:20;:42;;;;;2436:13;:17;2450:2;2436:17;;;;;;;;;;;;;;;;;;;;;;;;;2435:18;2411:42;2403:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2585:9;:15;2595:4;2585:15;;;;;;;;;;;;;;;;;;;;;;;;;:40;;;;;2618:7;:5;:7::i;:::-;2604:21;;:10;:21;;;;2585:40;:70;;;;;2630:13;:25;2644:10;2630:25;;;;;;;;;;;;;;;;;;;;;;;;;2629:26;2585:70;2581:677;;;2806:6;2773:18;:30;2792:10;2773:30;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;2755:15;:57;2751:186;;;2861:1;2829:17;:29;2847:10;2829:29;;;;;;;;;;;;;;;:33;;;;2910:15;2877:18;:30;2896:10;2877:30;;;;;;;;;;;;;;;:48;;;;2751:186;524:20;2983:41;3017:6;2983:17;:29;3001:10;2983:29;;;;;;;;;;;;;;;;:33;;:41;;;;:::i;:::-;:62;;2949:176;;;;;;;;;;;;:::i;:::-;;;;;;;;;3209:41;3243:6;3209:17;:29;3227:10;3209:29;;;;;;;;;;;;;;;;:33;;:41;;;;:::i;:::-;3177:17;:29;3195:10;3177:29;;;;;;;;;;;;;;;:73;;;;2581:677;3326:12;:18;3339:4;3326:18;;;;;;;;;;;;;;;;;;;;;;;;;3325:19;:40;;;;;3349:12;:16;3362:2;3349:16;;;;;;;;;;;;;;;;;;;;;;;;;3348:17;3325:40;:64;;;;;3370:13;:19;3384:4;3370:19;;;;;;;;;;;;;;;;;;;;;;;;;3369:20;3325:64;:86;;;;;3394:13;:17;3408:2;3394:17;;;;;;;;;;;;;;;;;;;;;;;;;3393:18;3325:86;3321:370;;;3451:44;3478:16;;3451;:22;3468:4;3451:22;;;;;;;;;;;;;;;;:26;;:44;;;;:::i;:::-;3432:15;:63;;3424:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;3566:1;3540:16;:22;3557:4;3540:22;;;;;;;;;;;;;;;;:27;3536:148;;3611:39;3638:11;;3611:16;:22;3628:4;3611:22;;;;;;;;;;;;;;;;:26;;:39;;;;:::i;:::-;3592:15;:58;;3584:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;3536:148;3321:370;2261:21:2::1;:19;:21::i;:::-;3932:1:8::2;3918:16;;:2;:16;;::::0;3910:46:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;3990:15;3967:16;:20;3984:2;3967:20;;;;;;;;;;;;;;;:38;;;;4047:15;4016:16;:28;4033:10;4016:28;;;;;;;;;;;;;;;:46;;;;4080:26;4095:2;4099:6;4080:14;:26::i;:::-;4073:33;;2303:20:2::1;:18;:20::i;:::-;3710:404:8::0;;;;;;;:::o;4944:251::-;1531:13:0;:11;:13::i;:::-;5043:9:8::1;5055:1;5043:13;;5039:149;5062:5;;:12;;5058:1;:16;5039:149;;;5118:6;5096:9;:19;5106:5;;5112:1;5106:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5096:19;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;5159:5;;5165:1;5159:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5144:32;;;5169:6;5144:32;;;;;;:::i;:::-;;;;;;;;5076:3;;;;;;;5039:149;;;;4944:251:::0;;;:::o;1164:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;1305:53:8:-;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;580:65:8:-;626:19;580:65;:::o;926:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;2755:96:7:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;4776:244:3:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3315:178:3:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:9:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:99::-;1222:6;1256:5;1250:12;1240:22;;1170:99;;;:::o;1275:169::-;1359:11;1393:6;1388:3;1381:19;1433:4;1428:3;1424:14;1409:29;;1275:169;;;;:::o;1450:139::-;1539:6;1534:3;1529;1523:23;1580:1;1571:6;1566:3;1562:16;1555:27;1450:139;;;:::o;1595:102::-;1636:6;1687:2;1683:7;1678:2;1671:5;1667:14;1663:28;1653:38;;1595:102;;;:::o;1703:377::-;1791:3;1819:39;1852:5;1819:39;:::i;:::-;1874:71;1938:6;1933:3;1874:71;:::i;:::-;1867:78;;1954:65;2012:6;2007:3;2000:4;1993:5;1989:16;1954:65;:::i;:::-;2044:29;2066:6;2044:29;:::i;:::-;2039:3;2035:39;2028:46;;1795:285;1703:377;;;;:::o;2086:313::-;2199:4;2237:2;2226:9;2222:18;2214:26;;2286:9;2280:4;2276:20;2272:1;2261:9;2257:17;2250:47;2314:78;2387:4;2378:6;2314:78;:::i;:::-;2306:86;;2086:313;;;;:::o;2405:126::-;2442:7;2482:42;2475:5;2471:54;2460:65;;2405:126;;;:::o;2537:96::-;2574:7;2603:24;2621:5;2603:24;:::i;:::-;2592:35;;2537:96;;;:::o;2639:122::-;2712:24;2730:5;2712:24;:::i;:::-;2705:5;2702:35;2692:63;;2751:1;2748;2741:12;2692:63;2639:122;:::o;2767:139::-;2813:5;2851:6;2838:20;2829:29;;2867:33;2894:5;2867:33;:::i;:::-;2767:139;;;;:::o;2912:474::-;2980:6;2988;3037:2;3025:9;3016:7;3012:23;3008:32;3005:119;;;3043:79;;:::i;:::-;3005:119;3163:1;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3134:117;3290:2;3316:53;3361:7;3352:6;3341:9;3337:22;3316:53;:::i;:::-;3306:63;;3261:118;2912:474;;;;;:::o;3392:90::-;3426:7;3469:5;3462:13;3455:21;3444:32;;3392:90;;;:::o;3488:109::-;3569:21;3584:5;3569:21;:::i;:::-;3564:3;3557:34;3488:109;;:::o;3603:210::-;3690:4;3728:2;3717:9;3713:18;3705:26;;3741:65;3803:1;3792:9;3788:17;3779:6;3741:65;:::i;:::-;3603:210;;;;:::o;3819:329::-;3878:6;3927:2;3915:9;3906:7;3902:23;3898:32;3895:119;;;3933:79;;:::i;:::-;3895:119;4053:1;4078:53;4123:7;4114:6;4103:9;4099:22;4078:53;:::i;:::-;4068:63;;4024:117;3819:329;;;;:::o;4154:118::-;4241:24;4259:5;4241:24;:::i;:::-;4236:3;4229:37;4154:118;;:::o;4278:222::-;4371:4;4409:2;4398:9;4394:18;4386:26;;4422:71;4490:1;4479:9;4475:17;4466:6;4422:71;:::i;:::-;4278:222;;;;:::o;4506:116::-;4576:21;4591:5;4576:21;:::i;:::-;4569:5;4566:32;4556:60;;4612:1;4609;4602:12;4556:60;4506:116;:::o;4628:133::-;4671:5;4709:6;4696:20;4687:29;;4725:30;4749:5;4725:30;:::i;:::-;4628:133;;;;:::o;4767:468::-;4832:6;4840;4889:2;4877:9;4868:7;4864:23;4860:32;4857:119;;;4895:79;;:::i;:::-;4857:119;5015:1;5040:53;5085:7;5076:6;5065:9;5061:22;5040:53;:::i;:::-;5030:63;;4986:117;5142:2;5168:50;5210:7;5201:6;5190:9;5186:22;5168:50;:::i;:::-;5158:60;;5113:115;4767:468;;;;;:::o;5241:619::-;5318:6;5326;5334;5383:2;5371:9;5362:7;5358:23;5354:32;5351:119;;;5389:79;;:::i;:::-;5351:119;5509:1;5534:53;5579:7;5570:6;5559:9;5555:22;5534:53;:::i;:::-;5524:63;;5480:117;5636:2;5662:53;5707:7;5698:6;5687:9;5683:22;5662:53;:::i;:::-;5652:63;;5607:118;5764:2;5790:53;5835:7;5826:6;5815:9;5811:22;5790:53;:::i;:::-;5780:63;;5735:118;5241:619;;;;;:::o;5866:86::-;5901:7;5941:4;5934:5;5930:16;5919:27;;5866:86;;;:::o;5958:112::-;6041:22;6057:5;6041:22;:::i;:::-;6036:3;6029:35;5958:112;;:::o;6076:214::-;6165:4;6203:2;6192:9;6188:18;6180:26;;6216:67;6280:1;6269:9;6265:17;6256:6;6216:67;:::i;:::-;6076:214;;;;:::o;6296:117::-;6405:1;6402;6395:12;6419:117;6528:1;6525;6518:12;6542:117;6651:1;6648;6641:12;6682:568;6755:8;6765:6;6815:3;6808:4;6800:6;6796:17;6792:27;6782:122;;6823:79;;:::i;:::-;6782:122;6936:6;6923:20;6913:30;;6966:18;6958:6;6955:30;6952:117;;;6988:79;;:::i;:::-;6952:117;7102:4;7094:6;7090:17;7078:29;;7156:3;7148:4;7140:6;7136:17;7126:8;7122:32;7119:41;7116:128;;;7163:79;;:::i;:::-;7116:128;6682:568;;;;;:::o;7256:698::-;7348:6;7356;7364;7413:2;7401:9;7392:7;7388:23;7384:32;7381:119;;;7419:79;;:::i;:::-;7381:119;7567:1;7556:9;7552:17;7539:31;7597:18;7589:6;7586:30;7583:117;;;7619:79;;:::i;:::-;7583:117;7732:80;7804:7;7795:6;7784:9;7780:22;7732:80;:::i;:::-;7714:98;;;;7510:312;7861:2;7887:50;7929:7;7920:6;7909:9;7905:22;7887:50;:::i;:::-;7877:60;;7832:115;7256:698;;;;;:::o;7960:118::-;8047:24;8065:5;8047:24;:::i;:::-;8042:3;8035:37;7960:118;;:::o;8084:222::-;8177:4;8215:2;8204:9;8200:18;8192:26;;8228:71;8296:1;8285:9;8281:17;8272:6;8228:71;:::i;:::-;8084:222;;;;:::o;8312:474::-;8380:6;8388;8437:2;8425:9;8416:7;8412:23;8408:32;8405:119;;;8443:79;;:::i;:::-;8405:119;8563:1;8588:53;8633:7;8624:6;8613:9;8609:22;8588:53;:::i;:::-;8578:63;;8534:117;8690:2;8716:53;8761:7;8752:6;8741:9;8737:22;8716:53;:::i;:::-;8706:63;;8661:118;8312:474;;;;;:::o;8792:332::-;8913:4;8951:2;8940:9;8936:18;8928:26;;8964:71;9032:1;9021:9;9017:17;9008:6;8964:71;:::i;:::-;9045:72;9113:2;9102:9;9098:18;9089:6;9045:72;:::i;:::-;8792:332;;;;;:::o;9130:180::-;9178:77;9175:1;9168:88;9275:4;9272:1;9265:15;9299:4;9296:1;9289:15;9316:320;9360:6;9397:1;9391:4;9387:12;9377:22;;9444:1;9438:4;9434:12;9465:18;9455:81;;9521:4;9513:6;9509:17;9499:27;;9455:81;9583:2;9575:6;9572:14;9552:18;9549:38;9546:84;;9602:18;;:::i;:::-;9546:84;9367:269;9316:320;;;:::o;9642:172::-;9782:24;9778:1;9770:6;9766:14;9759:48;9642:172;:::o;9820:366::-;9962:3;9983:67;10047:2;10042:3;9983:67;:::i;:::-;9976:74;;10059:93;10148:3;10059:93;:::i;:::-;10177:2;10172:3;10168:12;10161:19;;9820:366;;;:::o;10192:419::-;10358:4;10396:2;10385:9;10381:18;10373:26;;10445:9;10439:4;10435:20;10431:1;10420:9;10416:17;10409:47;10473:131;10599:4;10473:131;:::i;:::-;10465:139;;10192:419;;;:::o;10617:180::-;10665:77;10662:1;10655:88;10762:4;10759:1;10752:15;10786:4;10783:1;10776:15;10803:191;10843:3;10862:20;10880:1;10862:20;:::i;:::-;10857:25;;10896:20;10914:1;10896:20;:::i;:::-;10891:25;;10939:1;10936;10932:9;10925:16;;10960:3;10957:1;10954:10;10951:36;;;10967:18;;:::i;:::-;10951:36;10803:191;;;;:::o;11000:239::-;11140:34;11136:1;11128:6;11124:14;11117:58;11209:22;11204:2;11196:6;11192:15;11185:47;11000:239;:::o;11245:366::-;11387:3;11408:67;11472:2;11467:3;11408:67;:::i;:::-;11401:74;;11484:93;11573:3;11484:93;:::i;:::-;11602:2;11597:3;11593:12;11586:19;;11245:366;;;:::o;11617:419::-;11783:4;11821:2;11810:9;11806:18;11798:26;;11870:9;11864:4;11860:20;11856:1;11845:9;11841:17;11834:47;11898:131;12024:4;11898:131;:::i;:::-;11890:139;;11617:419;;;:::o;12042:165::-;12182:17;12178:1;12170:6;12166:14;12159:41;12042:165;:::o;12213:366::-;12355:3;12376:67;12440:2;12435:3;12376:67;:::i;:::-;12369:74;;12452:93;12541:3;12452:93;:::i;:::-;12570:2;12565:3;12561:12;12554:19;;12213:366;;;:::o;12585:419::-;12751:4;12789:2;12778:9;12774:18;12766:26;;12838:9;12832:4;12828:20;12824:1;12813:9;12809:17;12802:47;12866:131;12992:4;12866:131;:::i;:::-;12858:139;;12585:419;;;:::o;13010:167::-;13150:19;13146:1;13138:6;13134:14;13127:43;13010:167;:::o;13183:366::-;13325:3;13346:67;13410:2;13405:3;13346:67;:::i;:::-;13339:74;;13422:93;13511:3;13422:93;:::i;:::-;13540:2;13535:3;13531:12;13524:19;;13183:366;;;:::o;13555:419::-;13721:4;13759:2;13748:9;13744:18;13736:26;;13808:9;13802:4;13798:20;13794:1;13783:9;13779:17;13772:47;13836:131;13962:4;13836:131;:::i;:::-;13828:139;;13555:419;;;:::o;13980:167::-;14120:19;14116:1;14108:6;14104:14;14097:43;13980:167;:::o;14153:366::-;14295:3;14316:67;14380:2;14375:3;14316:67;:::i;:::-;14309:74;;14392:93;14481:3;14392:93;:::i;:::-;14510:2;14505:3;14501:12;14494:19;;14153:366;;;:::o;14525:419::-;14691:4;14729:2;14718:9;14714:18;14706:26;;14778:9;14772:4;14768:20;14764:1;14753:9;14749:17;14742:47;14806:131;14932:4;14806:131;:::i;:::-;14798:139;;14525:419;;;:::o;14950:180::-;14998:77;14995:1;14988:88;15095:4;15092:1;15085:15;15119:4;15116:1;15109:15;15136:181;15276:33;15272:1;15264:6;15260:14;15253:57;15136:181;:::o;15323:366::-;15465:3;15486:67;15550:2;15545:3;15486:67;:::i;:::-;15479:74;;15562:93;15651:3;15562:93;:::i;:::-;15680:2;15675:3;15671:12;15664:19;;15323:366;;;:::o;15695:419::-;15861:4;15899:2;15888:9;15884:18;15876:26;;15948:9;15942:4;15938:20;15934:1;15923:9;15919:17;15912:47;15976:131;16102:4;15976:131;:::i;:::-;15968:139;;15695:419;;;:::o;16120:442::-;16269:4;16307:2;16296:9;16292:18;16284:26;;16320:71;16388:1;16377:9;16373:17;16364:6;16320:71;:::i;:::-;16401:72;16469:2;16458:9;16454:18;16445:6;16401:72;:::i;:::-;16483;16551:2;16540:9;16536:18;16527:6;16483:72;:::i;:::-;16120:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2526200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DAILY_TRADE_LIMIT()": "436",
								"MAX_SUPPLY()": "437",
								"MAX_TRANSFER_AMOUNT()": "435",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"batchSetCexAddresses(address[],bool)": "infinite",
								"batchSetDexPools(address[],bool)": "infinite",
								"batchUpdateBlacklist(address[],bool)": "infinite",
								"batchUpdateWhitelist(address[],bool)": "infinite",
								"dailyTradedAmount(address)": "2869",
								"decimals()": "428",
								"initialized()": "2534",
								"isBlacklisted(address)": "2965",
								"isCexAddress(address)": "2944",
								"isDexPool(address)": "2945",
								"isWhitelisted(address)": "2900",
								"lastTradeTimestamp(address)": "2868",
								"lastTransferTime(address)": "2915",
								"minHoldTime()": "2470",
								"name()": "infinite",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"setCexAddress(address,bool)": "infinite",
								"setDexPool(address,bool)": "infinite",
								"symbol()": "infinite",
								"tokenReceiveTime(address)": "2870",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferCooldown()": "2515",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateBlacklist(address,bool)": "infinite",
								"updateSecurityParams(uint256,uint256)": "infinite",
								"updateWhitelist(address,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 6800,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1826,
									"end": 2210,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1826,
									"end": 2210,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1826,
									"end": 2210,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1826,
									"end": 2210,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1826,
									"end": 2210,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1826,
									"end": 2210,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1826,
									"end": 2210,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1826,
									"end": 2210,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1826,
									"end": 2210,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1826,
									"end": 2210,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1826,
									"end": 2210,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 342,
									"end": 352,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "50726F7068656379204A696D70736F6E73000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "5A696D7000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1895,
									"end": 1906,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1894,
									"end": 1906,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1886,
									"end": 1930,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1886,
									"end": 1930,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1980,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1957,
									"end": 1967,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 450,
									"end": 473,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "204FCE5E3E25026110000000"
								},
								{
									"begin": 1951,
									"end": 1956,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1951,
									"end": 1956,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1951,
									"end": 1956,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1980,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1951,
									"end": 1980,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1980,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1980,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1951,
									"end": 1980,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2015,
									"end": 2019,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2001,
									"end": 2012,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2001,
									"end": 2012,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2019,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2044,
									"end": 2050,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "15180"
								},
								{
									"begin": 2030,
									"end": 2041,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2030,
									"end": 2050,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2030,
									"end": 2050,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2030,
									"end": 2050,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2030,
									"end": 2050,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2080,
									"end": 2082,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "3C"
								},
								{
									"begin": 2061,
									"end": 2077,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 2061,
									"end": 2082,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2061,
									"end": 2082,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2061,
									"end": 2082,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2061,
									"end": 2082,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2131,
									"end": 2135,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2103,
									"end": 2116,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "C"
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2117,
									"end": 2127,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2128,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2135,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2179,
									"end": 2189,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "9D5570C03A71AF73640DA09C132D73BB3EFE7CA4F55516A1AFC2597CBDFD620C"
								},
								{
									"begin": 450,
									"end": 473,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "204FCE5E3E25026110000000"
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2161,
									"end": 2202,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2202,
									"modifierDepth": 1,
									"name": "LOG2",
									"source": 8
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 5989,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 5820,
									"end": 5989,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5904,
									"end": 5915,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5938,
									"end": 5944,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5933,
									"end": 5936,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5926,
									"end": 5945,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5978,
									"end": 5982,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5973,
									"end": 5976,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5969,
									"end": 5983,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5954,
									"end": 5983,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5954,
									"end": 5983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 5989,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 5989,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 5989,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 5989,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 5989,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5995,
									"end": 6164,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 5995,
									"end": 6164,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6135,
									"end": 6156,
									"name": "PUSH",
									"source": 9,
									"value": "416C726561647920696E697469616C697A656400000000000000000000000000"
								},
								{
									"begin": 6131,
									"end": 6132,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6123,
									"end": 6129,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6119,
									"end": 6133,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6112,
									"end": 6157,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5995,
									"end": 6164,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5995,
									"end": 6164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6536,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 6170,
									"end": 6536,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6312,
									"end": 6315,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6333,
									"end": 6400,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 6397,
									"end": 6399,
									"name": "PUSH",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 6392,
									"end": 6395,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6333,
									"end": 6400,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 6333,
									"end": 6400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6333,
									"end": 6400,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 6333,
									"end": 6400,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6326,
									"end": 6400,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6326,
									"end": 6400,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6409,
									"end": 6502,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 6498,
									"end": 6501,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6409,
									"end": 6502,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 6409,
									"end": 6502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6409,
									"end": 6502,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 6409,
									"end": 6502,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6527,
									"end": 6529,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6522,
									"end": 6525,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6518,
									"end": 6530,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6511,
									"end": 6530,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6511,
									"end": 6530,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6536,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6536,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6536,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6536,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6542,
									"end": 6961,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6542,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6708,
									"end": 6712,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6746,
									"end": 6748,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6735,
									"end": 6744,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6731,
									"end": 6749,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6723,
									"end": 6749,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6723,
									"end": 6749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6795,
									"end": 6804,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6789,
									"end": 6793,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6785,
									"end": 6805,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 6781,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6770,
									"end": 6779,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6766,
									"end": 6783,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6759,
									"end": 6806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6823,
									"end": 6954,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 6949,
									"end": 6953,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6823,
									"end": 6954,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 6823,
									"end": 6954,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6823,
									"end": 6954,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 6823,
									"end": 6954,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6815,
									"end": 6954,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6815,
									"end": 6954,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6542,
									"end": 6961,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6542,
									"end": 6961,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6542,
									"end": 6961,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6542,
									"end": 6961,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7085,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 6967,
									"end": 7085,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7054,
									"end": 7078,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 7072,
									"end": 7077,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7054,
									"end": 7078,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 7054,
									"end": 7078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7054,
									"end": 7078,
									"name": "tag",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 7054,
									"end": 7078,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7049,
									"end": 7052,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7042,
									"end": 7079,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7085,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7085,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7085,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7091,
									"end": 7313,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 7091,
									"end": 7313,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7184,
									"end": 7188,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7222,
									"end": 7224,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7211,
									"end": 7220,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7207,
									"end": 7225,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7199,
									"end": 7225,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7199,
									"end": 7225,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7235,
									"end": 7306,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 7303,
									"end": 7304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7292,
									"end": 7301,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7288,
									"end": 7305,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7279,
									"end": 7285,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7235,
									"end": 7306,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 7235,
									"end": 7306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7235,
									"end": 7306,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 7235,
									"end": 7306,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7091,
									"end": 7313,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7091,
									"end": 7313,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7091,
									"end": 7313,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7091,
									"end": 7313,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7091,
									"end": 7313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7319,
									"end": 7499,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 7319,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7367,
									"end": 7444,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7364,
									"end": 7365,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7357,
									"end": 7445,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7464,
									"end": 7468,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 7461,
									"end": 7462,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 7454,
									"end": 7469,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7488,
									"end": 7492,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 7485,
									"end": 7486,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7478,
									"end": 7493,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 7505,
									"end": 7696,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 7505,
									"end": 7696,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7545,
									"end": 7548,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7564,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7564,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 7564,
									"end": 7584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7564,
									"end": 7584,
									"name": "tag",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 7564,
									"end": 7584,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7559,
									"end": 7584,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7559,
									"end": 7584,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7598,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 7616,
									"end": 7617,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7598,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 7598,
									"end": 7618,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7598,
									"end": 7618,
									"name": "tag",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 7598,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7593,
									"end": 7618,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7593,
									"end": 7618,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7641,
									"end": 7642,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7638,
									"end": 7639,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7634,
									"end": 7643,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7627,
									"end": 7643,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7627,
									"end": 7643,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7662,
									"end": 7665,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7659,
									"end": 7660,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7656,
									"end": 7666,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7653,
									"end": 7689,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7653,
									"end": 7689,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 7653,
									"end": 7689,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7669,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 7669,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 7669,
									"end": 7687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7669,
									"end": 7687,
									"name": "tag",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 7669,
									"end": 7687,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7653,
									"end": 7689,
									"name": "tag",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 7653,
									"end": 7689,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7505,
									"end": 7696,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7505,
									"end": 7696,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7505,
									"end": 7696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7505,
									"end": 7696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7505,
									"end": 7696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7851,
									"end": 7855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7889,
									"end": 7891,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 7878,
									"end": 7887,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7874,
									"end": 7892,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7866,
									"end": 7892,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7866,
									"end": 7892,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7902,
									"end": 7973,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 7970,
									"end": 7971,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7959,
									"end": 7968,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7955,
									"end": 7972,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7946,
									"end": 7952,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7902,
									"end": 7973,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 7902,
									"end": 7973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7902,
									"end": 7973,
									"name": "tag",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 7902,
									"end": 7973,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7983,
									"end": 8055,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 8051,
									"end": 8053,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8040,
									"end": 8049,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8036,
									"end": 8054,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8027,
									"end": 8033,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7983,
									"end": 8055,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 7983,
									"end": 8055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7983,
									"end": 8055,
									"name": "tag",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 7983,
									"end": 8055,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8065,
									"end": 8137,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 8133,
									"end": 8135,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 8122,
									"end": 8131,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8109,
									"end": 8115,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8065,
									"end": 8137,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 8065,
									"end": 8137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8065,
									"end": 8137,
									"name": "tag",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 8065,
									"end": 8137,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 8144,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 6800,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f0b8cf1ef6feb34436b10e5f0edd47effbd5b3cee9b9551498a3f1fb502b1fd64736f6c634300081c0033",
									".code": [
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "6072E6A8"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "E26FFE08"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "FC1B3113"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "FE575A87"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "AB09413D"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "DD386477"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "8B6A8FBF"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "90389B83"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "9155E083"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "6072E6A8"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "611274C5"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "68F16293"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "330671AD"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "330671AD"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "3AF32ABF"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "5112F297"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "566E5993"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "5F87F0EB"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "283AF019"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "32CB6B0C"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "D392CD9"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "D392CD9"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "158EF93E"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "2357EDB3"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "58C72FC"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "D2D8A31"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 6800,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 5914,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 5914,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 808,
											"end": 859,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 808,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 808,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 808,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 5692,
											"end": 5865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5692,
											"end": 5865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 686,
											"end": 709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 686,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 686,
											"end": 709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 686,
											"end": 709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 709,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 686,
											"end": 709,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 686,
											"end": 709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 686,
											"end": 709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 709,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1116,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1116,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1116,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 4122,
											"end": 4536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 4122,
											"end": 4536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 4122,
											"end": 4536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 866,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 866,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 866,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 413,
											"end": 473,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 413,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 413,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 761,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 761,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 986,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 986,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 986,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4581,
											"end": 4734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4581,
											"end": 4734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 480,
											"end": 544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 480,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 480,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 480,
											"end": 544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 544,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 480,
											"end": 544,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 480,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 480,
											"end": 544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 544,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5203,
											"end": 5464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5203,
											"end": 5464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 6243,
											"end": 6516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 6243,
											"end": 6516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 6524,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 6524,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1046,
											"end": 1077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1046,
											"end": 1077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1246,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 1246,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1246,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4742,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 4742,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 5511,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 5511,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 3710,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3710,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 3710,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 4944,
											"end": 5195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4944,
											"end": 5195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1164,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1164,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1164,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1305,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1305,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1305,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 580,
											"end": 645,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 580,
											"end": 645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 580,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 580,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 580,
											"end": 645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 645,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 580,
											"end": 645,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 580,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 580,
											"end": 645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 645,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 926,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 926,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 926,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6037,
											"end": 6060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6060,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6060,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6099,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6071,
											"end": 6087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 6071,
											"end": 6099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6071,
											"end": 6099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6071,
											"end": 6099,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6071,
											"end": 6099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2C406EBFCB3EB7487C720DD90F3BE04648D6606BAD1837FD5363CD02F3DD1EF6"
										},
										{
											"begin": 6161,
											"end": 6170,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 6125,
											"end": 6205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6205,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 808,
											"end": 859,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 808,
											"end": 859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5802,
											"end": 5808,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5798,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5808,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D"
										},
										{
											"begin": 5850,
											"end": 5856,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 5824,
											"end": 5857,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5857,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 686,
											"end": 709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 686,
											"end": 709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 686,
											"end": 709,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 686,
											"end": 709,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 686,
											"end": 709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4306,
											"end": 4310,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4248,
											"end": 4252,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4256,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4264,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2425,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2449,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2452,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2453,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2403,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2594,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2599,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 2618,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2618,
											"end": 2625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2614,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2643,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2654,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2655,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 3258,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 2581,
											"end": 3258,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2802,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2773,
											"end": 2812,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 2773,
											"end": 2812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2812,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2773,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2812,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2937,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 2751,
											"end": 2937,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2846,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2857,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2925,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2906,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2937,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 2751,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 524,
											"end": 544,
											"name": "PUSH",
											"source": 8,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3017,
											"end": 3023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3000,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 2983,
											"end": 3016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3045,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3045,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 2949,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3243,
											"end": 3249,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3226,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3237,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3209,
											"end": 3242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3194,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3205,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3250,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3250,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 3258,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 2581,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3343,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3344,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3361,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3364,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3365,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3369,
											"end": 3389,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3410,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3691,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 3321,
											"end": 3691,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3478,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3478,
											"end": 3494,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3467,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3472,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3451,
											"end": 3477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3432,
											"end": 3495,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3432,
											"end": 3495,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3424,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3556,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3561,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3567,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3536,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3536,
											"end": 3684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3632,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3607,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3650,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3650,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3584,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3536,
											"end": 3684,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3536,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3691,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 3321,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4350,
											"end": 4351,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4336,
											"end": 4352,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4338,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4336,
											"end": 4352,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4352,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 4328,
											"end": 4374,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 4328,
											"end": 4374,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4423,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4401,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4404,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4405,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4423,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4423,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4423,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4423,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4459,
											"end": 4474,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4450,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4451,
											"end": 4455,
											"modifierDepth": 2,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4456,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4474,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4474,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4474,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4474,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4492,
											"end": 4528,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 4511,
											"end": 4515,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4519,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4521,
											"end": 4527,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4492,
											"end": 4510,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 4492,
											"end": 4528,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4492,
											"end": 4528,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 4492,
											"end": 4528,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4528,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4528,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 866,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 413,
											"end": 473,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 450,
											"end": 473,
											"name": "PUSH",
											"source": 8,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 413,
											"end": 473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 413,
											"end": 473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 761,
											"end": 787,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 986,
											"end": 1031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4676,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4672,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 4717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "87AE58F1CB2BAF6F5AC7D2F6391A7F26D2E2951312C6EAB3761FC754D202DE7"
										},
										{
											"begin": 4719,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 4698,
											"end": 4726,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 480,
											"end": 544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 524,
											"end": 544,
											"name": "PUSH",
											"source": 8,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 480,
											"end": 544,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 480,
											"end": 544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5318,
											"end": 5319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5306,
											"end": 5319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5319,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 5302,
											"end": 5457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5337,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5337,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5457,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 5302,
											"end": 5457,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5377,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5377,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5379,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5372,
											"end": 5380,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5372,
											"end": 5380,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 5372,
											"end": 5380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5390,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5433,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5433,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5434,
											"end": 5435,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5428,
											"end": 5436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5428,
											"end": 5436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5428,
											"end": 5436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8295E5E995ACEC8DC9C9248F8DB461AEBA392BC756BB3DB82E642667CC464AE6"
										},
										{
											"begin": 5438,
											"end": 5444,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 5410,
											"end": 5445,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5445,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 5339,
											"end": 5342,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5339,
											"end": 5342,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5339,
											"end": 5342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5339,
											"end": 5342,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5339,
											"end": 5342,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5339,
											"end": 5342,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5339,
											"end": 5342,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 5302,
											"end": 5457,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 5302,
											"end": 5457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6349,
											"end": 6358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6361,
											"end": 6362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6349,
											"end": 6362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 6345,
											"end": 6509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6376,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6376,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6383,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6383,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6365,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6383,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6509,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 6345,
											"end": 6509,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6419,
											"end": 6427,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6427,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6428,
											"end": 6429,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6419,
											"end": 6430,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 6419,
											"end": 6430,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 6419,
											"end": 6430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6440,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6485,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6485,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6487,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6477,
											"end": 6488,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 6477,
											"end": 6488,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 6477,
											"end": 6488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC"
										},
										{
											"begin": 6490,
											"end": 6496,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 6460,
											"end": 6497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6497,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6385,
											"end": 6388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6388,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6388,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 6345,
											"end": 6509,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 6345,
											"end": 6509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6630,
											"end": 6639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6642,
											"end": 6643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6626,
											"end": 6790,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 6626,
											"end": 6790,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6657,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6657,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6645,
											"end": 6646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6645,
											"end": 6664,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6626,
											"end": 6790,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6626,
											"end": 6790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 6626,
											"end": 6790,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6700,
											"end": 6708,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6708,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6709,
											"end": 6710,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6700,
											"end": 6711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 6700,
											"end": 6711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 6700,
											"end": 6711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6721,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6766,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6766,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6767,
											"end": 6768,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6758,
											"end": 6769,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 6758,
											"end": 6769,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6758,
											"end": 6769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D"
										},
										{
											"begin": 6771,
											"end": 6777,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 6741,
											"end": 6778,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6669,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6669,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6666,
											"end": 6669,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6669,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6669,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6669,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6626,
											"end": 6790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 6626,
											"end": 6790,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6626,
											"end": 6790,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 6626,
											"end": 6790,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6626,
											"end": 6790,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4837,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8295E5E995ACEC8DC9C9248F8DB461AEBA392BC756BB3DB82E642667CC464AE6"
										},
										{
											"begin": 4886,
											"end": 4892,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 4863,
											"end": 4893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4893,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5621,
											"end": 5627,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5617,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5627,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5660,
											"end": 5667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC"
										},
										{
											"begin": 5669,
											"end": 5675,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 5643,
											"end": 5676,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5676,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3887,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3831,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3837,
											"end": 3843,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2425,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2449,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2452,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2436,
											"end": 2453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2453,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2403,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2403,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2594,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2599,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2618,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2618,
											"end": 2625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2614,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2585,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2643,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2654,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2655,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 2585,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 3258,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2581,
											"end": 3258,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2802,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2803,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2773,
											"end": 2812,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 2773,
											"end": 2812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2812,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2773,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2812,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2937,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2751,
											"end": 2937,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2846,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2857,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2925,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2906,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2937,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2751,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 524,
											"end": 544,
											"name": "PUSH",
											"source": 8,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 3017,
											"end": 3023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3000,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3012,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 2983,
											"end": 3016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2983,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3045,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3045,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 2949,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2949,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3243,
											"end": 3249,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3226,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3237,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3209,
											"end": 3242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3209,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3194,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3205,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3250,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3250,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 3258,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2581,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3343,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3326,
											"end": 3344,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3344,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3361,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3364,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3365,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 3325,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3370,
											"end": 3389,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3369,
											"end": 3389,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3325,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3410,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3325,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3691,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 3321,
											"end": 3691,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 3478,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3478,
											"end": 3494,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3467,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3472,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3451,
											"end": 3477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 3451,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3432,
											"end": 3495,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3432,
											"end": 3495,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3424,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 3424,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3556,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3561,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3567,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3536,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 3536,
											"end": 3684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3632,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3633,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3607,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3650,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3650,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3584,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 3584,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3536,
											"end": 3684,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 3536,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3691,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 3321,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3932,
											"end": 3933,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3934,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3918,
											"end": 3934,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3920,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3934,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3918,
											"end": 3934,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3910,
											"end": 3956,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 3910,
											"end": 3956,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3990,
											"end": 4005,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3983,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 3986,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3987,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 4005,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 4005,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 4005,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 4005,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4047,
											"end": 4062,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4043,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4044,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4062,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4062,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4062,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4062,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4080,
											"end": 4106,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 4095,
											"end": 4097,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4099,
											"end": 4105,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4080,
											"end": 4094,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 4080,
											"end": 4106,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4080,
											"end": 4106,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 4080,
											"end": 4106,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4073,
											"end": 4106,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4073,
											"end": 4106,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 4114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5043,
											"end": 5052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5055,
											"end": 5056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5188,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5039,
											"end": 5188,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5062,
											"end": 5067,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5062,
											"end": 5067,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5062,
											"end": 5074,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5062,
											"end": 5074,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5059,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5074,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5188,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 5039,
											"end": 5188,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5118,
											"end": 5124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5111,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5111,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5113,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5106,
											"end": 5114,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5106,
											"end": 5114,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 5106,
											"end": 5114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5164,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5164,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5165,
											"end": 5166,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5159,
											"end": 5167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5159,
											"end": 5167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "87AE58F1CB2BAF6F5AC7D2F6391A7F26D2E2951312C6EAB3761FC754D202DE7"
										},
										{
											"begin": 5169,
											"end": 5175,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 5144,
											"end": 5176,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 5076,
											"end": 5079,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5076,
											"end": 5079,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5076,
											"end": 5079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5076,
											"end": 5079,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5076,
											"end": 5079,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5076,
											"end": 5079,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5039,
											"end": 5188,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5188,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 5039,
											"end": 5188,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5188,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 580,
											"end": 645,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 580,
											"end": 645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH",
											"source": 8,
											"value": "84595161401484A000000"
										},
										{
											"begin": 580,
											"end": 645,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 580,
											"end": 645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 926,
											"end": 971,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 926,
											"end": 971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1170,
											"end": 1269,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 1170,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1250,
											"end": 1262,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1240,
											"end": 1262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1170,
											"end": 1269,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1170,
											"end": 1269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1170,
											"end": 1269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1170,
											"end": 1269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1444,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 1275,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1359,
											"end": 1370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1391,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1437,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1428,
											"end": 1431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1424,
											"end": 1438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1444,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1444,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1589,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 1450,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1529,
											"end": 1532,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1523,
											"end": 1546,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 1581,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1566,
											"end": 1569,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1562,
											"end": 1578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1582,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1697,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 1595,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1689,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1683,
											"end": 1690,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1680,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1671,
											"end": 1676,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1663,
											"end": 1691,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1653,
											"end": 1691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1653,
											"end": 1691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1697,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 1703,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1794,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1819,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 1819,
											"end": 1858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1819,
											"end": 1858,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 1819,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1936,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 1874,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1945,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 1874,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1945,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 2012,
											"end": 2018,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2007,
											"end": 2010,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 1998,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 1954,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 2019,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 1954,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 2044,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2039,
											"end": 2042,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 2080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 2080,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 2080,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 2080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 2080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2399,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2086,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2199,
											"end": 2203,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2239,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2214,
											"end": 2240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2214,
											"end": 2240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2295,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2280,
											"end": 2284,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2296,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2272,
											"end": 2273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2270,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2257,
											"end": 2274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2297,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 2387,
											"end": 2391,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 2314,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2392,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 2314,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2399,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2399,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2531,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 2405,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2442,
											"end": 2449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2524,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2475,
											"end": 2480,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2471,
											"end": 2525,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2525,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2531,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2531,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2531,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2633,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 2537,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2581,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 2621,
											"end": 2626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2603,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 2603,
											"end": 2627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2603,
											"end": 2627,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 2603,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2633,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2633,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 2639,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 2730,
											"end": 2735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 2712,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2736,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 2712,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2737,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2753,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 2767,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2858,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2829,
											"end": 2858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 2894,
											"end": 2899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 2867,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2900,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 2867,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2906,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 2986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 2994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3039,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3034,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3023,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3012,
											"end": 3035,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3040,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3043,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 3043,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 3043,
											"end": 3122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3043,
											"end": 3122,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 3043,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3163,
											"end": 3164,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3292,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 3361,
											"end": 3368,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3358,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3350,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3359,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 3316,
											"end": 3369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3369,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 3316,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3482,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 3392,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3474,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3444,
											"end": 3476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3444,
											"end": 3476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3482,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3482,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3597,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 3488,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 3584,
											"end": 3589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 3569,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3590,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 3569,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3591,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3813,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3603,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3730,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3717,
											"end": 3726,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3713,
											"end": 3731,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 3803,
											"end": 3804,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3805,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3785,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 3741,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3806,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 3741,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3813,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 4148,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3819,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3884,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3927,
											"end": 3929,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3915,
											"end": 3924,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3913,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3925,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3898,
											"end": 3930,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 4014,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 3895,
											"end": 4014,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3933,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 3933,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 3933,
											"end": 4012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3933,
											"end": 4012,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 3933,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 4014,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 3895,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4078,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 4123,
											"end": 4130,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4112,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 4078,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4131,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 4078,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4141,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 4148,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 4148,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 4148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 4148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 4148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4272,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 4154,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 4259,
											"end": 4264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 4241,
											"end": 4265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4265,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 4241,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4229,
											"end": 4266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4278,
											"end": 4500,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4278,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4371,
											"end": 4375,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4411,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4407,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4386,
											"end": 4412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4386,
											"end": 4412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4422,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 4490,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4475,
											"end": 4492,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4472,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4422,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 4422,
											"end": 4493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4422,
											"end": 4493,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 4422,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4278,
											"end": 4500,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4278,
											"end": 4500,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4278,
											"end": 4500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4278,
											"end": 4500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4278,
											"end": 4500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4622,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 4506,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 4591,
											"end": 4596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 4576,
											"end": 4597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4597,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 4576,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4556,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 4556,
											"end": 4616,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4609,
											"end": 4610,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 4614,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4556,
											"end": 4616,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 4556,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4628,
											"end": 4761,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 4628,
											"end": 4761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4671,
											"end": 4676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4687,
											"end": 4716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4687,
											"end": 4716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4725,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 4749,
											"end": 4754,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4725,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 4725,
											"end": 4755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4725,
											"end": 4755,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 4725,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4628,
											"end": 4761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4628,
											"end": 4761,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4628,
											"end": 4761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4628,
											"end": 4761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4628,
											"end": 4761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4767,
											"end": 5235,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4767,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4832,
											"end": 4838,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4846,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4889,
											"end": 4891,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 4886,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4875,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4864,
											"end": 4887,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4892,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4976,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 4857,
											"end": 4976,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 4895,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 4895,
											"end": 4974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4974,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 4895,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4976,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 4857,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5016,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5040,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 5085,
											"end": 5092,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5082,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5074,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5083,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 5040,
											"end": 5093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5093,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 5040,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5030,
											"end": 5093,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5030,
											"end": 5093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4986,
											"end": 5103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5144,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5168,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 5210,
											"end": 5217,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5199,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 5168,
											"end": 5218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5218,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 5168,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5218,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4767,
											"end": 5235,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4767,
											"end": 5235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4767,
											"end": 5235,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4767,
											"end": 5235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4767,
											"end": 5235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4767,
											"end": 5235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5860,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 5241,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5332,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5385,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5371,
											"end": 5380,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5362,
											"end": 5369,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5358,
											"end": 5381,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5354,
											"end": 5386,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5351,
											"end": 5470,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5351,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 5351,
											"end": 5470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 5389,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 5389,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5468,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 5389,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5351,
											"end": 5470,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 5351,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 5579,
											"end": 5586,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5576,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5568,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5555,
											"end": 5577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 5534,
											"end": 5587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5587,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 5534,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5587,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5480,
											"end": 5597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5638,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5662,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 5707,
											"end": 5714,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5687,
											"end": 5696,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5705,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5662,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 5662,
											"end": 5715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5662,
											"end": 5715,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 5662,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5652,
											"end": 5715,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5652,
											"end": 5715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5725,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5764,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5790,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 5835,
											"end": 5842,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5815,
											"end": 5824,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5811,
											"end": 5833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5790,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 5790,
											"end": 5843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5790,
											"end": 5843,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 5790,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5780,
											"end": 5843,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5780,
											"end": 5843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5735,
											"end": 5853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5860,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5860,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5860,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5866,
											"end": 5952,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 5866,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5908,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5941,
											"end": 5945,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 5946,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 5946,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 5946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5866,
											"end": 5952,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5866,
											"end": 5952,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5866,
											"end": 5952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5866,
											"end": 5952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5958,
											"end": 6070,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 5958,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 6057,
											"end": 6062,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 6041,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6063,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 6041,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 6039,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6064,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5958,
											"end": 6070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5958,
											"end": 6070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5958,
											"end": 6070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6076,
											"end": 6290,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 6076,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6205,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6192,
											"end": 6201,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6216,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 6280,
											"end": 6281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6269,
											"end": 6278,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6262,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6216,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 6216,
											"end": 6283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6216,
											"end": 6283,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 6216,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6076,
											"end": 6290,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6076,
											"end": 6290,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6076,
											"end": 6290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6076,
											"end": 6290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6076,
											"end": 6290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6413,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 6296,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6395,
											"end": 6407,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6419,
											"end": 6536,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 6419,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6525,
											"end": 6526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6530,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6659,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 6542,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6652,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6649,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6653,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 7250,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 6682,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6755,
											"end": 6763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6771,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6818,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6813,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6792,
											"end": 6819,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 6782,
											"end": 6904,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6823,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 6823,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 6823,
											"end": 6902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6823,
											"end": 6902,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 6823,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6904,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 6782,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 6942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6923,
											"end": 6943,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6913,
											"end": 6943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6913,
											"end": 6943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6985,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6952,
											"end": 7069,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6952,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 6952,
											"end": 7069,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 6988,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 6988,
											"end": 7067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7067,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 6988,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6952,
											"end": 7069,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 6952,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7106,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7100,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7090,
											"end": 7107,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7107,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7148,
											"end": 7152,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7140,
											"end": 7146,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7136,
											"end": 7153,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7126,
											"end": 7134,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7122,
											"end": 7154,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7119,
											"end": 7160,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7244,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 7116,
											"end": 7244,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7163,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 7163,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 7163,
											"end": 7242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7163,
											"end": 7242,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 7163,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7244,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 7116,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 7250,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 7250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 7250,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 7250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 7250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 7250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7954,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 7256,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7364,
											"end": 7370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7413,
											"end": 7415,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7401,
											"end": 7410,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7399,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7388,
											"end": 7411,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7384,
											"end": 7416,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7500,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 7381,
											"end": 7500,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7419,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 7419,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 7419,
											"end": 7498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7419,
											"end": 7498,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 7419,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7500,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 7381,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7567,
											"end": 7568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7556,
											"end": 7565,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7569,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7539,
											"end": 7570,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7615,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7589,
											"end": 7595,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7616,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 7619,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 7619,
											"end": 7698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7698,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 7619,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7732,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 7804,
											"end": 7811,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7795,
											"end": 7801,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7784,
											"end": 7793,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7732,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 7732,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7732,
											"end": 7812,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 7732,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7812,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7812,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7510,
											"end": 7822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7861,
											"end": 7863,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7887,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 7929,
											"end": 7936,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7920,
											"end": 7926,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7918,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7905,
											"end": 7927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7887,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 7887,
											"end": 7937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7887,
											"end": 7937,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 7887,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7832,
											"end": 7947,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7954,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7954,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7954,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7954,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7954,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8078,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 7960,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8047,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 8065,
											"end": 8070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8047,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 8047,
											"end": 8071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8047,
											"end": 8071,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 8047,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8042,
											"end": 8045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8035,
											"end": 8072,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8306,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 8084,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8177,
											"end": 8181,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8217,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8204,
											"end": 8213,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8200,
											"end": 8218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8228,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 8296,
											"end": 8297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8294,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8272,
											"end": 8278,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8228,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 8228,
											"end": 8299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8228,
											"end": 8299,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 8228,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8306,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8306,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8786,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 8312,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8439,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8425,
											"end": 8434,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8412,
											"end": 8435,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8440,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 8524,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 8524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 8405,
											"end": 8524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 8443,
											"end": 8522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 8443,
											"end": 8522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8522,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 8443,
											"end": 8522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 8524,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 8405,
											"end": 8524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8563,
											"end": 8564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 8633,
											"end": 8640,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8624,
											"end": 8630,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8613,
											"end": 8622,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8609,
											"end": 8631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8588,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 8588,
											"end": 8641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8588,
											"end": 8641,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 8588,
											"end": 8641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8578,
											"end": 8641,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8578,
											"end": 8641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8534,
											"end": 8651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8690,
											"end": 8692,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8716,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 8761,
											"end": 8768,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8752,
											"end": 8758,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8741,
											"end": 8750,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8737,
											"end": 8759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 8716,
											"end": 8769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8769,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 8716,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8661,
											"end": 8779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8786,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8786,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 9124,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 8792,
											"end": 9124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8913,
											"end": 8917,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8951,
											"end": 8953,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8940,
											"end": 8949,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8936,
											"end": 8954,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8928,
											"end": 8954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8928,
											"end": 8954,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8964,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 9032,
											"end": 9033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9021,
											"end": 9030,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9017,
											"end": 9034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9008,
											"end": 9014,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8964,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 8964,
											"end": 9035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8964,
											"end": 9035,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 8964,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 9113,
											"end": 9115,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9102,
											"end": 9111,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9098,
											"end": 9116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9089,
											"end": 9095,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 9045,
											"end": 9117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9117,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 9045,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 9124,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 9124,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 9124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 9124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 9124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 9124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9130,
											"end": 9310,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 9130,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9178,
											"end": 9255,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9175,
											"end": 9176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9256,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9275,
											"end": 9279,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 9272,
											"end": 9273,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9265,
											"end": 9280,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9299,
											"end": 9303,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9289,
											"end": 9304,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9636,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 9316,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9360,
											"end": 9366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9397,
											"end": 9398,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9391,
											"end": 9395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9387,
											"end": 9399,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9377,
											"end": 9399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9377,
											"end": 9399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9444,
											"end": 9445,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9438,
											"end": 9442,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9434,
											"end": 9446,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9465,
											"end": 9483,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9455,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 9455,
											"end": 9536,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9521,
											"end": 9525,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 9513,
											"end": 9519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9509,
											"end": 9526,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9499,
											"end": 9526,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9499,
											"end": 9526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9455,
											"end": 9536,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 9455,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9583,
											"end": 9585,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9575,
											"end": 9581,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9572,
											"end": 9586,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9549,
											"end": 9587,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9546,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 9546,
											"end": 9630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9602,
											"end": 9620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 9602,
											"end": 9620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 9602,
											"end": 9620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9602,
											"end": 9620,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 9602,
											"end": 9620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9546,
											"end": 9630,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 9546,
											"end": 9630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9367,
											"end": 9636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9636,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9642,
											"end": 9814,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 9642,
											"end": 9814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9806,
											"name": "PUSH",
											"source": 9,
											"value": "4164647265737320697320626C61636B6C697374656400000000000000000000"
										},
										{
											"begin": 9778,
											"end": 9779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9766,
											"end": 9780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9759,
											"end": 9807,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9642,
											"end": 9814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9642,
											"end": 9814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9820,
											"end": 10186,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 9820,
											"end": 10186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9962,
											"end": 9965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9983,
											"end": 10050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 10047,
											"end": 10049,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 10042,
											"end": 10045,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9983,
											"end": 10050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 9983,
											"end": 10050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9983,
											"end": 10050,
											"name": "tag",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 9983,
											"end": 10050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9976,
											"end": 10050,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9976,
											"end": 10050,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10059,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 10148,
											"end": 10151,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10059,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 10059,
											"end": 10152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10059,
											"end": 10152,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 10059,
											"end": 10152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10177,
											"end": 10179,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10172,
											"end": 10175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10168,
											"end": 10180,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10161,
											"end": 10180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10161,
											"end": 10180,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9820,
											"end": 10186,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9820,
											"end": 10186,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9820,
											"end": 10186,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9820,
											"end": 10186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10611,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 10192,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10358,
											"end": 10362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10398,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10385,
											"end": 10394,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10381,
											"end": 10399,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10439,
											"end": 10443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10435,
											"end": 10455,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10431,
											"end": 10432,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10433,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10409,
											"end": 10456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10473,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 10599,
											"end": 10603,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10473,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 10473,
											"end": 10604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10473,
											"end": 10604,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 10473,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10465,
											"end": 10604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10465,
											"end": 10604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10611,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10617,
											"end": 10797,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 10617,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10665,
											"end": 10742,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10662,
											"end": 10663,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10655,
											"end": 10743,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10762,
											"end": 10766,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 10759,
											"end": 10760,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10752,
											"end": 10767,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10786,
											"end": 10790,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10783,
											"end": 10784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10776,
											"end": 10791,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10803,
											"end": 10994,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 10803,
											"end": 10994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10843,
											"end": 10846,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10862,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 10880,
											"end": 10881,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 10862,
											"end": 10882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 10882,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 10862,
											"end": 10882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10896,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 10914,
											"end": 10915,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10896,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 10896,
											"end": 10916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10896,
											"end": 10916,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 10896,
											"end": 10916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10891,
											"end": 10916,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10891,
											"end": 10916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10939,
											"end": 10940,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10936,
											"end": 10937,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10932,
											"end": 10941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10925,
											"end": 10941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10925,
											"end": 10941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10960,
											"end": 10963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10957,
											"end": 10958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10954,
											"end": 10964,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10951,
											"end": 10987,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10951,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 10951,
											"end": 10987,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 10967,
											"end": 10985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10951,
											"end": 10987,
											"name": "tag",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 10951,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10803,
											"end": 10994,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10803,
											"end": 10994,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10803,
											"end": 10994,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10803,
											"end": 10994,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10803,
											"end": 10994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11000,
											"end": 11239,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 11000,
											"end": 11239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11140,
											"end": 11174,
											"name": "PUSH",
											"source": 9,
											"value": "45786365656473206461696C79204445582074726164696E67206C696D697420"
										},
										{
											"begin": 11136,
											"end": 11137,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11128,
											"end": 11134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11124,
											"end": 11138,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11117,
											"end": 11175,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11209,
											"end": 11231,
											"name": "PUSH",
											"source": 9,
											"value": "6F66203130206D696C6C696F6E20746F6B656E73000000000000000000000000"
										},
										{
											"begin": 11204,
											"end": 11206,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11196,
											"end": 11202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11192,
											"end": 11207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11185,
											"end": 11232,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11000,
											"end": 11239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11000,
											"end": 11239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11245,
											"end": 11611,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 11245,
											"end": 11611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11408,
											"end": 11475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 11472,
											"end": 11474,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 11467,
											"end": 11470,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 11408,
											"end": 11475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11475,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 11408,
											"end": 11475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11401,
											"end": 11475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11401,
											"end": 11475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 11573,
											"end": 11576,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 11484,
											"end": 11577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11577,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 11484,
											"end": 11577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11602,
											"end": 11604,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11597,
											"end": 11600,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11593,
											"end": 11605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11586,
											"end": 11605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11586,
											"end": 11605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11245,
											"end": 11611,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11245,
											"end": 11611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11245,
											"end": 11611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11245,
											"end": 11611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11617,
											"end": 12036,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 11617,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11783,
											"end": 11787,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11821,
											"end": 11823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11810,
											"end": 11819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11806,
											"end": 11824,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11798,
											"end": 11824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11798,
											"end": 11824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11870,
											"end": 11879,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11864,
											"end": 11868,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11860,
											"end": 11880,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11856,
											"end": 11857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11845,
											"end": 11854,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11841,
											"end": 11858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 11881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 12024,
											"end": 12028,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 11898,
											"end": 12029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12029,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 11898,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11890,
											"end": 12029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11890,
											"end": 12029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11617,
											"end": 12036,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11617,
											"end": 12036,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11617,
											"end": 12036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11617,
											"end": 12036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12207,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 12042,
											"end": 12207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12182,
											"end": 12199,
											"name": "PUSH",
											"source": 9,
											"value": "436F6F6C646F776E206163746976650000000000000000000000000000000000"
										},
										{
											"begin": 12178,
											"end": 12179,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12170,
											"end": 12176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12166,
											"end": 12180,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12159,
											"end": 12200,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12213,
											"end": 12579,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 12213,
											"end": 12579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12355,
											"end": 12358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12376,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 12440,
											"end": 12442,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 12435,
											"end": 12438,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 12376,
											"end": 12443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12443,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 12376,
											"end": 12443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12443,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12452,
											"end": 12545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 12541,
											"end": 12544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12452,
											"end": 12545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 12452,
											"end": 12545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12452,
											"end": 12545,
											"name": "tag",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 12452,
											"end": 12545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12572,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12565,
											"end": 12568,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12554,
											"end": 12573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12554,
											"end": 12573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12213,
											"end": 12579,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12213,
											"end": 12579,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12213,
											"end": 12579,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12213,
											"end": 12579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12585,
											"end": 13004,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 12585,
											"end": 13004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12751,
											"end": 12755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12789,
											"end": 12791,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12778,
											"end": 12787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12766,
											"end": 12792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12766,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12838,
											"end": 12847,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12832,
											"end": 12836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 12848,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12824,
											"end": 12825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12813,
											"end": 12822,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12809,
											"end": 12826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12802,
											"end": 12849,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12866,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 12992,
											"end": 12996,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12866,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 12866,
											"end": 12997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12866,
											"end": 12997,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 12866,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12858,
											"end": 12997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12858,
											"end": 12997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12585,
											"end": 13004,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12585,
											"end": 13004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12585,
											"end": 13004,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12585,
											"end": 13004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13010,
											"end": 13177,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 13010,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13150,
											"end": 13169,
											"name": "PUSH",
											"source": 9,
											"value": "486F6C642074696D65206E6F74206D6574000000000000000000000000000000"
										},
										{
											"begin": 13146,
											"end": 13147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13138,
											"end": 13144,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13134,
											"end": 13148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13170,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13010,
											"end": 13177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13010,
											"end": 13177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13549,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 13183,
											"end": 13549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13325,
											"end": 13328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13346,
											"end": 13413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 13410,
											"end": 13412,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 13405,
											"end": 13408,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13346,
											"end": 13413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 13346,
											"end": 13413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13346,
											"end": 13413,
											"name": "tag",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 13346,
											"end": 13413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13339,
											"end": 13413,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13339,
											"end": 13413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13422,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 13511,
											"end": 13514,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13422,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 13422,
											"end": 13515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13422,
											"end": 13515,
											"name": "tag",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 13422,
											"end": 13515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13540,
											"end": 13542,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13535,
											"end": 13538,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13531,
											"end": 13543,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13524,
											"end": 13543,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13524,
											"end": 13543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13549,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13555,
											"end": 13974,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 13555,
											"end": 13974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13721,
											"end": 13725,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13759,
											"end": 13761,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13748,
											"end": 13757,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13744,
											"end": 13762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13736,
											"end": 13762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13736,
											"end": 13762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13808,
											"end": 13817,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13802,
											"end": 13806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13798,
											"end": 13818,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13794,
											"end": 13795,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13783,
											"end": 13792,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13779,
											"end": 13796,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13772,
											"end": 13819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13836,
											"end": 13967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 13962,
											"end": 13966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13836,
											"end": 13967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 13836,
											"end": 13967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13836,
											"end": 13967,
											"name": "tag",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 13836,
											"end": 13967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13828,
											"end": 13967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13828,
											"end": 13967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13555,
											"end": 13974,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13555,
											"end": 13974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13555,
											"end": 13974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13555,
											"end": 13974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13980,
											"end": 14147,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 13980,
											"end": 14147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14120,
											"end": 14139,
											"name": "PUSH",
											"source": 9,
											"value": "496E76616C696420726563697069656E74000000000000000000000000000000"
										},
										{
											"begin": 14116,
											"end": 14117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 14114,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14104,
											"end": 14118,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14097,
											"end": 14140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13980,
											"end": 14147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13980,
											"end": 14147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14153,
											"end": 14519,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 14153,
											"end": 14519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14295,
											"end": 14298,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14316,
											"end": 14383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 14380,
											"end": 14382,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 14375,
											"end": 14378,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14316,
											"end": 14383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 14316,
											"end": 14383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14316,
											"end": 14383,
											"name": "tag",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 14316,
											"end": 14383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14309,
											"end": 14383,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14309,
											"end": 14383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14392,
											"end": 14485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 14481,
											"end": 14484,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14392,
											"end": 14485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 14392,
											"end": 14485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14392,
											"end": 14485,
											"name": "tag",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 14392,
											"end": 14485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14510,
											"end": 14512,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14505,
											"end": 14508,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14501,
											"end": 14513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14494,
											"end": 14513,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14494,
											"end": 14513,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14153,
											"end": 14519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14153,
											"end": 14519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14153,
											"end": 14519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14153,
											"end": 14519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14525,
											"end": 14944,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 14525,
											"end": 14944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14691,
											"end": 14695,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14729,
											"end": 14731,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14718,
											"end": 14727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14714,
											"end": 14732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14706,
											"end": 14732,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14706,
											"end": 14732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14778,
											"end": 14787,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14772,
											"end": 14776,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14768,
											"end": 14788,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14764,
											"end": 14765,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14753,
											"end": 14762,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14749,
											"end": 14766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14742,
											"end": 14789,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14806,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 14932,
											"end": 14936,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14806,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 14806,
											"end": 14937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14806,
											"end": 14937,
											"name": "tag",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 14806,
											"end": 14937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14798,
											"end": 14937,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14798,
											"end": 14937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14525,
											"end": 14944,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14525,
											"end": 14944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14525,
											"end": 14944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14525,
											"end": 14944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14950,
											"end": 15130,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 14950,
											"end": 15130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14998,
											"end": 15075,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14995,
											"end": 14996,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14988,
											"end": 15076,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15095,
											"end": 15099,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 15092,
											"end": 15093,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15085,
											"end": 15100,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15119,
											"end": 15123,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15116,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15109,
											"end": 15124,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15136,
											"end": 15317,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 15136,
											"end": 15317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15276,
											"end": 15309,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 15272,
											"end": 15273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15264,
											"end": 15270,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15260,
											"end": 15274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15253,
											"end": 15310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15136,
											"end": 15317,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15136,
											"end": 15317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15323,
											"end": 15689,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 15323,
											"end": 15689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15465,
											"end": 15468,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15486,
											"end": 15553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 15550,
											"end": 15552,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15545,
											"end": 15548,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15486,
											"end": 15553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 15486,
											"end": 15553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15486,
											"end": 15553,
											"name": "tag",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 15486,
											"end": 15553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15479,
											"end": 15553,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15479,
											"end": 15553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15562,
											"end": 15655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 15651,
											"end": 15654,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15562,
											"end": 15655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 15562,
											"end": 15655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15562,
											"end": 15655,
											"name": "tag",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 15562,
											"end": 15655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15680,
											"end": 15682,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15675,
											"end": 15678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15671,
											"end": 15683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15664,
											"end": 15683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15664,
											"end": 15683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15323,
											"end": 15689,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15323,
											"end": 15689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15323,
											"end": 15689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15323,
											"end": 15689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15695,
											"end": 16114,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 15695,
											"end": 16114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15861,
											"end": 15865,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15899,
											"end": 15901,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15888,
											"end": 15897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15884,
											"end": 15902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 15902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 15902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15942,
											"end": 15946,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15938,
											"end": 15958,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15934,
											"end": 15935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15923,
											"end": 15932,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15919,
											"end": 15936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15912,
											"end": 15959,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15976,
											"end": 16107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 16102,
											"end": 16106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15976,
											"end": 16107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 15976,
											"end": 16107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15976,
											"end": 16107,
											"name": "tag",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 15976,
											"end": 16107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15968,
											"end": 16107,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15968,
											"end": 16107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15695,
											"end": 16114,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15695,
											"end": 16114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15695,
											"end": 16114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15695,
											"end": 16114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16120,
											"end": 16562,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 16120,
											"end": 16562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16269,
											"end": 16273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16307,
											"end": 16309,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16296,
											"end": 16305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16292,
											"end": 16310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16284,
											"end": 16310,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16284,
											"end": 16310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16320,
											"end": 16391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "607"
										},
										{
											"begin": 16388,
											"end": 16389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16377,
											"end": 16386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16373,
											"end": 16390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16364,
											"end": 16370,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16320,
											"end": 16391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 16320,
											"end": 16391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16320,
											"end": 16391,
											"name": "tag",
											"source": 9,
											"value": "607"
										},
										{
											"begin": 16320,
											"end": 16391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16401,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 16469,
											"end": 16471,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16458,
											"end": 16467,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16454,
											"end": 16472,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16445,
											"end": 16451,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16401,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 16401,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16401,
											"end": 16473,
											"name": "tag",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 16401,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16483,
											"end": 16555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 16551,
											"end": 16553,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16549,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16536,
											"end": 16554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16527,
											"end": 16533,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16483,
											"end": 16555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 16483,
											"end": 16555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16483,
											"end": 16555,
											"name": "tag",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 16483,
											"end": 16555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16120,
											"end": 16562,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 16120,
											"end": 16562,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 16120,
											"end": 16562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16120,
											"end": 16562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16120,
											"end": 16562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16120,
											"end": 16562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16120,
											"end": 16562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/new.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DAILY_TRADE_LIMIT()": "566e5993",
							"MAX_SUPPLY()": "32cb6b0c",
							"MAX_TRANSFER_AMOUNT()": "fc1b3113",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchSetCexAddresses(address[],bool)": "5f87f0eb",
							"batchSetDexPools(address[],bool)": "ab09413d",
							"batchUpdateBlacklist(address[],bool)": "6072e6a8",
							"batchUpdateWhitelist(address[],bool)": "611274c5",
							"dailyTradedAmount(address)": "8b6a8fbf",
							"decimals()": "313ce567",
							"initialized()": "158ef93e",
							"isBlacklisted(address)": "fe575a87",
							"isCexAddress(address)": "dd386477",
							"isDexPool(address)": "2357edb3",
							"isWhitelisted(address)": "3af32abf",
							"lastTradeTimestamp(address)": "e26ffe08",
							"lastTransferTime(address)": "0d2d8a31",
							"minHoldTime()": "330671ad",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setCexAddress(address,bool)": "90389b83",
							"setDexPool(address,bool)": "5112f297",
							"symbol()": "95d89b41",
							"tokenReceiveTime(address)": "283af019",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferCooldown()": "68f16293",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateBlacklist(address,bool)": "9155e083",
							"updateSecurityParams(uint256,uint256)": "058c72fc",
							"updateWhitelist(address,bool)": "0d392cd9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"BlacklistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cex\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"CexAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"DexPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newHoldTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCooldown\",\"type\":\"uint256\"}],\"name\":\"SecurityParamsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initialHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"WhitelistUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAILY_TRADE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TRANSFER_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"cexes\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"batchSetCexAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"batchSetDexPools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"batchUpdateBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"batchUpdateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dailyTradedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isCexAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDexPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastTradeTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastTransferTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minHoldTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cex\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setCexAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setDexPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenReceiveTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"updateBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_holdTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cooldown\",\"type\":\"uint256\"}],\"name\":\"updateSecurityParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"updateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/new.sol\":\"Prophecy_Jimpsons\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/new.sol\":{\"keccak256\":\"0xb1eab1b6d523d3df995d6d72e5c5966bcd81de5ee7062a13c92b32b40057a38d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f4a9f9cee822a9d9d7e800bbfd8a50350b8c07580668e39095b399381e85ea6\",\"dweb:/ipfs/QmWnuBBaBk9Q5VnypfNUMWRuP5YdJvkQGCu3W8BcKYsmSX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1350,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "initialized",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1352,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "minHoldTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1356,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "lastTransferTime",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1360,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "tokenReceiveTime",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1364,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "isBlacklisted",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1368,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "isWhitelisted",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1370,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "transferCooldown",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1374,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "isDexPool",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1378,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "isCexAddress",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1382,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "dailyTradedAmount",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1386,
								"contract": "contracts/new.sol:Prophecy_Jimpsons",
								"label": "lastTradeTimestamp",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 999,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								998
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 969,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 968,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 999,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								968,
								942,
								998
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 864,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 864,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 864,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 864,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 864,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 864,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 864,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 864,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 864,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 864,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 864,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 864,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 864,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 864,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 864,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 864,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10504:388:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10576:310:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10619:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10637:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10656:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10633:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10663:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10715:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10724:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10742:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10813:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10820:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10829:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10848:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10804:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 864,
									"src": "10415:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9788:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10790:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 943,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 948,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:5"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 968,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 968,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 968,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 969,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 978,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 998,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 984,
												"id": 987,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 998,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 993,
												"id": 995,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 998,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1310
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1001,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1310,
							"linearizedBaseContracts": [
								1310
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 1031,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															1014
														],
														"declarations": [
															{
																"constant": false,
																"id": 1014,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1031,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1013,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1018,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1015,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1016,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1020,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1026,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1024,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1012,
															"id": 1025,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1028,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1029,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1012,
														"id": 1030,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1008,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 1310,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 1059,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1046,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1052,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1050,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1044,
															"id": 1051,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1054,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1055,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1057,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1044,
														"id": 1058,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 1310,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 1101,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1080,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1072,
															"id": 1079,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															1082
														],
														"declarations": [
															{
																"constant": false,
																"id": 1082,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1101,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1081,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1086,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1083,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1084,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1087,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1088,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1090,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1096,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1094,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1072,
															"id": 1095,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1098,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1099,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1072,
														"id": 1100,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1068,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 1310,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 1129,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1115,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1122,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1120,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1114,
															"id": 1121,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1124,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1125,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1127,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1114,
														"id": 1128,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 1310,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 1157,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1143,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1150,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1148,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1142,
															"id": 1149,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1152,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1153,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1155,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1142,
														"id": 1156,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 1310,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1169,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1170,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1172,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 1310,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1184,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1185,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1187,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 1310,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1198,
												"id": 1202,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 1310,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1214,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1215,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1213,
												"id": 1217,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 1310,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1229,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1230,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1232,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 1310,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "5054:106:7",
										"statements": [
											{
												"id": 1257,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1247,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "5096:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1248,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "5101:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1250,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "5104:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1246,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1252,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1253,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "5138:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1254,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "5142:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1245,
														"id": 1256,
														"nodeType": "Return",
														"src": "5131:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "4972:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "4983:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "4994:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:7"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5045:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:7"
									},
									"scope": 1310,
									"src": "4959:201:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "5739:105:7",
										"statements": [
											{
												"id": 1282,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1272,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "5781:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1275,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "5788:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1271,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1277,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1278,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "5822:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "5826:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1270,
														"id": 1281,
														"nodeType": "Return",
														"src": "5815:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5679:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:7"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5730:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:7"
									},
									"scope": 1310,
									"src": "5644:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "6585:105:7",
										"statements": [
											{
												"id": 1307,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1297,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1289,
																		"src": "6627:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1300,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "6634:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1296,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1302,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1303,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "6668:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1304,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "6672:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1295,
														"id": 1306,
														"nodeType": "Return",
														"src": "6661:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6503:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6514:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6525:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:7"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6576:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:7"
									},
									"scope": 1310,
									"src": "6490:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1311,
							"src": "482:6210:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:7"
				},
				"id": 7
			},
			"contracts/new.sol": {
				"ast": {
					"absolutePath": "contracts/new.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						],
						"Ownable": [
							147
						],
						"Prophecy_Jimpsons": [
							1978
						],
						"ReentrancyGuard": [
							349
						],
						"SafeMath": [
							1310
						]
					},
					"id": 1979,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1979,
							"sourceUnit": 865,
							"src": "61:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1979,
							"sourceUnit": 148,
							"src": "118:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1315,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1979,
							"sourceUnit": 350,
							"src": "172:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1979,
							"sourceUnit": 1311,
							"src": "236:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1317,
										"name": "ERC20",
										"nameLocations": [
											"327:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "327:5:8"
									},
									"id": 1318,
									"nodeType": "InheritanceSpecifier",
									"src": "327:5:8"
								},
								{
									"arguments": [
										{
											"expression": {
												"id": 1320,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "342:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 1321,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "346:6:8",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "342:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 1319,
										"name": "Ownable",
										"nameLocations": [
											"334:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "334:7:8"
									},
									"id": 1322,
									"nodeType": "InheritanceSpecifier",
									"src": "334:19:8"
								},
								{
									"baseName": {
										"id": 1323,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"355:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "355:15:8"
									},
									"id": 1324,
									"nodeType": "InheritanceSpecifier",
									"src": "355:15:8"
								}
							],
							"canonicalName": "Prophecy_Jimpsons",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1978,
							"linearizedBaseContracts": [
								1978,
								349,
								147,
								864,
								189,
								968,
								942,
								998
							],
							"name": "Prophecy_Jimpsons",
							"nameLocation": "306:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1327,
									"libraryName": {
										"id": 1325,
										"name": "SafeMath",
										"nameLocations": [
											"384:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "384:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "378:27:8",
									"typeName": {
										"id": 1326,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "397:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 1334,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "437:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "413:60:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1328,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "413:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000000"
										},
										"id": 1333,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31305f3030305f3030305f303030",
											"id": 1329,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "450:14:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "10_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1332,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1330,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "467:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1331,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "471:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "467:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "450:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "566e5993",
									"id": 1341,
									"mutability": "constant",
									"name": "DAILY_TRADE_LIMIT",
									"nameLocation": "504:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "480:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1335,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "480:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										},
										"id": 1340,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130305f3030305f303030",
											"id": 1336,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "524:11:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000_by_1",
												"typeString": "int_const 100000000"
											},
											"value": "100_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1339,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1337,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "538:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1338,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "542:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "538:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "524:20:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "fc1b3113",
									"id": 1348,
									"mutability": "constant",
									"name": "MAX_TRANSFER_AMOUNT",
									"nameLocation": "604:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "580:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1342,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "580:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										},
										"id": 1347,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31305f3030305f303030",
											"id": 1343,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "626:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000_by_1",
												"typeString": "int_const 10000000"
											},
											"value": "10_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1346,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1344,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "639:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1345,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "643:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "639:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "626:19:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "158ef93e",
									"id": 1350,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "698:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "686:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1349,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "686:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "330671ad",
									"id": 1352,
									"mutability": "mutable",
									"name": "minHoldTime",
									"nameLocation": "776:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "761:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1351,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "761:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d2d8a31",
									"id": 1356,
									"mutability": "mutable",
									"name": "lastTransferTime",
									"nameLocation": "843:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "808:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1355,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "816:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "808:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1354,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "827:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "283af019",
									"id": 1360,
									"mutability": "mutable",
									"name": "tokenReceiveTime",
									"nameLocation": "901:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "866:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1359,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1357,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "866:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1358,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "885:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fe575a87",
									"id": 1364,
									"mutability": "mutable",
									"name": "isBlacklisted",
									"nameLocation": "958:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "926:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1363,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "934:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "926:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1362,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "945:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3af32abf",
									"id": 1368,
									"mutability": "mutable",
									"name": "isWhitelisted",
									"nameLocation": "1018:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "986:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1367,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1365,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "994:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "986:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1366,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1005:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "68f16293",
									"id": 1370,
									"mutability": "mutable",
									"name": "transferCooldown",
									"nameLocation": "1061:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "1046:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1369,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1046:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2357edb3",
									"id": 1374,
									"mutability": "mutable",
									"name": "isDexPool",
									"nameLocation": "1148:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "1116:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1373,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1371,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1124:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1116:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1372,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1135:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd386477",
									"id": 1378,
									"mutability": "mutable",
									"name": "isCexAddress",
									"nameLocation": "1196:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "1164:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1377,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1375,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1172:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1164:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1376,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1183:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b6a8fbf",
									"id": 1382,
									"mutability": "mutable",
									"name": "dailyTradedAmount",
									"nameLocation": "1281:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "1246:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1381,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1379,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1254:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1246:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1380,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1265:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e26ffe08",
									"id": 1386,
									"mutability": "mutable",
									"name": "lastTradeTimestamp",
									"nameLocation": "1340:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1978,
									"src": "1305:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1385,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1383,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1313:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1305:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1384,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1324:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9d5570c03a71af73640da09c132d73bb3efe7ca4f55516a1afc2597cbdfd620c",
									"id": 1392,
									"name": "TokensInitialized",
									"nameLocation": "1392:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"indexed": true,
												"mutability": "mutable",
												"name": "initialHolder",
												"nameLocation": "1426:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1410:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1449:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1441:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1441:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1409:47:8"
									},
									"src": "1386:71:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac",
									"id": 1398,
									"name": "BlacklistUpdated",
									"nameLocation": "1469:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1502:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1486:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1516:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1511:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1395,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1511:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:38:8"
									},
									"src": "1463:61:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
									"id": 1404,
									"name": "WhitelistUpdated",
									"nameLocation": "1536:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1569:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "1553:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1553:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1583:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "1578:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1578:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1552:38:8"
									},
									"src": "1530:61:8"
								},
								{
									"anonymous": false,
									"eventSelector": "087ae58f1cb2baf6f5ac7d2f6391a7f26d2e2951312c6eab3761fc754d202de7",
									"id": 1410,
									"name": "DexPoolUpdated",
									"nameLocation": "1603:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1634:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "1618:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1618:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1645:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "1640:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1407,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1640:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1617:35:8"
									},
									"src": "1597:56:8"
								},
								{
									"anonymous": false,
									"eventSelector": "8295e5e995acec8dc9c9248f8db461aeba392bc756bb3db82e642667cc464ae6",
									"id": 1416,
									"name": "CexAddressUpdated",
									"nameLocation": "1665:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"indexed": true,
												"mutability": "mutable",
												"name": "cex",
												"nameLocation": "1699:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "1683:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1709:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "1704:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1704:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:34:8"
									},
									"src": "1659:58:8"
								},
								{
									"anonymous": false,
									"eventSelector": "2c406ebfcb3eb7487c720dd90f3be04648d6606bad1837fd5363cd02f3dd1ef6",
									"id": 1422,
									"name": "SecurityParamsUpdated",
									"nameLocation": "1729:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"indexed": false,
												"mutability": "mutable",
												"name": "newHoldTime",
												"nameLocation": "1769:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "1761:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"indexed": false,
												"mutability": "mutable",
												"name": "newCooldown",
												"nameLocation": "1799:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "1791:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1750:67:8"
									},
									"src": "1723:95:8"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "1875:335:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1894:12:8",
															"subExpression": {
																"id": 1430,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "1895:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e697469616c697a6564",
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1908:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															},
															"value": "Already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															}
														],
														"id": 1429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1886:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1886:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "1886:44:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1436,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1957:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1961:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1957:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1438,
															"name": "MAX_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "1969:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1435,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1951:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "1951:29:8"
											},
											{
												"expression": {
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1441,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "2001:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2015:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2001:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "2001:18:8"
											},
											{
												"expression": {
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1445,
														"name": "minHoldTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "2030:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2044:6:8",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "2030:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "2030:20:8"
											},
											{
												"expression": {
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1449,
														"name": "transferCooldown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "2061:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3630",
														"id": 1450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2080:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "60"
													},
													"src": "2061:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:8"
											},
											{
												"expression": {
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1453,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "2103:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1456,
														"indexExpression": {
															"expression": {
																"id": 1454,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2117:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2121:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2117:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2103:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2131:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2103:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "2103:32:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2179:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2183:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2179:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1463,
															"name": "MAX_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "2191:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1460,
														"name": "TokensInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "2161:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "EmitStatement",
												"src": "2156:46:8"
											}
										]
									},
									"id": 1467,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "50726f7068656379204a696d70736f6e73",
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1846:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4a6809af9a814177b64cc5f98399acebdf36c69226896a4f8b90c4f63142b786",
														"typeString": "literal_string \"Prophecy Jimpsons\""
													},
													"value": "Prophecy Jimpsons"
												},
												{
													"hexValue": "5a696d70",
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1867:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_bb9d1d75929e495605e94319220a72c22505e2e49d0ae45a32a0c5da231457e8",
														"typeString": "literal_string \"Zimp\""
													},
													"value": "Zimp"
												}
											],
											"id": 1427,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1424,
												"name": "ERC20",
												"nameLocations": [
													"1840:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "1840:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1840:34:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1837:2:8"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1875:0:8"
									},
									"scope": 1978,
									"src": "1826:384:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "2396:1306:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2411:20:8",
																"subExpression": {
																	"baseExpression": {
																		"id": 1476,
																		"name": "isBlacklisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1364,
																		"src": "2412:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1478,
																	"indexExpression": {
																		"id": 1477,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1469,
																		"src": "2426:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2412:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2435:18:8",
																"subExpression": {
																	"baseExpression": {
																		"id": 1480,
																		"name": "isBlacklisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1364,
																		"src": "2436:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1482,
																	"indexExpression": {
																		"id": 1481,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "2450:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2436:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2411:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320626c61636b6c6973746564",
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2455:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																"typeString": "literal_string \"Address is blacklisted\""
															},
															"value": "Address is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																"typeString": "literal_string \"Address is blacklisted\""
															}
														],
														"id": 1475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2403:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2403:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "2403:77:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1488,
																"name": "isDexPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "2585:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1490,
															"indexExpression": {
																"id": 1489,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "2595:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2585:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1491,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2604:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2608:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2604:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1493,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "2618:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2618:7:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2604:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2585:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "2629:26:8",
														"subExpression": {
															"baseExpression": {
																"id": 1497,
																"name": "isWhitelisted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "2630:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1500,
															"indexExpression": {
																"expression": {
																	"id": 1498,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2644:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2648:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2644:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2630:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2585:70:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1556,
												"nodeType": "IfStatement",
												"src": "2581:677:8",
												"trueBody": {
													"id": 1555,
													"nodeType": "Block",
													"src": "2657:601:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1503,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2755:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2761:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2755:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1505,
																			"name": "lastTradeTimestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1386,
																			"src": "2773:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1508,
																		"indexExpression": {
																			"expression": {
																				"id": 1506,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2792:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2796:6:8",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2792:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2773:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:6:8",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		},
																		"value": "1"
																	},
																	"src": "2773:39:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2755:57:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1528,
															"nodeType": "IfStatement",
															"src": "2751:186:8",
															"trueBody": {
																"id": 1527,
																"nodeType": "Block",
																"src": "2814:123:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1512,
																					"name": "dailyTradedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1382,
																					"src": "2829:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1515,
																				"indexExpression": {
																					"expression": {
																						"id": 1513,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2847:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1514,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2851:6:8",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2847:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2829:29:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2861:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2829:33:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1518,
																		"nodeType": "ExpressionStatement",
																		"src": "2829:33:8"
																	},
																	{
																		"expression": {
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1519,
																					"name": "lastTradeTimestamp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1386,
																					"src": "2877:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1522,
																				"indexExpression": {
																					"expression": {
																						"id": 1520,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2896:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1521,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2900:6:8",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2896:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2877:30:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1523,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2910:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2916:9:8",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2910:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2877:48:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1526,
																		"nodeType": "ExpressionStatement",
																		"src": "2877:48:8"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1535,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1473,
																					"src": "3017:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"baseExpression": {
																						"id": 1530,
																						"name": "dailyTradedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1382,
																						"src": "2983:17:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1533,
																					"indexExpression": {
																						"expression": {
																							"id": 1531,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "3001:3:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1532,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3005:6:8",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "3001:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2983:29:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3013:3:8",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1174,
																				"src": "2983:33:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2983:41:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1537,
																			"name": "DAILY_TRADE_LIMIT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1341,
																			"src": "3028:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2983:62:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45786365656473206461696c79204445582074726164696e67206c696d6974206f66203130206d696c6c696f6e20746f6b656e73",
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3060:54:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73",
																			"typeString": "literal_string \"Exceeds daily DEX trading limit of 10 million tokens\""
																		},
																		"value": "Exceeds daily DEX trading limit of 10 million tokens"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a8f1f73db545b57a16f712c016ac43715cf85c8df7d600fcecb7b21b7b11da73",
																			"typeString": "literal_string \"Exceeds daily DEX trading limit of 10 million tokens\""
																		}
																	],
																	"id": 1529,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2949:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2949:176:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1541,
															"nodeType": "ExpressionStatement",
															"src": "2949:176:8"
														},
														{
															"expression": {
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1542,
																		"name": "dailyTradedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "3177:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1545,
																	"indexExpression": {
																		"expression": {
																			"id": 1543,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3195:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3199:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3195:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3177:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1551,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "3243:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1546,
																				"name": "dailyTradedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "3209:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1549,
																			"indexExpression": {
																				"expression": {
																					"id": 1547,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3227:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3231:6:8",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3227:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3209:29:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3239:3:8",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1174,
																		"src": "3209:33:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3209:41:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3177:73:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1554,
															"nodeType": "ExpressionStatement",
															"src": "3177:73:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3325:19:8",
																"subExpression": {
																	"baseExpression": {
																		"id": 1557,
																		"name": "isCexAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "3326:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1559,
																	"indexExpression": {
																		"id": 1558,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1469,
																		"src": "3339:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3326:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3348:17:8",
																"subExpression": {
																	"baseExpression": {
																		"id": 1561,
																		"name": "isCexAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "3349:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1563,
																	"indexExpression": {
																		"id": 1562,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "3362:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3349:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3325:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3369:20:8",
															"subExpression": {
																"baseExpression": {
																	"id": 1566,
																	"name": "isWhitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "3370:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1568,
																"indexExpression": {
																	"id": 1567,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "3384:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3370:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3325:64:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3393:18:8",
														"subExpression": {
															"baseExpression": {
																"id": 1571,
																"name": "isWhitelisted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "3394:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1573,
															"indexExpression": {
																"id": 1572,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "3408:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3394:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3325:86:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1610,
												"nodeType": "IfStatement",
												"src": "3321:370:8",
												"trueBody": {
													"id": 1609,
													"nodeType": "Block",
													"src": "3413:278:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1577,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3432:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3438:9:8",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3432:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1583,
																					"name": "transferCooldown",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1370,
																					"src": "3478:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"baseExpression": {
																						"id": 1579,
																						"name": "lastTransferTime",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1356,
																						"src": "3451:16:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1581,
																					"indexExpression": {
																						"id": 1580,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1469,
																						"src": "3468:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3451:22:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3474:3:8",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1174,
																				"src": "3451:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3451:44:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3432:63:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "436f6f6c646f776e20616374697665",
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3497:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5",
																			"typeString": "literal_string \"Cooldown active\""
																		},
																		"value": "Cooldown active"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5",
																			"typeString": "literal_string \"Cooldown active\""
																		}
																	],
																	"id": 1576,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3424:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3424:91:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1588,
															"nodeType": "ExpressionStatement",
															"src": "3424:91:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1589,
																		"name": "tokenReceiveTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "3540:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1591,
																	"indexExpression": {
																		"id": 1590,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1469,
																		"src": "3557:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3540:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3566:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3540:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1608,
															"nodeType": "IfStatement",
															"src": "3536:148:8",
															"trueBody": {
																"id": 1607,
																"nodeType": "Block",
																"src": "3569:115:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1603,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1595,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "3592:5:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1596,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3598:9:8",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "3592:15:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 1601,
																								"name": "minHoldTime",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "3638:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"id": 1597,
																									"name": "tokenReceiveTime",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1360,
																									"src": "3611:16:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 1599,
																								"indexExpression": {
																									"id": 1598,
																									"name": "from",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1469,
																									"src": "3628:4:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3611:22:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1600,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3634:3:8",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1174,
																							"src": "3611:26:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1602,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3611:39:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3592:58:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "486f6c642074696d65206e6f74206d6574",
																					"id": 1604,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3652:19:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374",
																						"typeString": "literal_string \"Hold time not met\""
																					},
																					"value": "Hold time not met"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_ad589ee5e7a9fae7f1c9814dacb437dcb70b10fc5259150cb29d355f50ebd374",
																						"typeString": "literal_string \"Hold time not met\""
																					}
																				],
																				"id": 1594,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "3584:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3584:88:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1606,
																		"nodeType": "ExpressionStatement",
																		"src": "3584:88:8"
																	}
																]
															}
														}
													]
												}
											},
											{
												"id": 1611,
												"nodeType": "PlaceholderStatement",
												"src": "3697:1:8"
											}
										]
									},
									"id": 1613,
									"name": "transferCompliance",
									"nameLocation": "2335:18:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2362:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2354:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2376:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2368:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2388:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2380:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2380:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:42:8"
									},
									"src": "2326:1376:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										474
									],
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "3899:215:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1632,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "3918:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3932:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3924:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1633,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3924:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3924:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3918:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e74",
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3936:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															},
															"value": "Invalid recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															}
														],
														"id": 1631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3910:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3910:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "3910:46:8"
											},
											{
												"expression": {
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1641,
															"name": "tokenReceiveTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "3967:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1643,
														"indexExpression": {
															"id": 1642,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "3984:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3967:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1644,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3990:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3996:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3990:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3967:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "3967:38:8"
											},
											{
												"expression": {
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1648,
															"name": "lastTransferTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "4016:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1651,
														"indexExpression": {
															"expression": {
																"id": 1649,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4033:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4037:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4033:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4016:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1652,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4047:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4053:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4047:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4016:46:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "4016:46:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1658,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "4095:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1659,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "4099:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1656,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4080:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Prophecy_Jimpsons_$1978_$",
																"typeString": "type(contract super Prophecy_Jimpsons)"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4086:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "4080:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4080:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1661,
												"nodeType": "Return",
												"src": "4073:33:8"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1621,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3821:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3825:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3821:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1623,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1615,
													"src": "3833:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1624,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1617,
													"src": "3837:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1625,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1620,
												"name": "transferCompliance",
												"nameLocations": [
													"3802:18:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1613,
												"src": "3802:18:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3802:42:8"
										},
										{
											"id": 1627,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1626,
												"name": "nonReentrant",
												"nameLocations": [
													"3855:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "3855:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3855:12:8"
										}
									],
									"name": "transfer",
									"nameLocation": "3719:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1619,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3783:8:8"
									},
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3736:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "3728:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3728:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3748:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "3740:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3740:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3727:28:8"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "3887:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3887:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:6:8"
									},
									"scope": 1978,
									"src": "3710:404:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										547
									],
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "4317:219:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1683,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "4336:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4350:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4342:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1684,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4342:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4342:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4336:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e74",
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4354:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															},
															"value": "Invalid recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															}
														],
														"id": 1682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4328:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4328:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1691,
												"nodeType": "ExpressionStatement",
												"src": "4328:46:8"
											},
											{
												"expression": {
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1692,
															"name": "tokenReceiveTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "4385:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1694,
														"indexExpression": {
															"id": 1693,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "4402:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4385:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1695,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4408:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4414:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4408:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4385:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "4385:38:8"
											},
											{
												"expression": {
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1699,
															"name": "lastTransferTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "4434:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1701,
														"indexExpression": {
															"id": 1700,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "4451:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4434:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1702,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4459:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4465:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4459:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4434:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "4434:40:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1708,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "4511:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1709,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "4517:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1710,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "4521:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1706,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4492:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Prophecy_Jimpsons_$1978_$",
																"typeString": "type(contract super Prophecy_Jimpsons)"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4498:12:8",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 547,
														"src": "4492:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4492:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1681,
												"id": 1712,
												"nodeType": "Return",
												"src": "4485:43:8"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1673,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1665,
													"src": "4248:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1674,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1667,
													"src": "4254:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1675,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1669,
													"src": "4258:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1676,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1672,
												"name": "transferCompliance",
												"nameLocations": [
													"4229:18:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1613,
												"src": "4229:18:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4229:36:8"
										},
										{
											"id": 1678,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1677,
												"name": "nonReentrant",
												"nameLocations": [
													"4275:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "4275:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4275:12:8"
										}
									],
									"name": "transferFrom",
									"nameLocation": "4131:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1671,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4211:8:8"
									},
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4152:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "4144:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4144:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4166:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "4158:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4158:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4178:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "4170:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4170:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4143:42:8"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "4306:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4306:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4305:6:8"
									},
									"scope": 1978,
									"src": "4122:414:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "4647:87:8",
										"statements": [
											{
												"expression": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1723,
															"name": "isDexPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "4658:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1725,
														"indexExpression": {
															"id": 1724,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "4668:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4658:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1726,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "4676:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4658:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "4658:24:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1730,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "4713:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1731,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "4719:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1729,
														"name": "DexPoolUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "4698:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4698:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "EmitStatement",
												"src": "4693:33:8"
											}
										]
									},
									"functionSelector": "5112f297",
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1721,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1720,
												"name": "onlyOwner",
												"nameLocations": [
													"4637:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4637:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4637:9:8"
										}
									],
									"name": "setDexPool",
									"nameLocation": "4590:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "4609:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "4601:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4601:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "4620:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "4615:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1717,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4615:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4600:27:8"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4647:0:8"
									},
									"scope": 1978,
									"src": "4581:153:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "4810:91:8",
										"statements": [
											{
												"expression": {
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1744,
															"name": "isCexAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4821:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1746,
														"indexExpression": {
															"id": 1745,
															"name": "cex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "4834:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4821:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1747,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "4841:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4821:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "4821:26:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1751,
															"name": "cex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "4881:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1752,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "4886:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1750,
														"name": "CexAddressUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "4863:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4863:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1754,
												"nodeType": "EmitStatement",
												"src": "4858:35:8"
											}
										]
									},
									"functionSelector": "90389b83",
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1742,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1741,
												"name": "onlyOwner",
												"nameLocations": [
													"4800:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4800:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4800:9:8"
										}
									],
									"name": "setCexAddress",
									"nameLocation": "4751:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "cex",
												"nameLocation": "4773:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "4765:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "4783:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "4778:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4778:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4764:26:8"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4810:0:8"
									},
									"scope": 1978,
									"src": "4742:159:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "5028:167:8",
										"statements": [
											{
												"body": {
													"id": 1792,
													"nodeType": "Block",
													"src": "5081:107:8",
													"statements": [
														{
															"expression": {
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1777,
																		"name": "isDexPool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1374,
																		"src": "5096:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1781,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1778,
																			"name": "pools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1759,
																			"src": "5106:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1780,
																		"indexExpression": {
																			"id": 1779,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1767,
																			"src": "5112:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5106:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5096:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1782,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "5118:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5096:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1784,
															"nodeType": "ExpressionStatement",
															"src": "5096:28:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1786,
																			"name": "pools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1759,
																			"src": "5159:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1788,
																		"indexExpression": {
																			"id": 1787,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1767,
																			"src": "5165:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5159:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1789,
																		"name": "status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "5169:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1785,
																	"name": "DexPoolUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "5144:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,bool)"
																	}
																},
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5144:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1791,
															"nodeType": "EmitStatement",
															"src": "5139:37:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1770,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "5058:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1771,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "5062:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5068:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5062:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5058:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1793,
												"initializationExpression": {
													"assignments": [
														1767
													],
													"declarations": [
														{
															"constant": false,
															"id": 1767,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5051:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1793,
															"src": "5043:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1766,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5043:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1769,
													"initialValue": {
														"hexValue": "30",
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5055:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5043:13:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5076:3:8",
														"subExpression": {
															"id": 1774,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "5076:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1776,
													"nodeType": "ExpressionStatement",
													"src": "5076:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5039:149:8"
											}
										]
									},
									"functionSelector": "ab09413d",
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1764,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1763,
												"name": "onlyOwner",
												"nameLocations": [
													"5018:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5018:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5018:9:8"
										}
									],
									"name": "batchSetDexPools",
									"nameLocation": "4953:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "pools",
												"nameLocation": "4989:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "4970:24:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1757,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4970:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1758,
													"nodeType": "ArrayTypeName",
													"src": "4970:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "5001:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "4996:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4996:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4969:39:8"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5028:0:8"
									},
									"scope": 1978,
									"src": "4944:251:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "5291:173:8",
										"statements": [
											{
												"body": {
													"id": 1831,
													"nodeType": "Block",
													"src": "5344:113:8",
													"statements": [
														{
															"expression": {
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1816,
																		"name": "isCexAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "5359:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1820,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1817,
																			"name": "cexes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1798,
																			"src": "5372:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1819,
																		"indexExpression": {
																			"id": 1818,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1806,
																			"src": "5378:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5372:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5359:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1821,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1800,
																	"src": "5384:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5359:31:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1823,
															"nodeType": "ExpressionStatement",
															"src": "5359:31:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1825,
																			"name": "cexes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1798,
																			"src": "5428:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1827,
																		"indexExpression": {
																			"id": 1826,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1806,
																			"src": "5434:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5428:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1828,
																		"name": "status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1800,
																		"src": "5438:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1824,
																	"name": "CexAddressUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "5410:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,bool)"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5410:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1830,
															"nodeType": "EmitStatement",
															"src": "5405:40:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1809,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1806,
														"src": "5321:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1810,
															"name": "cexes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "5325:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5331:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5325:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5321:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1832,
												"initializationExpression": {
													"assignments": [
														1806
													],
													"declarations": [
														{
															"constant": false,
															"id": 1806,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5314:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1832,
															"src": "5306:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1805,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5306:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1808,
													"initialValue": {
														"hexValue": "30",
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5318:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5306:13:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5339:3:8",
														"subExpression": {
															"id": 1813,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "5339:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1815,
													"nodeType": "ExpressionStatement",
													"src": "5339:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5302:155:8"
											}
										]
									},
									"functionSelector": "5f87f0eb",
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1803,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1802,
												"name": "onlyOwner",
												"nameLocations": [
													"5281:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5281:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5281:9:8"
										}
									],
									"name": "batchSetCexAddresses",
									"nameLocation": "5212:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "cexes",
												"nameLocation": "5252:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "5233:24:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1796,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5233:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1797,
													"nodeType": "ArrayTypeName",
													"src": "5233:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "5264:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "5259:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5259:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5232:39:8"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5291:0:8"
									},
									"scope": 1978,
									"src": "5203:261:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "5585:99:8",
										"statements": [
											{
												"expression": {
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1843,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "5596:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1845,
														"indexExpression": {
															"id": 1844,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "5610:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5596:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1846,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "5621:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5596:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1848,
												"nodeType": "ExpressionStatement",
												"src": "5596:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1850,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "5660:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1851,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1838,
															"src": "5669:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1849,
														"name": "BlacklistUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "5643:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1853,
												"nodeType": "EmitStatement",
												"src": "5638:38:8"
											}
										]
									},
									"functionSelector": "9155e083",
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1841,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1840,
												"name": "onlyOwner",
												"nameLocations": [
													"5575:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5575:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5575:9:8"
										}
									],
									"name": "updateBlacklist",
									"nameLocation": "5520:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5544:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "5536:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5536:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "5558:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "5553:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5553:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5535:30:8"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5585:0:8"
									},
									"scope": 1978,
									"src": "5511:173:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "5766:99:8",
										"statements": [
											{
												"expression": {
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1864,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "5777:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1866,
														"indexExpression": {
															"id": 1865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "5791:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5777:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1867,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "5802:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5777:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1869,
												"nodeType": "ExpressionStatement",
												"src": "5777:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1871,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "5841:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1872,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "5850:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1870,
														"name": "WhitelistUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "5824:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5824:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "EmitStatement",
												"src": "5819:38:8"
											}
										]
									},
									"functionSelector": "0d392cd9",
									"id": 1876,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1862,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1861,
												"name": "onlyOwner",
												"nameLocations": [
													"5756:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5756:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5756:9:8"
										}
									],
									"name": "updateWhitelist",
									"nameLocation": "5701:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5725:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "5717:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "5739:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "5734:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5734:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5716:30:8"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5766:0:8"
									},
									"scope": 1978,
									"src": "5692:173:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "6026:187:8",
										"statements": [
											{
												"expression": {
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1885,
														"name": "minHoldTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "6037:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1886,
														"name": "_holdTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "6051:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6037:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1888,
												"nodeType": "ExpressionStatement",
												"src": "6037:23:8"
											},
											{
												"expression": {
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1889,
														"name": "transferCooldown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "6071:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1890,
														"name": "_cooldown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "6090:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6071:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1892,
												"nodeType": "ExpressionStatement",
												"src": "6071:28:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1894,
															"name": "_holdTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "6161:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1895,
															"name": "_cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "6185:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1893,
														"name": "SecurityParamsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "6125:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6125:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1897,
												"nodeType": "EmitStatement",
												"src": "6120:85:8"
											}
										]
									},
									"functionSelector": "058c72fc",
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1883,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1882,
												"name": "onlyOwner",
												"nameLocations": [
													"6016:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6016:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6016:9:8"
										}
									],
									"name": "updateSecurityParams",
									"nameLocation": "5923:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "_holdTime",
												"nameLocation": "5962:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5954:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5954:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "_cooldown",
												"nameLocation": "5990:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5982:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5982:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5943:63:8"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6026:0:8"
									},
									"scope": 1978,
									"src": "5914:299:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "6334:182:8",
										"statements": [
											{
												"body": {
													"id": 1935,
													"nodeType": "Block",
													"src": "6390:119:8",
													"statements": [
														{
															"expression": {
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1920,
																		"name": "isBlacklisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1364,
																		"src": "6405:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1924,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1921,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "6419:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1923,
																		"indexExpression": {
																			"id": 1922,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1910,
																			"src": "6428:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6419:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6405:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1925,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1904,
																	"src": "6434:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6405:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1927,
															"nodeType": "ExpressionStatement",
															"src": "6405:35:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1929,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "6477:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1931,
																		"indexExpression": {
																			"id": 1930,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1910,
																			"src": "6486:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6477:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1932,
																		"name": "status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1904,
																		"src": "6490:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1928,
																	"name": "BlacklistUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "6460:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,bool)"
																	}
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6460:37:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1934,
															"nodeType": "EmitStatement",
															"src": "6455:42:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1913,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1910,
														"src": "6364:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1914,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "6368:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6377:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6368:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6364:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1936,
												"initializationExpression": {
													"assignments": [
														1910
													],
													"declarations": [
														{
															"constant": false,
															"id": 1910,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6357:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1936,
															"src": "6349:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1909,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6349:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1912,
													"initialValue": {
														"hexValue": "30",
														"id": 1911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6361:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6349:13:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6385:3:8",
														"subExpression": {
															"id": 1917,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "6385:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1919,
													"nodeType": "ExpressionStatement",
													"src": "6385:3:8"
												},
												"nodeType": "ForStatement",
												"src": "6345:164:8"
											}
										]
									},
									"functionSelector": "6072e6a8",
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1907,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1906,
												"name": "onlyOwner",
												"nameLocations": [
													"6324:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6324:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6324:9:8"
										}
									],
									"name": "batchUpdateBlacklist",
									"nameLocation": "6252:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "6292:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "6273:27:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1900,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6273:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1901,
													"nodeType": "ArrayTypeName",
													"src": "6273:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "6307:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "6302:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1903,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6302:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:42:8"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6334:0:8"
									},
									"scope": 1978,
									"src": "6243:273:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "6615:182:8",
										"statements": [
											{
												"body": {
													"id": 1974,
													"nodeType": "Block",
													"src": "6671:119:8",
													"statements": [
														{
															"expression": {
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1959,
																		"name": "isWhitelisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "6686:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1963,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1960,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1941,
																			"src": "6700:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1962,
																		"indexExpression": {
																			"id": 1961,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1949,
																			"src": "6709:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6700:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6686:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1964,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "6715:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6686:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1966,
															"nodeType": "ExpressionStatement",
															"src": "6686:35:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1968,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1941,
																			"src": "6758:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1970,
																		"indexExpression": {
																			"id": 1969,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1949,
																			"src": "6767:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6758:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1971,
																		"name": "status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1943,
																		"src": "6771:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1967,
																	"name": "WhitelistUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "6741:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,bool)"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6741:37:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1973,
															"nodeType": "EmitStatement",
															"src": "6736:42:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1952,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "6645:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1953,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "6649:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6658:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6649:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6645:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1975,
												"initializationExpression": {
													"assignments": [
														1949
													],
													"declarations": [
														{
															"constant": false,
															"id": 1949,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6638:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1975,
															"src": "6630:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1948,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6630:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1951,
													"initialValue": {
														"hexValue": "30",
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6642:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6630:13:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6666:3:8",
														"subExpression": {
															"id": 1956,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "6666:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1958,
													"nodeType": "ExpressionStatement",
													"src": "6666:3:8"
												},
												"nodeType": "ForStatement",
												"src": "6626:164:8"
											}
										]
									},
									"functionSelector": "611274c5",
									"id": 1977,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1946,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1945,
												"name": "onlyOwner",
												"nameLocations": [
													"6605:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6605:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6605:9:8"
										}
									],
									"name": "batchUpdateWhitelist",
									"nameLocation": "6533:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "6573:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "6554:27:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1939,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6554:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1940,
													"nodeType": "ArrayTypeName",
													"src": "6554:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "6588:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "6583:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1942,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6583:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6553:42:8"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6615:0:8"
									},
									"scope": 1978,
									"src": "6524:273:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1979,
							"src": "297:6503:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								1392,
								1398,
								1404,
								1410,
								1416,
								1422
							]
						}
					],
					"src": "33:6769:8"
				},
				"id": 8
			}
		}
	}
}